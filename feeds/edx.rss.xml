<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>writing for time</title><link>/</link><description></description><atom:link href="/feeds/edx.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 16 Aug 2016 00:00:00 +0000</lastBuildDate><item><title>edX折腾笔记之为移动端提供论坛接口</title><link>/edx-forum-api.html</link><description>&lt;p&gt;官方给出的mobile-api中，http://edx-platform-api.readthedocs.org/en/latest/index.html，主要是以课程为核心。&lt;/p&gt;
&lt;p&gt;没有论坛相关的部分。而论坛是交流的中心。&lt;/p&gt;
&lt;p&gt;那么我们直接去挖数据库好了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 16 Aug 2016 00:00:00 +0000</pubDate><guid>tag:,2016-08-16:edx-forum-api.html</guid><category>edx</category></item><item><title>为Open edX移动端实现选课功能</title><link>/edx-mobile-enrollment.html</link><description>&lt;p&gt;Open edX移动端进展缓慢，几个月前的坑也不见填好。&lt;/p&gt;
&lt;p&gt;现有的后台接口已经满足选课要求了,移动端还没更上，只能自己动手丰衣足食了，在此演示如何使用这些接口实现选课功能（使用工具&lt;a href="https://github.com/jkbrzt/httpie"&gt;httpie&lt;/a&gt;（把它理解为一个更先进的curl就行）做演示）&lt;/p&gt;
&lt;h3&gt;列出所有课程&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;http http://LMS_HOST/api/courses/v1/courses/&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;pagination&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;next&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://LMS_HOST/api/courses/v1/courses/?page=2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;num_pages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;previous&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;results&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;blocks_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://LMS_HOST/api/courses/v1/blocks/?course_id=course-v1%3test%2Btest%2Btest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;course_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:test+test+test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;effort&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2016-09-29T16:00:00Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;enrollment_end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;enrollment_start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;media&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;course_image&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/asset-v1:test+test+test+type@asset+block@logo.jpg&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;course_video&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;short_description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2016-02-01T00:00:00Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;start_display&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2015年2月1日&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;start_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;值得关注的字段是&lt;code&gt;course_id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更多的字段信息参考文档 ：&lt;a href="http://edx.readthedocs.io/projects/edx-platform-api/en/latest/courses/courses.html#courses-api-courses-resource"&gt;courses-api-courses-resource&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;用户注册课程(选课)&lt;/h3&gt;
&lt;p&gt;文档参考:&lt;a href="http://edx.readthedocs.io/projects/edx-platform-api/en/latest/enrollment/enrollment.html#view-a-user-s-enrollments-or-enroll-a-user-in-a-course"&gt;View a User’s Enrollments or Enroll a User in a Course&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是命令行演示&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http POST "http://LMS_HOST/api/enrollment/v1/enrollment" course_details:=@course_details.json  "Authorization: Bearer user_access_token"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中必要的POST参数为course_details,文档中的其他参数可选,请求参数举例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{course_details&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;course_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:edX+DemoX+Demo_Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果后端返回200，则表示用户注册课程成功&lt;/p&gt;
&lt;p&gt;当然你也可以在浏览器中直接访问&lt;code&gt;"http://LMS_HOST/api/enrollment/v1/enrollment&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果你想进一步拓展后端的RESTful接口，可以参考我的这个项目：&lt;a href="https://github.com/wwj718/edx_siteapi"&gt;edx_siteapi&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;坑&lt;/h1&gt;
&lt;p&gt;移动端已经有选课功能了，如果你决定直接使用既有功能，可能需要做个调整，请求&lt;code&gt;http://LMS_HOST/api/courses/v1/courses/?username=mooctest&amp;amp;mobile=true&amp;amp;page=1&lt;/code&gt;会报403，进入后台将&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/djangoapps/course_api/views.py#L110"&gt;CourseListView&lt;/a&gt;里的&lt;code&gt;username = self.request.query_params.get('username', self.request.user.username)&lt;/code&gt;改为&lt;code&gt;self.request.user.username&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate><guid>tag:,2016-08-15:edx-mobile-enrollment.html</guid><category>edx</category></item><item><title>Open-edx笔记系统尝鲜</title><link>/try-open-edx-note-system-in-cloud.html</link><description>&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;我此前写过几篇笔记系统相关的文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.just4fun.site/use-notes-in-cypress.html"&gt;在edX Cypress中启用notes功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.just4fun.site/open-edx-note-system.html"&gt;Open edx笔记系统探究&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;一图胜千言&lt;/h1&gt;
&lt;p&gt;&lt;img alt="笔记前端" src="https://leanote.com/api/file/getImage?fileId=57909fc0ab644133ed01bee0" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="搜索" src="https://leanote.com/api/file/getImage?fileId=57909f9dab644133ed01bede" /&gt;&lt;/p&gt;
&lt;h1&gt;使用我的笔记服务&lt;/h1&gt;
&lt;p&gt;之前搭建了一个笔记云服务，hack了许多代码（实际上弃用了安全保护机制，不建议大家这样做），已经面目全非，和官方版本相去甚远，建议大家笔记后端使用官方版本（估计下个版本就有了）&lt;/p&gt;
&lt;h3&gt;edx-platform中要做的配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout 70d57327eb3f592067cabb2b4655088101266bcd -- /edx/app/edxapp/edx-platform/lms/djangoapps/edxnotes/helpers.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sudo /edx/bin/python.edxapp /edx/bin/manage.edxapp lms --setting=aws create_oauth2_client https://note.just4fun.site https://note.just4fun.site/complete/edx-oidc/ confidential --client_name edx-notes --client_id edx-notes-id --client_secret edx-notes-secret --trusted&lt;/li&gt;
&lt;li&gt;修改/edx/app/edxapp/lms.env.json,使&lt;code&gt;ENABLE_EDXNOTES&lt;/code&gt;为true,在EDXNOTES_INTERNAL_API和EDXNOTES_PUBLIC_API都填入&lt;code&gt;https://note.just4fun.site/api/v1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改/edx/app/edxapp/cms.env.json,使&lt;code&gt;ENABLE_EDXNOTES&lt;/code&gt;为true&lt;/li&gt;
&lt;li&gt;在studio中进入课程的高级设置，启用笔记选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="高级设置" src="https://leanote.com/api/file/getImage?fileId=57909e08ab644133ed01bec4" /&gt;&lt;/p&gt;
&lt;h3&gt;申请使用&lt;/h3&gt;
&lt;p&gt;把你的lms-url发我邮箱，我把你的lms-url加入白名单&lt;/p&gt;
&lt;h3&gt;坑&lt;/h3&gt;
&lt;p&gt;需要先对内容批注，才能查阅/搜索笔记，否则可能报错&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;h3&gt;一些git的使用技巧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;git show commit_id //显示一次提交的细节&lt;/li&gt;
&lt;li&gt;gitk filename //查看一个文件的历史&lt;/li&gt;
&lt;li&gt;git checkout commit_id -- filename //重置某个文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openedx.atlassian.net/wiki/display/OpenOPS/How+to+Get+edX+Notes+Running"&gt;How to Get edX Notes Running&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate><guid>tag:,2016-07-21:try-open-edx-note-system-in-cloud.html</guid><category>edx</category></item><item><title>为edX批量导入用户</title><link>/edx-user-import.html</link><description>&lt;p&gt;--更新于：2016-07-13&lt;/p&gt;
&lt;p&gt;近期重写这部分，使其成为&lt;code&gt;django management command&lt;/code&gt; (在dogwood版本下测试可用)&lt;/p&gt;
&lt;p&gt;原因有二，其一是之前所用的功能函数不完备,随着对edx的了解深入，想用更安全的函数来完成批量注册功能，其二是希望做到更好的内聚性&lt;/p&gt;
&lt;p&gt;这部分是从我的&lt;a href="https://github.com/wwj718/edx_siteapi"&gt;edx_siteapi&lt;/a&gt;抽出的一个功能模块，edx_siteapi项目试图把edx的一些功能变为RESTful api接口(类似canvas做的)，供外部系统调用和整合，有兴趣的小伙伴可以关注这个项目&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;在搭建edX的时候，可能面临一个这样的需求：批量导入学生作为用户。&lt;br /&gt;
即便是采用cas注册这个需求可能依旧存在，校内系统可能存有用户课程关系，需要预先导入,所以用户实体需要预先存在系统中，而cas是一种首次登录才注册的机制  &lt;/p&gt;
&lt;p&gt;有时我们可能需要批量从既有数据库中导入用户，尤其是将Open edX用于SPOC中时&lt;/p&gt;
&lt;p&gt;在此给出一个可行的解决方案。&lt;/p&gt;
&lt;h2&gt;大体思路&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;从校方数据库中导出用户文件(csv格式)&lt;/li&gt;
&lt;li&gt;写脚本从csv文件中取得所需的字段（诸如学号，姓名）&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;django management command&lt;/code&gt;将用户导入系统（利用django management command能调用django上下文的机制，这也是此次更新的主要地方）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;实施细节&lt;/h2&gt;
&lt;p&gt;我们假设从数据库导出的文件student.csv 如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;姓名,学号,email,专业,班级
张三,201011,zs@qq.com,热能动力工程,动力1007班
李四,201012,ls@qq.com,热能动力工程,动力1008班
王五,201013,ww@qq.com,热能动力工程,动力1009班
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意逗号前后的空格是有影响的！&lt;/p&gt;
&lt;h3&gt;编写脚本&lt;/h3&gt;
&lt;p&gt;在任意django app目录下创建&lt;code&gt;management/commands/create_user_from_csv.py&lt;/code&gt;,先上代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;optparse&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;make_option&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;student.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AccountCreationForm&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;student.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;create_comments_service_user&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;student.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;_do_create_account&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AccountValidationError&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;track.management.tracked_command&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TrackedCommand&lt;/span&gt;
&lt;span class="c1"&gt;# 解析csv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unicodecsv&lt;/span&gt;  &lt;span class="c1"&gt;# utf-8 ,也可以用pandas:&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AccountCreationForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
                               &lt;span class="n"&gt;tos_required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_do_create_account&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;reg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;reg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c1"&gt;#create_comments_service_user(user) #这会促发网络请求&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;AccountValidationError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;


&lt;span class="c1"&gt;# wget https://raw.githubusercontent.com/edx/edx-platform/named-release/dogwood.rc/common/djangoapps/student/management/commands/create_user.py&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TrackedCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    example:&lt;/span&gt;
&lt;span class="s2"&gt;        # Enroll a user test@example.com into the demo course&lt;/span&gt;
&lt;span class="s2"&gt;        # The username and name will default to &amp;quot;test&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;        sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms create_user_from_csv --help --settings devstack&lt;/span&gt;
&lt;span class="s2"&gt;        sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms create_user_from_csv --csv /edx/app/edxapp/edx-platform/lms/djangoapps/siteapi/student.csv --settings devstack&lt;/span&gt;
&lt;span class="s2"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;u&amp;quot;批量导入用户&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;option_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option_list&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;make_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;#采用绝对路径&lt;/span&gt;
                    &lt;span class="n"&gt;metavar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CSV&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;用户注册表&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;csv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;f_csv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unicodecsv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DictReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f_csv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;u&amp;quot;姓名&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;u&amp;quot;学号&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;u&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;u&amp;quot;姓名&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;
                &lt;span class="n"&gt;create_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# 缺乏读写csv的技巧,next和边界，按header读取&lt;/span&gt;
        &lt;span class="c1"&gt;# http://python3-cookbook.readthedocs.io/zh_CN/latest/c06/p01_read_write_csv_data.html&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试显示，8000名学生的话，大约需要导入十几分钟(旧版本)&lt;/p&gt;
&lt;h3&gt;安装依赖&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/pip.edxapp install unicodecsv #dogwood版不需要
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;开始导入&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms create_user_from_csv --csv /tmp/student.csv --settings devstack&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;开始使用&lt;/h3&gt;
&lt;p&gt;在/login中使用email和password登录即可。&lt;/p&gt;
&lt;p&gt;对于不想使用这种登录方式的，可以自己来写用户认证，诸如使用username和password登录之类的&lt;/p&gt;
&lt;h3&gt;后记&lt;/h3&gt;
&lt;p&gt;文中我们创建用户使用的是python代码。&lt;/p&gt;
&lt;p&gt;如果是单独创建用户，也可以用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms  create_user --username test123 --name test123  --password test123 --email test123@qq.com 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果你愿意也可以采用http请求创建，详情可以跟踪sysadmin里的创建用户功能（封装成restful接口可用作异构系统接口）&lt;/p&gt;
&lt;h1&gt;坑&lt;/h1&gt;
&lt;p&gt;删除用户之后创建同名用户，会造成:CommentClientRequestError: u'["Username is already taken"]',猜测是评论系统内依然留存有用户造成的,而评论系统是个异构系统(mongodb)&lt;/p&gt;
&lt;p&gt;线索：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;import lms.lib.comment_client as cc&lt;/li&gt;
&lt;li&gt;cc_user = cc.User.from_django_user(user)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;解决方案&lt;/h3&gt;
&lt;p&gt;如果我们的猜测是对的，应该只要删除点mongodb中的user应该就好了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mongo
use cs_comments_service_development
db.users.find()
db.users.remove({}) #移除所有,也可以写到python脚本里,使用pymongo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一切正常，猜测正确!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate><guid>tag:,2016-07-13:edx-user-import.html</guid><category>edx</category></item><item><title>如何从外部创建edx课程及其可编程性</title><link>/OLX-guide.html</link><description>&lt;p&gt;当我们把Open edX用于spoc中，可能会有这样一种需求：如何将既有课程尽可能自动化得导入到Open edX中&lt;/p&gt;
&lt;p&gt;我想到比较好的一种策略是采用Open edX的Open Learning XML (OLX) 来做这件事&lt;/p&gt;
&lt;h1&gt;Open Learning XML (OLX)&lt;/h1&gt;
&lt;p&gt;Open Learning XML给出了一套课程文本化的描述，采用Open Learning XML，我们可以采用xml来定义我们的课程，从而做到在不使用edX Studio的情况下我们也能制作出所需的课程&lt;/p&gt;
&lt;p&gt;课程的组成结构和元素在Open Learning XML都有相应描述，参考这些描述，你可以通过任何程序/语言生成所需的课程内容，之后导入到Open edX即可&lt;/p&gt;
&lt;h3&gt;OLX的功能&lt;/h3&gt;
&lt;p&gt;顺便我们也援引一下官方对OLX功能的描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在不同的Open edx实例网站中迁移课程&lt;/li&gt;
&lt;li&gt;在studio外部创建课程，包括转化自不同格式的内容&lt;/li&gt;
&lt;li&gt;保证内容格式的开放性和可移植性&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;OLX与跨平台导课&lt;/h1&gt;
&lt;p&gt;假设学校已有一套采用Java语言写成的教学系统，现在我们想使用Open edX，而不想废弃既有平台的课程，那么一般的做法是认为地将课程进行转化，如果课程数量庞大，这项工作就极其耗时&lt;/p&gt;
&lt;p&gt;需要说明的是，由于平台特性上的差异，在转化之前你应当尽可能理解两个平台的特性，然后你作为一个“翻译者”，将内容形式进行转化，这部分的工作，机器无法帮到你，需要你花时间去理解课程结构,理解之后，你就可以开始将旧平台的课程，导出为OLX结构的文档，之后导入到Open edX平台中&lt;/p&gt;
&lt;h1&gt;OLX入门&lt;/h1&gt;
&lt;p&gt;如果官方能把create new repo的时间用来好好写文档，那么这部分本该很完备的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.io/projects/edx-open-learning-xml/en/latest/getting-started.html"&gt;Getting Started with OLX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.io/projects/edx-open-learning-xml/en/latest/tasks/deploy-lms.html"&gt;Build a Course in OLX and Deploy to the edX LMSi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然而由于跳票的习惯，这部分也只是有个大纲，并没有内容，所有需要我们自力更生&lt;/p&gt;
&lt;h3&gt;课程结构&lt;/h3&gt;
&lt;p&gt;关于课程结构可以参考这个文档&lt;a href="http://edx.readthedocs.io/projects/edx-open-learning-xml/en/latest/directory-structure.html"&gt;OLX Course Structure&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;demo&lt;/h1&gt;
&lt;p&gt;文档枯燥，我们还是那一个课程demo来遛一遛吧,可以&lt;a href="http://edx.readthedocs.io/projects/edx-open-learning-xml/en/latest/example-course/index.html"&gt;Example of an OLX Course&lt;/a&gt;,习惯阅读英文的话，可以跟着文档走一遍，不习惯的话，可以跟着下文摸索&lt;/p&gt;
&lt;p&gt;我们以官方示范课程为例:&lt;a href="https://github.com/edx/edx-demo-course"&gt;edx-demo-course&lt;/a&gt;,这门课在新安装的平台中都预制了，在studio中导出到本地，然后解压后即可看到如下结构&lt;/p&gt;
&lt;p&gt;tree ./course -d(列出所有目录)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;├── about
├── annotatable
├── assets
├── chapter
├── course
├── discussion
├── drafts
│   ├── annotatable
│   ├── discussion
│   ├── html
│   ├── problem
│   ├── vertical
│   └── video
├── html
├── info
├── policies
│   └── course
├── problem
├── sequential
├── static
│   ├── VGL
│   │   ├── edx
│   │   ├── localhost
│   │   ├── mitx-lms
│   │   ├── mitx-staging
│   │   ├── original
│   │   └── sandbox
│   ├── applets
│   ├── css
│   ├── handouts
│   ├── images
│   ├── js
│   │   ├── IGV
│   │   │   ├── js
│   │   │   └── resources
│   │   ├── i18n
│   │   └── loupeAndLightbox
│   ├── jsmol
│   │   └── j2s
│   │       ├── com
│   │       │   └── jcraft
│   │       │       └── jzlib
│   │       ├── java
│   │       │   ├── awt
│   │       │   │   └── event
│   │       │   ├── io
│   │       │   ├── lang
│   │       │   │   ├── annotation
│   │       │   │   └── reflect
│   │       │   ├── net
│   │       │   ├── text
│   │       │   └── util
│   │       │       ├── regex
│   │       │       └── zip
│   │       ├── make
│   │       ├── org
│   │       │   └── jmol
│   │       │       ├── adapter
│   │       │       │   ├── readers
│   │       │       │   │   ├── cifpdb
│   │       │       │   │   ├── molxyz
│   │       │       │   │   ├── more
│   │       │       │   │   ├── quantum
│   │       │       │   │   ├── simple
│   │       │       │   │   ├── xml
│   │       │       │   │   └── xtal
│   │       │       │   └── smarter
│   │       │       ├── api
│   │       │       ├── appletjs
│   │       │       ├── atomdata
│   │       │       ├── awtjs
│   │       │       ├── awtjs2d
│   │       │       ├── bspt
│   │       │       ├── constant
│   │       │       ├── exportjs
│   │       │       ├── g3d
│   │       │       ├── geodesic
│   │       │       ├── i18n
│   │       │       ├── io
│   │       │       ├── io2
│   │       │       ├── jvxl
│   │       │       │   ├── api
│   │       │       │   ├── calc
│   │       │       │   ├── data
│   │       │       │   └── readers
│   │       │       ├── minimize
│   │       │       │   └── forcefield
│   │       │       │       └── data
│   │       │       ├── modelset
│   │       │       ├── modelsetbio
│   │       │       ├── navigate
│   │       │       ├── parallel
│   │       │       ├── quantum
│   │       │       ├── render
│   │       │       ├── renderbio
│   │       │       ├── renderspecial
│   │       │       ├── rendersurface
│   │       │       ├── script
│   │       │       ├── shape
│   │       │       ├── shapebio
│   │       │       ├── shapespecial
│   │       │       ├── shapesurface
│   │       │       ├── smiles
│   │       │       ├── symmetry
│   │       │       ├── thread
│   │       │       ├── util
│   │       │       └── viewer
│   │       │           └── binding
│   │       └── test
│   ├── molecules
│   ├── python
│   └── subs
├── tabs
├── vertical
└── video

115 directories
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中大多目录一目了然&lt;/p&gt;
&lt;h3&gt;课程meta信息&lt;/h3&gt;
&lt;p&gt;参见root目录下的course.xml文件，这就是我们在studio中创建课程时，填写的数据&lt;/p&gt;
&lt;h3&gt;关联信息&lt;/h3&gt;
&lt;p&gt;课程的结构描述信息在course/course.xml，高级配置也在其中,这个文件的命名规则由根目录下的course.xml文件的url_name字段信息确定&lt;/p&gt;
&lt;p&gt;而course/course.xml可视为这门课程的地图&lt;/p&gt;
&lt;h3&gt;结构细节&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://edx.readthedocs.io/projects/edx-open-learning-xml/en/latest/studio-example/manual-testing-structure.html#the-courseware-structure-file"&gt;The Structure of the Manual Testing Course&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于demo课程的细节，可以阅读这篇文档&lt;/p&gt;
&lt;p&gt;其中可能引起的疑惑有两个&lt;/p&gt;
&lt;p&gt;其一是资源定位的问题，如何关联到相关资源，OLX给出的策略似乎是uuid,生成规则猜测为:&lt;code&gt;uuid.uuid4().get_hex()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其二是unicode（中文）编码的问题，如果你看到你的&lt;code&gt;python入门.pdf&lt;/code&gt;在OLX文档中变为&lt;code&gt;python\u5165\u95e8.pdf&lt;/code&gt;这是完全正常的&lt;/p&gt;
&lt;h1&gt;附&lt;/h1&gt;
&lt;h3&gt;UUID&lt;/h3&gt;
&lt;p&gt;UUID是128位的全局唯一标识符，通常由32字节的字符串表示。它可以保证时间和空间的唯一性，也称为GUID&lt;/p&gt;
&lt;p&gt;UUID主要有五个算法，也就是五种方法来实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uuid1()——基于时间戳。由MAC地址、当前时间戳、随机数生成。可以保证全球范围内的唯一性， 但MAC的使用同时带来安全性问题，局域网中可以使用IP来代替MAC&lt;/li&gt;
&lt;li&gt;uuid2()——基于分布式计算环境DCE（Python中没有这个函数）&lt;/li&gt;
&lt;li&gt;uuid3()——基于名字的MD5散列值：通过计算名字和命名空间的MD5散列值得到，保证了同一命名空间中不同名字的唯一性， 和不同命名空间的唯一性，但同一命名空间的同一名字生成相同的uuid。 &lt;/li&gt;
&lt;li&gt;uuid4()——基于随机数，由伪随机数得到，有一定的重复概率，该概率可以计算出来&lt;/li&gt;
&lt;li&gt;uuid5()——基于名字的SHA-1散列值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若在Global的分布式计算环境下，最好用uuid1；若有名字的唯一性要求，最好用uuid3或uuid5。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.io/projects/edx-open-learning-xml/en/latest/"&gt;edX Open Learning XML Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate><guid>tag:,2016-06-28:OLX-guide.html</guid><category>edx</category></item><item><title>利用CSRF漏洞对Open edX进行提权</title><link>/use-csrf-to-attack-edx.html</link><description>&lt;blockquote&gt;
&lt;p&gt;这个世界上只有两种系统，一种是被黑过的系统，一种是被黑了也不知情的系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天一早@MT在群里发了一个漏洞报告&lt;a href="https://open.edx.org/announcements/cross-site-request-forgery-bug-edx-lms"&gt;Cross Site Request Forgery Bug in edX LMS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;报告显示这是一个高危漏洞，报告里说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In one specific case users could potentially escalate their privileges via an attack against staff or super users.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;起初我还没在意，我粗略看了一下针对这个漏洞的&lt;a href="https://github.com/edx/edx-platform/commit/d54f79f5bf3e1af17063937df1abc0026843412d.patch"&gt;Patch&lt;/a&gt;,并没发现报告中提到的&lt;code&gt;one specific case&lt;/code&gt;，而后突然想到一个可能的攻击方法，动手一试，果然可行&lt;/p&gt;
&lt;p&gt;我试着对自己维护的线上系统进行提权攻击，让大家看到漏洞的严重性，以便给大家有动力去修复它&lt;/p&gt;
&lt;p&gt;最后会给出应对策略&lt;/p&gt;
&lt;h1&gt;攻击演示&lt;/h1&gt;
&lt;p&gt;首先这是一种CSRF攻击，&lt;/p&gt;
&lt;h3&gt;背景知识：CSRF&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。[1] 跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;CSRF攻击的细节&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;跨站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并执行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去执行。这利用了web中用户身份验证的一个漏洞：简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有了以上两个对CSRF的了解（假设你也理解cookie的机制），我们就可以展开攻击了&lt;/p&gt;
&lt;p&gt;参考 ： &lt;a href="https://zh.wikipedia.org/zh/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0"&gt;跨站请求伪造&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;攻击过程&lt;/h3&gt;
&lt;h5&gt;目标&lt;/h5&gt;
&lt;p&gt;我对线上服务器进行提权攻击&lt;/p&gt;
&lt;p&gt;目标服务参数：Ubuntu12.04 64bit 运行Open edx dogwood &lt;/p&gt;
&lt;h5&gt;攻击细节&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;注册用户，选修课程&lt;/li&gt;
&lt;li&gt;给授课教师发送一份邮件，诱使被攻击者点击目标链接，如&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href="http://MY_LMS/courses/course-v1:forum_test+forum_test+forum_test/bu/gao/su/ni?unique_student_identifier=wwj&amp;amp;rolename=staff&amp;amp;action=allow"&amp;gt;点我点我&amp;lt;/a&amp;gt;&lt;/code&gt; （修改细节）&lt;/p&gt;
&lt;p&gt;至于如何鼓励被攻击者点击，这就是一个社会工程的问题了，不讨论&lt;/p&gt;
&lt;p&gt;这是最初的课程团队&lt;/p&gt;
&lt;p&gt;&lt;img alt="原始课程团队" src="http://7xrc4h.com1.z0.glb.clouddn.com/csrf1.png" /&gt;&lt;/p&gt;
&lt;p&gt;这是攻击邮件&lt;/p&gt;
&lt;p&gt;&lt;img alt="攻击邮件" src="http://7xrc4h.com1.z0.glb.clouddn.com/csrf2.png" /&gt;&lt;/p&gt;
&lt;p&gt;被攻击者点击链接后，用户wwj成功被提权为staff，有课程的所有权限！&lt;/p&gt;
&lt;p&gt;攻击成功之后的团队成员列表&lt;/p&gt;
&lt;p&gt;&lt;img alt="攻击完成" src="http://7xrc4h.com1.z0.glb.clouddn.com/csrf3.png" /&gt;&lt;/p&gt;
&lt;p&gt;成功提权，而后可以对课程做大多数的操作，包括添加学生，增删课程，增删学生，增删帖子等几乎针对课程的所有权限&lt;/p&gt;
&lt;h3&gt;漏洞分析&lt;/h3&gt;
&lt;p&gt;漏洞成因，报告中有说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Although the platform is already using Django’s Cross-Site Request Forgery (CSRF) middleware protection, some endpoints with side effects were found to be using GET methods&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一种设计失误，不应该用get做非幂等操作&lt;/p&gt;
&lt;p&gt;尤其是涉及权限操作的部分，应当放在csrf保护之下&lt;/p&gt;
&lt;h1&gt;策略&lt;/h1&gt;
&lt;p&gt;报告里也提到了应对策略&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;some endpoints with side effects were found to be using GET methods. The patch forces these endpoints to require POST, which also properly enables CSRF protection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;具体而言可以为当前使用的版本打&lt;a href="https://github.com/edx/edx-platform/commit/d54f79f5bf3e1af17063937df1abc0026843412d.patch"&gt;Patch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于如何使用打Patch可以参考这里&lt;a href="https://ariejan.net/2009/10/26/how-to-create-and-apply-a-patch-with-git/"&gt;How to create and apply a patch with Git&lt;/a&gt;，因为git apply 是一个事务性的操作，补丁要么都打上去，要么全部放弃，所以不要害怕有后遗症&lt;/p&gt;
&lt;p&gt;对于新安装的平台，采用新的代码就不存在这个问题了，目前的bug只在遗留系统存在&lt;/p&gt;
&lt;p&gt;考虑到CSRF攻击的模式，在漏洞修复之前，应该通知拥有课程管理权限的人员以及网站管理者不要点击未知邮件的链接/图片&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate><guid>tag:,2016-06-20:use-csrf-to-attack-edx.html</guid><category>edx</category></item><item><title>招数据分析/机器学习方面的全职/实习生</title><link>/join-us2.html</link><description>&lt;p&gt;公司在教育领域积累了大量用户数据，为了消化这些数据，我们之前的方案是可视化和数据报表&lt;/p&gt;
&lt;p&gt;为了提高自动化程度和模式发现能力，我们想加强在数据分析/机器学习平台方面的建设，目前还缺少你这样的对教育行业数据感兴趣，同时又有数据分析/机器学习技能的人&lt;/p&gt;
&lt;p&gt;有兴趣的同学一起来折腾吧~&lt;/p&gt;
&lt;p&gt;如果你熟悉以下技能最好啦&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;django/flask中的一种&lt;/li&gt;
&lt;li&gt;pandas/scikit-learn&lt;/li&gt;
&lt;li&gt;elk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然啦，即便不熟悉也没关系，如果你对数据本身感兴趣并有探索的欲望，工程上的能力是容易提高的，不大容易成为你的绊脚石&lt;/p&gt;
&lt;p&gt;有兴趣的小伙伴可以发邮件细聊：wuwenjie718@gmail.com&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 06 Jun 2016 00:00:00 +0000</pubDate><guid>tag:,2016-06-06:join-us2.html</guid><category>edx</category></item><item><title>django-cas可能引起的安全漏洞</title><link>/django-cas-bug.html</link><description>&lt;p&gt;我之前改造了&lt;a href="https://github.com/kstateome/django-cas"&gt;kstateome/django-cas&lt;/a&gt;,使其适合Open edX使用（&lt;a href="https://github.com/wwj718/django-cas"&gt;wwj718/django-cas&lt;/a&gt;），今早去某高校，讨论些东西，期间谈到需要可能更改cas的既有逻辑，于是回来重新翻了下&lt;a href="https://github.com/wwj718/django-cas"&gt;wwj718/django-cas&lt;/a&gt;的源码，发现其中有一个潜在的安全隐患&lt;/p&gt;
&lt;p&gt;隐患的代码为&lt;a href="https://github.com/wwj718/django-cas/blob/wwj/1.2.0/cas/backends.py#L243"&gt;user = User.objects.create_user(username, '')&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;后果&lt;/h3&gt;
&lt;p&gt;所有由CAS引入系统的用户，初始化密码为空！可以在Open edX的默认登录系统中被无密码登录&lt;/p&gt;
&lt;h3&gt;触发条件&lt;/h3&gt;
&lt;p&gt;可能触发隐患的上下文是，系统采用cas的同时，还保留了原始的登录系统，而且默认情况就是如此&lt;/p&gt;
&lt;p&gt;CAS的登录入口和edx默认的登录路口是并列关系（这可能带来很多问题）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;urlpatterns += (
# CAS
url(r&amp;#39;^accounts/login/$&amp;#39;, &amp;#39;cas.views.login&amp;#39;, name=&amp;#39;login&amp;#39;),
url(r&amp;#39;^accounts/logout/$&amp;#39;, &amp;#39;cas.views.logout&amp;#39;, name=&amp;#39;logout&amp;#39;),
)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意url里的name，会覆盖原先的reverse，这是django的url机制引起的&lt;/p&gt;
&lt;h3&gt;策略&lt;/h3&gt;
&lt;p&gt;把cas作为唯一的登录方式，基本的做法是，覆盖原先的登录入口（修改url，注视掉原先的登录入口，不过edx的登录是以ajax的方式，禁用url可能还不够安全，更多细节我暂时没时间查看），更为彻底的做法是禁用django的默认认证后端&lt;/p&gt;
&lt;h3&gt;todo&lt;/h3&gt;
&lt;p&gt;模仿&lt;a href="https://github.com/mitocw/django-cas/blob/60a5b8e5a62e63e0d5d224a87f0b489201a0c695/django_cas/backends.py"&gt;mitocw/django-cas&lt;/a&gt;的做法，不允许密码登录&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;user = User(username=username, email=username)
user.set_unusable_password()
...
user.save()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;值得一提的是&lt;a href="https://github.com/mitocw/django-cas/blob/60a5b8e5a62e63e0d5d224a87f0b489201a0c695/django_cas/backends.py"&gt;mitocw/django-cas&lt;/a&gt;也用了django的User，这样一来，不还是有关联profile的问题么&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate><guid>tag:,2016-06-01:django-cas-bug.html</guid><category>edx</category></item><item><title>整合canvas lms和Open edX</title><link>/canvas-and-Open-edx.html</link><description>&lt;h1&gt;canvas lms是什么&lt;/h1&gt;
&lt;p&gt;Canvas被Black Duck标榜为"唯一的一款商业开源学习管理系统，而且是唯一的一款部署在云端的学习管理系统LMS"&lt;/p&gt;
&lt;p&gt;Black Duck又是什么，如果你关注开源软件，想必对Black Duck也很熟悉了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Black Duck Software helps the world's most innovative companies streamline, safeguard, and manage their use of open source software.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Black Duck对开源软件的评价还是相对靠谱的&lt;/p&gt;
&lt;p&gt;Canvas的确是一款优秀的lms，界面美观/功能完备/丰富的API，尤其适合校内教学使用，有班级/小组/学期的概念&lt;/p&gt;
&lt;h1&gt;几张截图&lt;/h1&gt;
&lt;h3&gt;教师视角&lt;/h3&gt;
&lt;p&gt;&lt;img alt="canvas_teacher.jpg" src="http://7kttuq.com1.z0.glb.clouddn.com/canvas_teacher.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;学生视角&lt;/h3&gt;
&lt;p&gt;&lt;img alt="student.png" src="http://7kttuq.com1.z0.glb.clouddn.com/student.png" /&gt;&lt;/p&gt;
&lt;h1&gt;功能/特色&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;支持多种认证&lt;ul&gt;
&lt;li&gt;cas&lt;/li&gt;
&lt;li&gt;oauth2&lt;/li&gt;
&lt;li&gt;and so on&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;支持LTI 2&lt;/li&gt;
&lt;li&gt;Open api(RESTful)&lt;/li&gt;
&lt;li&gt;国际化&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;课程主体&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;主页&lt;/li&gt;
&lt;li&gt;通告 &lt;/li&gt;
&lt;li&gt;作业 &lt;/li&gt;
&lt;li&gt;讨论&lt;/li&gt;
&lt;li&gt;评分&lt;/li&gt;
&lt;li&gt;人员&lt;/li&gt;
&lt;li&gt;页面&lt;/li&gt;
&lt;li&gt;文件&lt;/li&gt;
&lt;li&gt;大纲&lt;/li&gt;
&lt;li&gt;成果 &lt;/li&gt;
&lt;li&gt;测验 &lt;/li&gt;
&lt;li&gt;单元 &lt;/li&gt;
&lt;li&gt;设置&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;online and on-campus&lt;/h1&gt;
&lt;p&gt;学校可能有这样一种需求，既需要针对校内的教学，由想有自己的online平台，这两种教学场景天生有其不同的地方，很难靠一套系统来满足，校内教学可能需要教学辅助的功能，需要有对学习资料的管理，需要有班级/学期的概念，需要更多的师生交流&lt;/p&gt;
&lt;p&gt;canvas是解决这个问题的绝佳工具，可能是目前最好的工具&lt;/p&gt;
&lt;p&gt;而online的平台，更多的是mooc的概念，风格上更偏向互联网，架构上优先考虑高并发，所以设计上自然是分布式的&lt;/p&gt;
&lt;p&gt;而由于考虑到一个课堂容纳的众多人数，online的系统设计上不会考虑丰富的教/学互动，诸如主观题在Open edx中并不存在，除非使用AI，否则教师没有经历对每个学生的答案进行人工点评&lt;/p&gt;
&lt;p&gt;online and on-campus需求的不同，以至于我们很难拓展一个系统来满足两种需求，如果你试图这样做，打造出来的"大而全"工具，可能会显得臃肿而不够灵活，更好的选择，是选两个独立的工具，每一个do one thing and do it
 well，那么如何打通两者，使课程内容能在两者中流通，就是问题的关键了&lt;/p&gt;
&lt;h1&gt;先例&lt;/h1&gt;
&lt;p&gt;哈弗大学遇到过这个问题，他们将Open edX用作online系统，而将canvas用作针对校内的on-campus系统，之后试图在这两者中共享资源&lt;/p&gt;
&lt;h1&gt;哈佛的做法&lt;/h1&gt;
&lt;h3&gt;LTI provider and consumer&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open edx同时作为LTI provider and consumer&lt;/li&gt;
&lt;li&gt;Canvas 以及其他的系统作为LTI consumer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是Canvas支持LTI2，而Open edx只支持LTI1.1&lt;/p&gt;
&lt;h1&gt;学习记录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;单点登录&lt;/li&gt;
&lt;li&gt;资源呈现：只呈现资源内容&lt;/li&gt;
&lt;li&gt;成绩： 使用LTI 1.1来传递得分情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;整合案例&lt;/h1&gt;
&lt;p&gt;以下是我的整合案例
首先为Open edX做好LTI相关的配置，记得同步数据库&lt;/p&gt;
&lt;p&gt;接着到admin中生成consumer key&lt;/p&gt;
&lt;p&gt;之后我们在Open edx的studio中创建一门课程资源&lt;/p&gt;
&lt;p&gt;&lt;img alt="canvas_edx" src="http://7kttuq.com1.z0.glb.clouddn.com/canvas_edx.png" /&gt;&lt;/p&gt;
&lt;p&gt;取得课程的资源，拼凑为适合分享的连接，将连接粘贴到canvas中即可&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx2canvas1" src="http://7kttuq.com1.z0.glb.clouddn.com/edx2canvas1.png" /&gt;&lt;/p&gt;
&lt;p&gt;我们就可以在canvas中做任何能在Open edx中做的操作&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx2canvas2" src="http://7kttuq.com1.z0.glb.clouddn.com/edx2canvas2.png" /&gt;&lt;/p&gt;
&lt;p&gt;下面是讨论&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx2canvas3" src="http://7kttuq.com1.z0.glb.clouddn.com/edx2canvas3.png" /&gt;&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;p&gt;用同样的方式，我们可以把Open edX的资源整合到任何支持LTI协议的系统中&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 24 May 2016 00:00:00 +0000</pubDate><guid>tag:,2016-05-24:canvas-and-Open-edx.html</guid><category>edx</category></item><item><title>Open edx笔记系统探究</title><link>/open-edx-note-system.html</link><description>&lt;p&gt;edx笔记系统是很有意思的一个话题&lt;/p&gt;
&lt;h1&gt;架构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;前端&lt;/li&gt;
&lt;li&gt;后端&lt;/li&gt;
&lt;li&gt;通信方式：RESTful接口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由此可知笔记可以作为一项服务&lt;/p&gt;
&lt;h1&gt;前端&lt;/h1&gt;
&lt;h3&gt;笔记库：annotator&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openannotation/annotator"&gt;openannotation/annotator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.annotatorjs.org/en/v1.2.x/"&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;edx中的依赖&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/js/edxnotes/views/shim.js"&gt;shim.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/lms/js/require-config.js#L36"&gt;require-config.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;edx中业务逻辑&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/lms/static/js/edxnotes"&gt;lms/static/js/edxnotes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;后端&lt;/h1&gt;
&lt;h4&gt;已废弃&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/tree/master/lms/djangoapps/notes"&gt;lms/djangoapps/notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;edx-notes-api&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-notes-api"&gt;edx-notes-api&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-notes-api/blob/master/notesapi/v1/search_indexes.py"&gt;search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-notes-api/blob/caf5719aa1fbcf344927c7530a2fd627d9d7782f/notesserver/settings/common.py"&gt;search setting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-notes-api/blob/master/Makefile#L42"&gt;create-index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-notes-api/blob/master/notesapi/v1/views.py"&gt;api 文档（RESTful）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;lms&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/tree/master/lms/djangoapps/edxnotes"&gt;lms/djangoapps/edxnotes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;其他&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/common/lib/xmodule/xmodule/annotator_token.py"&gt;annotator_token&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;RESTful接口&lt;/h1&gt;
&lt;p&gt;通信相关&lt;/p&gt;
&lt;h2&gt;在LMS中记条笔记的来龙去脉&lt;/h2&gt;
&lt;p&gt;在lms里做笔记，观察ajax请求，可以看到笔记以POST方式发往：http://NOTESERVER/api/v1/annotations/&lt;/p&gt;
&lt;p&gt;header中带有&lt;code&gt;x-annotator-auth-token&lt;/code&gt;和&lt;code&gt;X-CSRFToken&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;x-annotator-auth-token&lt;/code&gt;实际上是一个JWT编码的串，放到&lt;a href="https://jwt.io/"&gt;jwt.io&lt;/a&gt;解码完，可看到结果形如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;sub&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;35774bce800db0e8a76980d9c332df73&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;administrator&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ww&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;exp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1464079917&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;iss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://LMS/oauth2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;iat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1464079887&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;preferred_username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ww&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ww@qq.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;aud&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edx-notes-id&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;代码见&lt;a href="https://github.com/edx/edx-platform/blob/master/lms/djangoapps/edxnotes/views.py#L174"&gt;get_token&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上边链接所在的模块就是lms与NOTESERVER通信的模块，通信的url入口为&lt;a href="https://github.com/edx/edx-platform/blob/master/lms/djangoapps/edxnotes/helpers.py#L381"&gt;get_internal_endpoint&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;新技能&lt;/h5&gt;
&lt;p&gt;这里边有个值得注意的地方是：&lt;a href="https://github.com/edx/edx-platform/blob/master/lms/djangoapps/edxnotes/helpers.py#L26"&gt;get_id_token&lt;/a&gt;,这个工具是通用的，如果想用jwt来发送受信信息的话&lt;/p&gt;
&lt;p&gt;通过JWT，我们可以保证数据是被签名过可信任的。&lt;/p&gt;
&lt;p&gt;值得注意的还有当前这部分并不完善，许多地方还是硬编码的,诸如：&lt;a href="https://github.com/edx/edx-platform/blob/master/lms/djangoapps/edxnotes/helpers.py#L35"&gt;CLIENT_NAME&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;观察网络面板，可以看到，发送的数据形如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ranges&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:[{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/div[1]/p[2]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;startOffset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/div[1]/p[2]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;endOffset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;quote&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;你可以观看介绍视频&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;课程介绍&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fun&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;35774bce800db0e8a76980d9c332df73&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;usage_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;block-v1:edX+test+2014_T2+type@html+block@af9f16e4a4704f4ab52bc90e5280ba18&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;course_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;course-v1:edX+test+2014_T2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;相关的前端模型定义在&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/js/edxnotes/models/note.js"&gt;edxnotes/models/note.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前端note工厂为&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/js/edxnotes/views/notes_factory.js"&gt;edxnotes/views/notes_factory.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;user是不是采用了什么编码/加密（和edx的匿名用户id一样吗？）&lt;/p&gt;
&lt;p&gt;对此有兴趣的同学可以参考&lt;a href="https://github.com/edx/edx-platform/blob/master/common/templates/edxnotes_wrapper.html"&gt;common/templates/edxnotes_wrapper.html&lt;/a&gt;,其中关键部分为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;student.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;anonymous_id_for_user&lt;/span&gt;
&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;anonymous_id_for_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;猜测和edx成绩单中匿名用户的机制一样&lt;/p&gt;
&lt;p&gt;出于好奇，追踪到底:&lt;a href="https://github.com/edx/edx-platform/blob/master/common/djangoapps/student/models.py#L107"&gt;anonymous_id_for_user&lt;/a&gt;,至此我们揭开了匿名ip的全部谜团&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Return a unique id for a (user, course) pair&lt;/li&gt;
&lt;li&gt;If user is an &lt;code&gt;AnonymousUser&lt;/code&gt;, returns &lt;code&gt;None&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;核心源码为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;hasher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;hasher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;hasher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;course_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;hasher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;course_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_deprecated_string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;digest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hasher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由此可知，登录用户的anonymous_id是唯一的，使其具有唯一性的影响因素包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;settings.SECRET_KEY（站点级别）&lt;/li&gt;
&lt;li&gt;course_id &lt;/li&gt;
&lt;li&gt;user.id&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;心满意足收场&lt;/p&gt;
&lt;h2&gt;搜索笔记&lt;/h2&gt;
&lt;p&gt;我们在lms的笔记汇总页面&lt;code&gt;http://LMS/courses/course-v1:edX+DemoX+Demo_Course/edxnotes/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;搜索笔记时，发出的http（ajax）请求为&lt;code&gt;http://LMS/courses/course-v1:edX+DemoX+Demo_Course/edxnotes/search/?text=hello&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实际上，这个请求实际上是代理了edx-notes-api。&lt;/p&gt;
&lt;h3&gt;edx-notes-api&lt;/h3&gt;
&lt;p&gt;我们使用httpie来向edx-notes-api请求笔记数据&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://NOTESERVER/api/v1/search/?user=106ecd878f4148a5cabb6bbb0979b730&amp;amp;usage_id=block-v1%3AedX%2BDemoX%2BDemo_Course%2Btype%40html%2Bblock%4082d599b014b246c7a9b5dfc750dc08a9&amp;amp;course_id=course-v1%3AedX%2BDemoX%2BDemo_Course&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;url解码完为&lt;code&gt;http://NOTESERVER/api/v1/search/?user=106ecd878f4148a5cabb6bbb0979b730&amp;amp;usage_id=block-v1:edX+DemoX+Demo_Course+type@html+block@82d599b014b246c7a9b5dfc750dc08a9&amp;amp;course_id=course-v1:edX+DemoX+Demo_Course&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们使用httpie测试&lt;/p&gt;
&lt;p&gt;http "http://NOTESERVER/api/v1/search/?user=106ecd878f4148a5cabb6bbb0979b730&amp;amp;usage_id=block-v1%3AedX%2BDemoX%2BDemo_Course%2Btype%40html%2Bblock%4082d599b014b246c7a9b5dfc750dc08a9&amp;amp;course_id=course-v1%3AedX%2BDemoX%2BDemo_Course" (注意要url编码！)&lt;/p&gt;
&lt;p&gt;得到&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;rows&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;course_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:edX+DemoX+Demo_Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2016-05-12T03:38:24.565900+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;quote&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nks above. At edX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;ranges&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/div[1]/p[2]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;endOffset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;206&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/div[1]/p[2]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;startOffset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;188&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;df&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;updated&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2016-05-12T03:38:24.566048+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;usage_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@82d599b014b246c7a9b5dfc750dc08a9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;106ecd878f4148a5cabb6bbb0979b730&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;course_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:edX+DemoX+Demo_Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2016-05-12T03:09:01.496272+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;quote&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;to&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;ranges&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/div[1]/p[1]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;endOffset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/div[1]/p[1]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;startOffset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;updated&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2016-05-12T03:09:01.496376+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;usage_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@82d599b014b246c7a9b5dfc750dc08a9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;106ecd878f4148a5cabb6bbb0979b730&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意其中的&lt;code&gt;ranges&lt;/code&gt;属性,这是定位的关键，end和start是xpath，&lt;code&gt;tags&lt;/code&gt;属性用于存放标签，&lt;code&gt;usage_id&lt;/code&gt;是课程内容的定位符，user是用户匿名化后的结果&lt;/p&gt;
&lt;h1&gt;架构设计&lt;/h1&gt;
&lt;p&gt;edx的架构总体而言是采用RESTful api来解耦，笔记模块也不例外&lt;/p&gt;
&lt;p&gt;edx的笔记前端模块采用的是openannotation开放出来的annotator，openannotation同时也开放了后端，edX没有采用他们的后端，而是使用django-rest-framework重写了笔记部分的后端，我想应该是出于一致性的考虑，这样一来，整个团队的技术栈是统一的，个人而言我觉得这是个明智的决定，尽管这可能浪费一些时间（这确实浪费了不少时间，要知道笔记系统在birch版本中就准备投入使用的！）。&lt;/p&gt;
&lt;p&gt;我之所以会赞同这种做法，可能是因为对论坛模块的恐惧吧，论坛采用ruby写的，想对此做定制优化，就显得艰难（事实证明论坛也的确不够稳定）&lt;/p&gt;
&lt;p&gt;保持技术栈的一致，有利于让团队成员更热衷维护它们&lt;/p&gt;
&lt;p&gt;如果你有兴趣进一步看笔记的模型，请阅读&lt;a href="https://github.com/edx/edx-notes-api/blob/master/notesapi/v1/models.py"&gt;notesapi/v1/models.py&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;总结&lt;/h1&gt;
&lt;p&gt;edx的笔记系统可以单独部署，只要做好oauth2的配置即可&lt;/p&gt;
&lt;p&gt;由于笔记系统是基于oauth2的，所以可以为手机端所用，同时如果我们将笔记系统视为一个服务，我们可以将它用在edx之外的网站或app里&lt;/p&gt;
&lt;h1&gt;后话&lt;/h1&gt;
&lt;p&gt;我对阅读和笔记偏好有加，想基于以下东西做个工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;annotator&lt;/li&gt;
&lt;li&gt;firebase&lt;/li&gt;
&lt;li&gt;chrome插件 &lt;ul&gt;
&lt;li&gt;参考划词翻译或者pocket&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个随手摘工具，同时能高亮做过笔记的网页&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 24 May 2016 00:00:00 +0000</pubDate><guid>tag:,2016-05-24:open-edx-note-system.html</guid><category>edx</category></item><item><title>一个Open-edX的实验平台</title><link>/Open-edx-test-platform.html</link><description>&lt;h1&gt;先秀一下颜值&lt;/h1&gt;
&lt;h3&gt;Tomorrow Night Eighties&lt;/h3&gt;
&lt;p&gt;由于采用了Sass来管理主题样式，替换起来十分简易，通过siteapi来向平台发送主题切换指令，可允许网站管理员动态切换主题，当然更好的方案是站内控制，不过目前这种方式已经极其便利了&lt;/p&gt;
&lt;p&gt;首先展示的配色风格是时下极其流行的代码配色主题:Tomorrow&lt;/p&gt;
&lt;p&gt;我的ipython notebook用的是这个配色&lt;/p&gt;
&lt;p&gt;Tomorrow Night Eighties的配色风格，温和而内敛&lt;/p&gt;
&lt;p&gt;&lt;img alt="olarized_light" src="http://7kttuq.com1.z0.glb.clouddn.com/solarized_light.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;更多配色&lt;/h3&gt;
&lt;p&gt;以下是其他的几种配色，正在实验中，包括深受vim和sublime用户欢迎的solarized风格（我用了light色调）&lt;/p&gt;
&lt;p&gt;以及程序员习惯的纯黑主题&lt;/p&gt;
&lt;p&gt;&lt;img alt="multi" src="http://7kttuq.com1.z0.glb.clouddn.com/multi.jpg" /&gt;&lt;/p&gt;
&lt;h1&gt;动机&lt;/h1&gt;
&lt;p&gt;搭建一个实验性质的Open edX平台&lt;/p&gt;
&lt;h1&gt;计划&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;分享架构经验和教训&lt;/li&gt;
&lt;li&gt;开放大部分数据&lt;/li&gt;
&lt;li&gt;将所有接口对外开放&lt;ul&gt;
&lt;li&gt;欢迎小伙伴利用oauth机制将其用web技术做成跨平台应用（reactnative）&lt;/li&gt;
&lt;li&gt;移动端和前端小伙伴也可以用这些接口做练手项目，如果好用，可能被收购的哦233&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;近期实验特性&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可切换的主题&lt;ul&gt;
&lt;li&gt;采用siteapi接口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分布式性能优化评测与调优&lt;ul&gt;
&lt;li&gt;高并发/瓶颈/监控 &lt;code&gt;-&amp;gt;&lt;/code&gt; 调优&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;小组聊天,p2p交流&lt;ul&gt;
&lt;li&gt;webrtc用于点对点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;直播集成&lt;/li&gt;
&lt;li&gt;CDN&lt;/li&gt;
&lt;li&gt;跨平台笔记&lt;ul&gt;
&lt;li&gt;重心是笔记的加密功能（jwt）和定位功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;全站级别的消息通知&lt;ul&gt;
&lt;li&gt;信息流&lt;ul&gt;
&lt;li&gt;网站 &lt;code&gt;-&amp;gt;&lt;/code&gt; 用户（活动通知）&lt;/li&gt;
&lt;li&gt;用户 &lt;code&gt;-&amp;gt;&lt;/code&gt; 用户（私信）&lt;/li&gt;
&lt;li&gt;用户 &lt;code&gt;-&amp;gt;&lt;/code&gt; 网站（建议反馈）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;信息类型：&lt;ul&gt;
&lt;li&gt;论坛&lt;/li&gt;
&lt;li&gt;站点级别的活动通知&lt;/li&gt;
&lt;li&gt;课程通知&lt;ul&gt;
&lt;li&gt;订阅（多&lt;code&gt;-&amp;gt;&lt;/code&gt;多）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;技术架构：消息队列&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;说明&lt;/h1&gt;
&lt;p&gt;服务器配置低，暂时不对外开放，有访问需求的同学，可以给我发邮件索要http入口密码&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate><guid>tag:,2016-05-17:Open-edx-test-platform.html</guid><category>edx</category></item><item><title>Open edX分布式部署建议</title><link>/edx-distributed-suggestion.html</link><description>&lt;blockquote&gt;
&lt;p&gt;过早优化是万恶之源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;前段时间Open edX升级部分组件，导致分布式安装发生了变化，具体变更可以关注commit或者参考各个task的变量&lt;/p&gt;
&lt;p&gt;建议做分布式前，先检测瓶颈所在，这样能节约机器成本，且极大节省人力&lt;/p&gt;
&lt;p&gt;如果对ansible很熟，一切都好说，无非是做好配置和排错。如果对ansible不熟悉，ansible本身的学习成本是很高的，最好有个准备，&lt;/p&gt;
&lt;p&gt;如果你仅仅是分离数据库或缓存，手动就好了。对于数据库，只要安装 &lt;code&gt;-&amp;gt;&lt;/code&gt; 创建用户&lt;code&gt;-&amp;gt;&lt;/code&gt;建库&lt;code&gt;-&amp;gt;&lt;/code&gt;做好权限配置(包括网络可访问性)&lt;code&gt;-&amp;gt;&lt;/code&gt;migrate数据&lt;code&gt;-&amp;gt;&lt;/code&gt;在组件的配置文件里，做好数据库配置&lt;code&gt;-&amp;gt;&lt;/code&gt;restart，就好啦&lt;/p&gt;
&lt;p&gt;当然你也可以将全库导入导出&lt;/p&gt;
&lt;p&gt;缓存服务比较简单，就不赘述了&lt;/p&gt;
&lt;p&gt;不过手动的话也需要注意，edx的组件是分离的，而他们共用数据库，所以你需要做的配置可能分散在多处，至于有几处，需要看roles&lt;/p&gt;
&lt;p&gt;如果对性能要求高，建议先花时间把ansible学好，edx的ansible-playbook脚本已经充分把分布式考虑在内了。包括对mongo做主从，对mysql做主从，对消息队列和缓存做分布式&lt;/p&gt;
&lt;p&gt;如果压力来自django server，你应该对edxapp做分布式，然后做负载均衡&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate><guid>tag:,2016-05-11:edx-distributed-suggestion.html</guid><category>edx</category></item><item><title>Open edX管理命令</title><link>/open-edx-manage-command.html</link><description>&lt;h1&gt;说明&lt;/h1&gt;
&lt;p&gt;基于dogwood版本&lt;/p&gt;
&lt;h1&gt;指令&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;/edx/bin/python.edxapp /edx/bin/manage.edxapp cms   --setting=aws&lt;/li&gt;
&lt;li&gt;/edx/bin/python.edxapp /edx/bin/manage.edxapp lms   --setting=aws&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;命令列表&lt;/h1&gt;
&lt;h3&gt;lms&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[auth]
    changepassword
    createsuperuser

[certificates]
    cert_whitelist
    create_fake_cert
    fix_ungraded_certs
    gen_cert_report
    regenerate_user
    resubmit_error_certificates
    ungenerated_certs

[course_groups]
    post_cohort_membership_fix

[course_overviews]
    generate_course_overview

[course_structures]
    generate_course_structure

[courseware]
    clean_history
    clean_xml
    dump_course_ids
    dump_course_structure
    export_course
    import
    regrade_partial

[dashboard]
    git_add_course

[debug]
    dump_xml_courses

[django]
    check
    compilemessages
    createcachetable
    dbshell
    diffsettings
    dumpdata
    flush
    inspectdb
    loaddata
    makemessages
    makemigrations
    migrate
    runfcgi
    shell
    showmigrations
    sql
    sqlall
    sqlclear
    sqlcustom
    sqldropindexes
    sqlflush
    sqlindexes
    sqlmigrate
    sqlsequencereset
    squashmigrations
    startapp
    startproject
    syncdb
    testserver
    validate

[django_comment_client]
    assign_role
    assign_roles_for_course
    create_roles_for_existing
    get_discussion_link
    reload_forum_users
    seed_permissions_roles
    show_permissions

[django_nose]
    test

[django_openid_auth]
    openid_cleanup

[djcelery]
    celery
    celerybeat
    celerycam
    celeryd
    celeryd_detach
    celeryd_multi
    celerymon
    djcelerymon

[edx_proctoring]
    set_attempt_status

[edx_sga]
    sga_migrate_submissions

[edxmako]
    preprocess_assets

[instructor]
    compute_grades
    dump_grades

[mailing]
    mailchimp_id
    mailchimp_sync_announcements
    mailchimp_sync_course

[oauth2_provider]
    create_oauth2_client

[openassessment]
    create_oa_submissions
    performance_test_for_submissions
    simulate_ai_grading_error
    upload_oa_data

[sessions]
    clearsessions

[shoppingcart]
    retire_order

[simple_history]
    populate_history

[static_replace]
    clear_collectstatic_cache

[staticfiles]
    collectstatic
    findstatic
    runserver

[student]
    6002exportusers
    6002importusers
    add_to_group
    anonymized_id_mapping
    assigngroups
    cert_restriction
    change_enrollment
    create_random_users
    create_user
    emaillist
    get_grades
    set_staff
    set_superuser
    sync_user_info
    transfer_students
    userinfo

[teams]
    reindex_course_team

[third_party_auth]
    saml

[thumbnail]
    thumbnail

[user_api]
    email_opt_in_list

[verify_student]
    retry_failed_photo_verifications
    set_software_secure_status

[wiki]
    wikiviz

[xblock_django]
    ensure_indexes
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;cms&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[auth]
    changepassword
    createsuperuser

[contentstore]
    check_course
    cleanup_assets
    clone_course
    create_course
    delete_course
    delete_orphans
    edit_course_tabs
    empty_asset_trashcan
    export
    export_all_courses
    export_convert_format
    fix_not_found
    force_publish
    git_export
    import
    migrate_to_split
    populate_creators
    prompt
    reindex_course
    reindex_library
    restore_asset_from_trashcan
    utils
    xlint

[course_groups]
    post_cohort_membership_fix

[course_overviews]
    generate_course_overview

[course_structures]
    generate_course_structure

[django]
    check
    compilemessages
    createcachetable
    dbshell
    diffsettings
    dumpdata
    flush
    inspectdb
    loaddata
    makemessages
    makemigrations
    migrate
    runfcgi
    shell
    showmigrations
    sql
    sqlall
    sqlclear
    sqlcustom
    sqldropindexes
    sqlflush
    sqlindexes
    sqlmigrate
    sqlsequencereset
    squashmigrations
    startapp
    startproject
    syncdb
    testserver
    validate

[django_nose]
    test

[django_openid_auth]
    openid_cleanup

[djcelery]
    celery
    celerybeat
    celerycam
    celeryd
    celeryd_detach
    celeryd_multi
    celerymon
    djcelerymon

[edx_proctoring]
    set_attempt_status

[edx_sga]
    sga_migrate_submissions

[edxmako]
    preprocess_assets

[oauth2_provider]
    create_oauth2_client

[openassessment]
    create_oa_submissions
    performance_test_for_submissions
    simulate_ai_grading_error
    upload_oa_data

[require]
    require_init

[sessions]
    clearsessions

[simple_history]
    populate_history

[static_replace]
    clear_collectstatic_cache

[staticfiles]
    collectstatic
    findstatic
    runserver

[student]
    6002exportusers
    6002importusers
    add_to_group
    anonymized_id_mapping
    assigngroups
    cert_restriction
    change_enrollment
    create_random_users
    create_user
    emaillist
    get_grades
    set_staff
    set_superuser
    sync_user_info
    transfer_students
    userinfo

[user_api]
    email_opt_in_list

[verify_student]
    retry_failed_photo_verifications
    set_software_secure_status

[xblock_django]
    ensure_indexes
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;使用&lt;/h1&gt;
&lt;p&gt;具体的使用方法可以翻阅源码或是测试用例&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/cms/djangoapps/contentstore/management/commands/tests"&gt;management/commands/tests&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;demo&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;/edx/bin/manage.edxapp cms   --setting=aws export   course-v1:a+b+c  /tmp/test/a_b_c   //导出课程&lt;/li&gt;
&lt;li&gt;导出课程还是用python代码吧:&lt;code&gt;from contentstore.management.commands.export_all_courses import export_courses_to_output_path&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate><guid>tag:,2016-05-03:open-edx-manage-command.html</guid><category>edx</category></item><item><title>Open edX course数据探索</title><link>/open-edx-course-data-explore.html</link><description>&lt;h1&gt;方法&lt;/h1&gt;
&lt;p&gt;采用jupyter来探究，基于dogwood做的探索&lt;/p&gt;
&lt;h1&gt;获取course的各种方法&lt;/h1&gt;
&lt;p&gt;需要注意的是各种方法获取的course，关联的数据不尽相同&lt;/p&gt;
&lt;h3&gt;get_courses&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法路径： &lt;code&gt;from courseware.courses import get_courses&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;源码:  &lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/djangoapps/courseware/courses.py#L376"&gt;get_courses&lt;/a&gt;,其获取课程的关键是&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/djangoapps/branding/__init__.py#L20"&gt;branding.get_visible_courses&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;相关源码：  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;openedx.core.djangoapps.content.course_overviews.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CourseOverview&lt;/span&gt;
&lt;span class="n"&gt;courses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CourseOverview&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_all_courses&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filtered_by_org&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#course = CourseOverview.get_from_id(course_key)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;使用方法:  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AnonymousUser&lt;/span&gt;
&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AnonymousUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="n"&gt;courses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_courses&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;course&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;all_courses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# CourseOverview object &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;捕获对象：CourseOverview&lt;/li&gt;
&lt;li&gt;一些实用属性和方法:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;course_image_url&lt;/span&gt; &lt;span class="c1"&gt;#&amp;gt;&amp;gt;&amp;gt;u&amp;#39;/asset-v1:edX+DemoX+Demo_Course+type@asset+block@images_course_image.jpg&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;created&lt;/span&gt; 
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_all_course_keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;get_all_courses&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_next_by_created&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_student_enrollments_allowed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;get_course&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法路径： &lt;code&gt;from courseware.courses import get_course&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;源码：&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/djangoapps/courseware/courses.py#L45"&gt;get_course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用方法:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;opaque_keys.edx.locations&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SlashSeparatedCourseKey&lt;/span&gt;
    &lt;span class="n"&gt;course_id_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;u&amp;quot;course-v1:a+b+c&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;course_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SlashSeparatedCourseKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_deprecated_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;course_id_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;courseware.courses&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_course&lt;/span&gt;  
    &lt;span class="n"&gt;course&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_course&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;course_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# CourseDescriptorWithMixins&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;捕获对象：CourseDescriptorWithMixins&lt;/li&gt;
&lt;li&gt;等效于:  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xmodule.modulestore.django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;modulestore&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;modulestore&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_course&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;course_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;一些实用属性和方法:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advanced_modules&lt;/span&gt; &lt;span class="c1"&gt;#高级模块&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;children&lt;/span&gt; &lt;span class="c1"&gt;# &amp;gt;&amp;gt;&amp;gt;BlockUsageLocator  已有的章节&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="c1"&gt;# u&amp;#39;course&amp;#39;  自省功能 ,course.children[0].category -&amp;gt; u&amp;#39;chapter&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display_name&lt;/span&gt; &lt;span class="c1"&gt;# 课程名 ，可以在高级设置里修改&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display_name_with_defaulte&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display_number_with_default&lt;/span&gt; &lt;span class="c1"&gt;#course name，在course_id_string中间的那个值（唯一性），可以在高级设置里修改&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="c1"&gt;# 列出所有属性&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_children&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 获得子节点&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_content_titles&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 获得所有内容的标题&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#显示出所有的context，使用keys来观察层次，其中数据很完备&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html_textbooks&lt;/span&gt; 
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="c1"&gt;#&amp;gt;&amp;gt;&amp;gt;CourseLocator&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;  &lt;span class="c1"&gt;# course name/number 有唯一性&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf_textbooks&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raw_grader&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tabs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="c1"&gt;#&amp;gt;&amp;gt;&amp;gt;u&amp;#39;Courseware&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top_level_discussion_topic_ids&lt;/span&gt; 
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml_attributes&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml_element_name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;get_course_about_section&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法路径： &lt;code&gt;from courseware.courses import get_course_about_section&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;源码: &lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/djangoapps/courseware/courses.py#L160"&gt;get_course_about_section&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Valid keys:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;overview&lt;/li&gt;
&lt;li&gt;short_description&lt;/li&gt;
&lt;li&gt;description&lt;/li&gt;
&lt;li&gt;key_dates (includes start, end, exams, etc)&lt;/li&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;li&gt;course_staff_short&lt;/li&gt;
&lt;li&gt;course_staff_extended&lt;/li&gt;
&lt;li&gt;requirements&lt;/li&gt;
&lt;li&gt;syllabus&lt;/li&gt;
&lt;li&gt;textbook&lt;/li&gt;
&lt;li&gt;faq&lt;/li&gt;
&lt;li&gt;effort&lt;/li&gt;
&lt;li&gt;more_info&lt;/li&gt;
&lt;li&gt;ocw_links&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;案例:&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/templates/courseware/course_about.html"&gt;course_about.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;疑惑，这个放在course_about页面正常，直接使用有误，跟踪course  //course缺乏static_asset_path属性，所以报错&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/djangoapps/courseware/views.py#L799"&gt;views course_about&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;CourseDetails&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法路径： &lt;code&gt;from openedx.core.djangoapps.models.course_details import CourseDetails&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;源码: &lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/openedx/core/djangoapps/models/course_details.py#L30"&gt;CourseDetails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用方法:  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;openedx.core.djangoapps.models.course_details&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CourseDetails&lt;/span&gt;
    &lt;span class="n"&gt;course_id_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;u&amp;quot;course-v1:a+b+c&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;course_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SlashSeparatedCourseKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_deprecated_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;course_id_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;course_details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CourseDetails&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;course_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#course_details.overview&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;实用代码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CourseKey.from_string:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;opaque_keys.edx.keys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CourseKey&lt;/span&gt;
    &lt;span class="n"&gt;course&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;modulestore&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_course&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CourseKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;course_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/djangoapps/courseware/courses.py#L465"&gt;get_problems_in_section&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate><guid>tag:,2016-04-28:open-edx-course-data-explore.html</guid><category>edx</category></item><item><title>Tracking Logs 中的事件(翻译)</title><link>/events-in-the-tracking-logs.html</link><description>&lt;p&gt;翻译自：&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html"&gt;Events in the Tracking Logs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由&lt;code&gt;@ryseven&lt;/code&gt;翻译 , &lt;code&gt;@OVER&lt;/code&gt;校对和整理 ， &lt;code&gt;@wwj718&lt;/code&gt;参与部分校对&lt;/p&gt;
&lt;p&gt;项目仍在进行中，欢迎参与，译文参见 ：&lt;a href="http://blog.just4fun.site/others/tracking_logs_zh.rst.htm"&gt;Tracking Logs 中的事件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tracking Logs是Open edX的事件日志&lt;/p&gt;
&lt;p&gt;关于Tracking Logs我写过两篇文章，有兴趣的同学可以参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.just4fun.site/edx-tracking-logs-data-research.html"&gt;基于tracking logs的数据分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.just4fun.site/explore-Open-edX-tracking-system.html"&gt;explore Open edX tracking system&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理解Open edX的Tracking Logs和Tracking System是分析edx数据的核心所在，也是先行条件&lt;/p&gt;
&lt;p&gt;当前的大数据分析，大多以日志为中心。关于这点可以参考&lt;a href="http://blog.jobbole.com/89674/"&gt;The Log：每个程序员都应该知道有关实时数据的统一抽象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对日志文件的理解，可能是理解分布式和大数据的入口。&lt;/p&gt;
&lt;p&gt;就Open edx而言也是这样，如果打算挖掘教育相关的数据，理解日志是绕不开的一步，所以我们对官方文档进行了翻译，也分享出来，希望对数据有兴趣的朋友有用&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 13 Apr 2016 00:00:00 +0000</pubDate><guid>tag:,2016-04-13:events-in-the-tracking-logs.html</guid><category>edx</category></item><item><title>Open edX各种登录方式探索</title><link>/Open-edX-login-explore.html</link><description>&lt;h1&gt;缘起&lt;/h1&gt;
&lt;p&gt;对异构系统的整合是我的兴趣之一，Open edX的开放式设计使它很容易与其他系统整合，其中包括用户系统的整合&lt;/p&gt;
&lt;p&gt;前前后后折腾了edx的各种登录和注册机制，在此理一下。前几天对&lt;a href="https://github.com/omab/python-social-auth"&gt;python-social-auth&lt;/a&gt;做了探索，也一并做下笔记&lt;/p&gt;
&lt;p&gt;主要内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CAS&lt;/li&gt;
&lt;li&gt;OAuth2&lt;ul&gt;
&lt;li&gt;OAuth2 client&lt;/li&gt;
&lt;li&gt;OAuth2 server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;更改login机制，同时支持username/email登录&lt;/li&gt;
&lt;li&gt;QQ/微信登录&lt;/li&gt;
&lt;li&gt;移动端跳转&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;CAS&lt;/h1&gt;
&lt;p&gt;关于CAS，我此前有写过一篇文章&lt;a href="http://blog.just4fun.site/use-CAS-in-your-LMS.html"&gt;为什么CAS应该成为你的LMS的一部分&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上边文章介绍了CAS的使用场景和它的原理，也给出了一些参考资料，对CAS不熟悉的小伙伴可以参考&lt;/p&gt;
&lt;p&gt;看到这里就假设你基本弄懂CAS的原理啦，那我们直接讨论如何将CAS和edx对接&lt;/p&gt;
&lt;p&gt;@MT说edx内置的cas client坑比较多，所以我试着改造了&lt;a href="https://github.com/kstateome/django-cas"&gt;django-cas&lt;/a&gt;,这是改造后的：&lt;a href="https://github.com/wwj718/django-cas"&gt;wwj718/django-cas&lt;/a&gt;，按照项目主页的引导，你就可以直接在Open edX里使用cas啦&lt;/p&gt;
&lt;p&gt;具体的实现可以参考我的commit，代码很短，就几行&lt;/p&gt;
&lt;h1&gt;OAuth2&lt;/h1&gt;
&lt;p&gt;关于OAuth2的学习可以参考我的笔记：&lt;a href="http://blog.just4fun.site/OAuth2-note.html"&gt;OAuth学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你对此熟悉 ，我们继续前进&lt;/p&gt;
&lt;p&gt;CAS登录中，有一个中心，这个中心是CAS server，这种登录方式往往是集中式的。而OAuth2可以用于分布式登录的场景，尽管它的用途不只于此（还包括访问受限的资源）。&lt;/p&gt;
&lt;p&gt;你一定使用过这种登录方式，许多网站都支持支持QQ/微信/google/facebook登录&lt;/p&gt;
&lt;p&gt;这便使用了OAuth2&lt;/p&gt;
&lt;h3&gt;OAuth2 client&lt;/h3&gt;
&lt;p&gt;当我们访问网站A（比如我们的edx实例）时，使用了QQ登录，那么有以下事件发生&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户访问A网站，选择QQ登录，网站将用户导向qq认证服务器。&lt;/li&gt;
&lt;li&gt;用户登录QQ，并选择是否给予网站A授权。&lt;/li&gt;
&lt;li&gt;若用户给予授权，QQ认证服务器将用户导向A网站事先指定的"重定向URI"（redirection URI），同时附上一个授权码。&lt;/li&gt;
&lt;li&gt;A网站收到授权码，附上早先的"重定向URI"，向QQ认证服务器申请令牌。这一步是在A网站的后台的服务器上完成的，对用户不可见。&lt;/li&gt;
&lt;li&gt;QQ认证服务器核对了授权码和重定向URI，确认无误后，向A网站发送访问令牌（access token）和更新令牌（refresh token）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后A网站在后端携带用户的access token，可能拿到用户资料了。至此A网站的后端可以知道用户A是否是A 网站的合法用户，对于采用QQ登录网站A而言，已经足够了。&lt;/p&gt;
&lt;p&gt;如果你熟悉OAuth2，你会发现这就是使用最广泛的&lt;code&gt;授权码模式&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，本地用户系统如何与用户QQ资料挂钩，诸如展示用户名或者用户头像，这些不是oauth2该做的，即便走通了oauth2的流程只意味着，该用户在QQ认证服务器那边是合法用户，同时本地后台也可以拿到用户资料（QQ昵称/头像），可是如何把用户昵称和头像与网站A本地系统整合，好比username和昵称挂钩，或是与id挂钩，这需要在网站A注册系统里手写逻辑，一般在上边的最后一步做，注册完成之后，把用户重定向到dashboard。可以参考edx中既有的google/facebook/linkedin&lt;/p&gt;
&lt;p&gt;你也可以参考这个案例:&lt;a href="https://github.com/joestump/python-oauth2/wiki/Logging-into-Django-w--Twitter"&gt;Logging-into-Django-w--Twitter&lt;/a&gt;,尽管这个案例和edx无关，但它基本把流程说清了&lt;/p&gt;
&lt;p&gt;值得一提的事，edx整合外部登录到系统里的方式是采用用户绑定而不是直接注册，所以会导致以下问题&lt;/p&gt;
&lt;p&gt;如果你使用&lt;a href="https://github.com/omab/python-social-auth"&gt;python-social-auth&lt;/a&gt;，即便你好不容易，折腾半天，感觉已经没问题了，腾讯那边还会说&lt;code&gt;点击QQ登录按钮提示登录失败或出现错误信息（无跳转、提示失败、出现错误信息）&lt;/code&gt;,于是不让你审核通过，原因是edx的&lt;code&gt;third_party_auth&lt;/code&gt;并不会自动将oauth2登录通过的用户注册到edx里，而是要求你使用edx既有用户绑定一下，之后才可以使用qq登录。&lt;/p&gt;
&lt;p&gt;这样一来腾讯那边认为你并没有登录成功，所以没法审核通过&lt;/p&gt;
&lt;p&gt;以上是Open edx使用OAuth2 client登录qq的场景&lt;/p&gt;
&lt;p&gt;最后需要郑重提醒的是网站基本信息里回调地址得是&lt;code&gt;http:xxx/auth/complete/qq/&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;OAuth2 server&lt;/h3&gt;
&lt;p&gt;lms的 OAuth2 server 用的是&lt;a href="https://django-oauth2-provider.readthedocs.org/en/latest/getting_started.html"&gt;django-oauth2-provider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下边我们讨论Open edX作为OAuth2 server的场景，这时Open edx相当于我们上边提到的QQ认证服务器的角色，此时B网站就可以使用Open edx的用户登录他们的网站，诸如insights就是这样做的，insights本身是个独立完整的网站，为了与lms/cms整合在一起，采用了OAuth2来关联用户，这时候lms就扮演了OAuth2 server的角色，只要你拥有lms的用户，就可以直接登录insights，用户的感觉是只有一个用户系统。&lt;/p&gt;
&lt;p&gt;整个认证的流程和上边基本相同，具体的操作可以参考&lt;a href="https://openedx.atlassian.net/wiki/display/OpenOPS/edX+Analytics+Installation"&gt;edX Analytics Installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不同的地方主要是OAuth2 server（lms）和OAuth2 client(insights)都是自己的，所以OAuth2 client是受信任的client，这是一种&lt;code&gt;客户端模式&lt;/code&gt;，比前头提到的授权码模式来得简单，关于这些模式的对比，可以参考我的这篇文章:&lt;a href="http://blog.just4fun.site/OAuth2-note.html"&gt;OAuth学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于客户端模式的代码，参考&lt;a href="http://blog.just4fun.site/edx-api.html"&gt;enable Open edX REST APIs(work with mobile)&lt;/a&gt;,通过客户端模式，我们可以轻易了解用户和密码的正确性&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests.auth&lt;/span&gt;
&lt;span class="n"&gt;client_auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPBasicAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dc107056a5335b3a7c74&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4e3f1fad6e0583fc80d78541f2ca6cfad8a93bed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;post_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grant_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://127.0.0.1/oauth2/access_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client_auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;post_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;产生受信任客户端的核心就是我们能控制OAuth2 server，在其中执行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo /edx/bin/python.edxapp /edx/bin/manage.edxapp lms --setting=aws create_oauth2_client http://insight:18110 http://insight:18110/complete/edx-oidc/ confidential --client_name insights --client_id YOUR_OAUTH2_KEY --client_secret secret --trusted&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;http://insight:18110/complete/edx-oidc/&lt;/code&gt;是回调地址，这一步往往是两个平台用户关联的核心所在，有兴趣的同学可以直接翻源码，出于篇幅限制，在此不详述。这个url，来自&lt;a href="https://github.com/omab/python-social-auth"&gt;python-social-auth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里给我们的一个启示是：如果你想拓展edx，所做的拓展并不需要再界面上与edx整合（内嵌的整合可以用djangoapp/xblock），而又希望两者能看起来像一个系统（用户打通），那么采用insights的这种架构就很好，实际上，open edx的整个项目就是由若干服务组成的，edx本身的就够就是由若干异构系统拼成的，这个今天人气很高的&lt;code&gt;微服务&lt;/code&gt;有异曲同工之处&lt;/p&gt;
&lt;p&gt;顺便再提一下，insights中有许多地方需要lms的数据，诸如题目统计里需要统计各类题目的正误情况，所以我们需要题目的信息，而这些信息insights里是不包括的，实际上这也是通过rest接口完成的，认证机制也是OAuth2，接口在这里&lt;a href="http://edx.readthedocs.org/projects/edx-platform-api/en/latest/course_structure/index.html"&gt;Course Structure API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;回到OAuth2 server的话题，lms作为OAuth2 server，我们首先需要启动它，通过在&lt;code&gt;lms.env.json&lt;/code&gt;里设置(FEATURES)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
&amp;quot;FEATURES: {
    ...
    &amp;quot;ENABLE_OAUTH2_PROVIDER&amp;quot;: true,
    &amp;quot;OAUTH_ENFORCE_SECURE&amp;quot;: false,
    ...
}
&amp;quot;JWT_ISSUER&amp;quot;: &amp;quot;http://LMS/oauth2&amp;quot;,
&amp;quot;OAUTH_OIDC_ISSUER&amp;quot;: &amp;quot;http://LMS/oauth2&amp;quot;,
&amp;quot;OAUTH_ENFORCE_SECURE&amp;quot;: false, #这个放在FEATURES里？
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;而在insight里,确保&lt;code&gt;/edx/etc/insights.yml&lt;/code&gt;（如果跑脚本的时候设置正确，这些会自动生成）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;CMS_COURSE_SHORTCUT_BASE_URL: http://LMS/course
COURSE_API_URL: http://LMS/api/course_structure/v0/
MODULE_PREVIEW_URL: http://LMS/xblock
SOCIAL_AUTH_EDX_OIDC_URL_ROOT: http://LMS/oauth2
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;外部登录细节&lt;/h3&gt;
&lt;p&gt;我们从insights开始，我们把insights看做一个oauth2 client，登录入口为&lt;code&gt;/accounts/login/&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    url(r&amp;#39;^accounts/login/$&amp;#39;,
        RedirectView.as_view(url=reverse_lazy(&amp;#39;social:begin&amp;#39;, args=[&amp;#39;edx-oidc&amp;#39;]), permanent=False, query_string=True),
        name=&amp;#39;login&amp;#39;),
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通信的过程是标准的oauth2登录方式，具体的请求地址可以参考：&lt;a href="https://github.com/edx/auth-backends"&gt;auth-backends&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;a href="https://github.com/edx/auth-backends/blob/master/auth_backends/backends.py#L13"&gt;EdXOpenIdConnect&lt;/a&gt;是关键所在&lt;/p&gt;
&lt;p&gt;相关请求url为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AUTHORIZATION_URL :  http://LMS/oauth2/authorize/     //使用get获取code,有时效性&lt;/li&gt;
&lt;li&gt;ACCESS_TOKEN_URL : http://LMS/oauth2/access_token/    //使用post 携带参数获得access_token&lt;/li&gt;
&lt;li&gt;USER_INFO_URL : http://LMS/oauth2/user_info/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们可以试试手动获取用户数据&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# get access_token&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests.auth&lt;/span&gt;
&lt;span class="n"&gt;client_auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPBasicAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;post_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grant_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://LMS/oauth2/access_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client_auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;post_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authorization&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bearer xxx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;User-Agent&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ChangeMeClient/0.1 by YourUsername&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http:/LMS/api/mobile/v0.5/my_user_info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上采用的是受信任客户端的模式&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;这一块的单步调试非常错综复杂，是应为oauth2的url部分写得奇蠢无比。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FEATURES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ENABLE_OAUTH2_PROVIDER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;# These URLs dispatch to django-oauth-toolkit or django-oauth2-provider as appropriate.&lt;/span&gt;
        &lt;span class="c1"&gt;# Developers should use these routes, to maintain compatibility for existing client code&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;^oauth2/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lms.djangoapps.oauth_dispatch.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="c1"&gt;# These URLs contain the django-oauth2-provider default behavior.  It exists to provide&lt;/span&gt;
        &lt;span class="c1"&gt;# URLs for django-oauth2-provider to call using reverse() with the oauth2 namespace, and&lt;/span&gt;
        &lt;span class="c1"&gt;# also to maintain support for views that have not yet been wrapped in dispatch views.&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;^oauth2/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;edx_oauth2_provider.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;oauth2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; 
        &lt;span class="c1"&gt;# The /_o/ prefix exists to provide a target for code in django-oauth-toolkit that&lt;/span&gt;
        &lt;span class="c1"&gt;# uses reverse() with the &amp;#39;oauth2_provider&amp;#39; namespace.  Developers should not access these&lt;/span&gt;
        &lt;span class="c1"&gt;# views directly, but should rather use the wrapped views at /oauth2/&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;^_o/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;oauth2_provider.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;oauth2_provider&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;官方采取了url覆盖的方法，而不是明确指出，以至于你如果不深入源码丛林就找不到url对应的view，而由于这些是外部库，所以ack也很不方便&lt;/p&gt;
&lt;p&gt;我们只好求助一些工具: &lt;code&gt;sudo /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms show_urls  --settings devstack | grep user_info&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/api/mobile/v0.5/my_user_info   rest_framework.decorators.my_user_info
/oauth2/user_info/      oauth2_provider.views.UserInfoView      oauth2:user_info
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从中我们找到了user_info对于的方法，它来自&lt;a href="https://github.com/edx/edx-oauth2-provider/blob/master/edx_oauth2_provider/views.py#L201"&gt;edx_oauth2_provider&lt;/a&gt;，不要问题为何知道。。&lt;/p&gt;
&lt;p&gt;如果你要手动处理oauth2，试试：&lt;a href="https://requests-oauthlib.readthedocs.org/en/latest/"&gt;requests-oauthlib&lt;/a&gt;，分步调试的话，可以看这个:&lt;a href="https://requests-oauthlib.readthedocs.org/en/latest/examples/google.html"&gt;examples/google&lt;/a&gt;，不过需要https&lt;/p&gt;
&lt;p&gt;更多的调试细节，比如各个参数的含义，那么你需要了解oauth2协议本身，那样可以从http层面调试，否则会很艰难，还是尽量使用oauth2 client吧&lt;/p&gt;
&lt;p&gt;如果你对过程参数感兴趣可以参考&lt;a href="http://wiki.connect.qq.com/%E4%BD%BF%E7%94%A8authorization_code%E8%8E%B7%E5%8F%96access_token"&gt;使用Authorization_Code获取Access_Token&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对原理说的最清楚的为&lt;a href="https://developers.douban.com/wiki/?title=oauth2"&gt;使用 OAuth 2.0 访问豆瓣 API&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当携带code请求access_token是，使用http --form提交，例子如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http --form http://LMS/oauth2/access_token  client_id=key client_secret=secret code=xxx grant_type=authorization_code redirect_uri=http://domain_test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;至于如何拿到code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http --form http://LMS/oauth2/access_token  client_id=key client_secret=secret code=xxx grant_type=authorization_code redirect_uri=http://domain_test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;，然后你将得到access token，其中有id_token参数，这个参数是jwt加密后的,需要解密&lt;/p&gt;
&lt;h1&gt;更改login机制&lt;/h1&gt;
&lt;p&gt;我们可能处于各种原因需要修改login机制，诸如想同时支持email和username，诸如不想验证用户的有效性，诸如允许某些用户携带秘钥直接登录&lt;/p&gt;
&lt;p&gt;在此分享一下同时支持email和username的登录方式的思路。更改登录逻辑当然是核心&lt;/p&gt;
&lt;p&gt;登录逻辑在&lt;code&gt;common/djangoapps/student/views.py&lt;/code&gt;中的login_user函数，更改这部分倒是容易，麻烦反而在前端&lt;/p&gt;
&lt;p&gt;前端并不写在template里，而是写在&lt;code&gt;openedx/core/djangoapps/user_api/views.py&lt;/code&gt;中，找到&lt;code&gt;LoginSessionView&lt;/code&gt;更改即可&lt;/p&gt;
&lt;h1&gt;QQ/微信登录&lt;/h1&gt;
&lt;p&gt;关于QQ登录大体流程在OAuth2 client中已经说了，如果你在这部分困难重重，除了QQ本身的坑之外（对此我们无能为力），你最好确保自己熟悉OAuth2，这样方便&lt;code&gt;单步调试&lt;/code&gt;,只要你走通了一个OAuth2认证，其他的基本没有难度&lt;/p&gt;
&lt;p&gt;调试的细节建议参考&lt;a href="http://wiki.connect.qq.com/%E5%BC%80%E5%8F%91%E6%94%BB%E7%95%A5_client-side"&gt;开发攻略_Client-side&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;客户端注册：&lt;a href="http://connect.qq.com/"&gt;connect.qq.com&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;移动端跳转&lt;/h1&gt;
&lt;p&gt;如果你不采用彼岸准的oauth2的方式来认证用户，而是由于各种历史原因想走捷径（最好不要这么干！很脏乱，不好维护）。好吧你还是不听，那我建议你采用jwt的方式来携带用户信息，应为有加密，起码它至少是安全的&lt;/p&gt;
&lt;p&gt;关于jwt你可以参考我的这篇文章:&lt;a href="http://blog.just4fun.site/jwt-note.html"&gt;JWT学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;总结&lt;/h1&gt;
&lt;p&gt;关于用户系统，我最喜欢的一种设计是，它应该是可插拔式的&lt;/p&gt;
&lt;h1&gt;工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tool.chinaz.com/tools/urlencode.aspx"&gt;url转码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate><guid>tag:,2016-04-12:Open-edX-login-explore.html</guid><category>edx</category></item><item><title>Open edX课程备份工具</title><link>/backup-open-edx-course.html</link><description>&lt;h1&gt;缘起&lt;/h1&gt;
&lt;p&gt;就教育而言，内容始终是个宝贵资源，随着平台课程增多，如何备份就是个摆上日程的问题了，当课程还少的时候，采用定人定期备份的方式也觉得尚可接受，可手动备份的缺陷太多&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重复性的导入导出极其乏味，浪费时间&lt;/li&gt;
&lt;li&gt;导出课程名是随机字符，很闹归类&lt;/li&gt;
&lt;li&gt;人类不善于且厌恶重复性的工作，容易出错&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这类工作让代码来做再合适不过了，所以我写了个备份Open edx课程的工具，已经上传到github和pypi，直接安装就可使用&lt;/p&gt;
&lt;h1&gt;使用&lt;/h1&gt;
&lt;p&gt;当前版本只支持python2&lt;/p&gt;
&lt;p&gt;建议采用virtualenv来管理环境（virtualenv -p /usr/bin/python2 env）,使用centos的同学最好采用以上建议，其他操作系统的其他同学可以无视&lt;/p&gt;
&lt;p&gt;我们先来看下如何使用，十分简单，首先安装它：&lt;code&gt;pip install course_backup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，执行&lt;code&gt;course_backup --help&lt;/code&gt;会看到参数提示&lt;/p&gt;
&lt;p&gt;首先你需要登录studio，查看你的cookies中sessionid和csrftoken字段，然后填入配置文件，默认的配置文件为&lt;code&gt;~/.backup_course.ini&lt;/code&gt;,当然你也可以自己指定它&lt;/p&gt;
&lt;p&gt;我的配置文件为(cat ~/.backup_course.ini):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[main]&lt;/span&gt;
&lt;span class="na"&gt;studio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;http://192.168.0.100:18010&lt;/span&gt;
&lt;span class="na"&gt;sessionid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;2aerthgca4fyqt4hqza38jhmoue9te5v&lt;/span&gt;
&lt;span class="na"&gt;csrftoken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;c4DiddgttfhhttjfKrCb47YQBeyS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;填好配置文件后就可以启动备份任务啦&lt;/p&gt;
&lt;h3&gt;现在开始备份&lt;/h3&gt;
&lt;p&gt;course_backup --start &lt;/p&gt;
&lt;h3&gt;晚上两点开始备份&lt;/h3&gt;
&lt;p&gt;course_backup --start  --night&lt;/p&gt;
&lt;h3&gt;指定配置文件&lt;/h3&gt;
&lt;p&gt;course_backup --start --config_file ./my_config_file.ini&lt;/p&gt;
&lt;h3&gt;指定备份目录&lt;/h3&gt;
&lt;p&gt;course_backup --start --courses_data_path /tmp/data&lt;/p&gt;
&lt;h3&gt;滚动备份&lt;/h3&gt;
&lt;p&gt;course_backup --start --night --interval_days 7 --courses_data_path /tmp/data&lt;/p&gt;
&lt;p&gt;每七天备份一次，滚动周期为3周（超过3周的文件将自动删除）&lt;/p&gt;
&lt;h1&gt;Todo&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;滚动备份&lt;/li&gt;
&lt;li&gt;只备份差异版本&lt;/li&gt;
&lt;li&gt;定时任务（for humans）&lt;/li&gt;
&lt;li&gt;云端同步&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;反思&lt;/h1&gt;
&lt;p&gt;这个自己写的工具从使用来看倒是挺顺手的。不过设计的时候，有一点始终让我左右为难：是提供一体化的解决方案好，还是让工具只专注在一件事（诸如只下载课程），然后把它和其他linux工具组合起来使用&lt;/p&gt;
&lt;p&gt;《Unix编程艺术》里建议说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;do one thing，and do well&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这也是Unix哲学提倡的。&lt;/p&gt;
&lt;p&gt;陷入到实际项目中，什么叫one thing呢？就很让人头疼，在这里我可能觉得backup courses整件事就是one thing，而其他人可能觉得download course是one thing，other thing可以通过组合其他工具，这样最终完成backup courses，诸如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;course_backup提供download course指令（粒度似乎很合适，利落）&lt;/li&gt;
&lt;li&gt;course_backup提供所有课程id&lt;/li&gt;
&lt;li&gt;通过course_backup首先获得所有id，然后通过bash写一个循环来download all courses&lt;/li&gt;
&lt;li&gt;使用cron来写定时任务&lt;/li&gt;
&lt;li&gt;使用bash来写滚动备份功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你真的这样做，你可能会发现，实际上我们只是把编程的任务从python移交到bash脚本里。&lt;/p&gt;
&lt;p&gt;在bash里写逻辑是我极不情愿做的一件事，相比于shell里那些好用的工具（vim/grep/find/sed...），bash的语法简直丑哭。所以就我而言我会选择尽可能用python把逻辑写到course_backup里，对外暴露出配置选项，那么我的one thing粒度可能大一些&lt;/p&gt;
&lt;p&gt;即便如此我对一些东西是不是应该包含在工具内还是犹豫不决，即便现在也是，诸如定时任务功能是应该用系统的cron来做还是采用python的定时任务模块来写到工具内部，写在外部的好处是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户可以自由写定时任务&lt;/li&gt;
&lt;li&gt;代码简介干净&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而混杂在工具里，就是这个工具不得不是一个常驻进程，同时为了追求灵活的配置参数，解析参数的代码也会很长，而这些本不是核心代码，不过是重造了一个丑陋的车轮&lt;/p&gt;
&lt;p&gt;可把定时功能混和在工具里，也有好处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对用户而言，上手容易，不需要而外去学cron和linux脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然你可以说这是我对目标用户的定位不够清晰。这又是另一种&lt;code&gt;度&lt;/code&gt;的问题了。工程问题也许就许多这一类各种因素都需要权衡的问题&lt;/p&gt;
&lt;p&gt;关于one thing的粒度，我一直拿捏不好，不知道别人是不是也有这个疑惑。我的自我安慰是这是一件需要权衡的事，也许还包含武断/拖鞋的/拍脑袋的过程，也许我们会把它称为直觉，无论用哪个词，指的似乎都是非理性的判断过程&lt;/p&gt;
&lt;p&gt;这可能也是《Unix编程艺术》书名中艺术的所指吧&lt;/p&gt;
&lt;p&gt;我并不是说我不喜欢&lt;code&gt;do one thing，and do well&lt;/code&gt;这个建议，相反，它可能是我最喜欢的几个编程箴言之一，它优美而非线性，需要我们不断打磨练习和试错。在我读过的所有计算机的书里，《Unix编程艺术》和《代码大全》可能是我最喜欢的两本实践类指导书籍，我把他们看做best practice。&lt;/p&gt;
&lt;p&gt;付诸直觉的事，尤其是在各种特质中做折衷选择的事，决策者肯定都会有足够的理由为自己辩护，最后我们能说的可能只有&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Talk is cheap， show me your code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;创建项目&lt;/h1&gt;
&lt;h3&gt;上传到pypi&lt;/h3&gt;
&lt;h1&gt;源码&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/wwj718/course_backup"&gt;course_backup&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate><guid>tag:,2016-04-12:backup-open-edx-course.html</guid><category>edx</category></item><item><title>explore Open edX tracking system</title><link>/explore-Open-edX-tracking-system.html</link><description>&lt;h1&gt;缘起&lt;/h1&gt;
&lt;p&gt;最近在折腾Open edX数据相关的东西，同时试着将open edx与机器学习结合&lt;/p&gt;
&lt;p&gt;如果你是EDM（educational data mining）的新玩家（我也是新手233）,对教育领域的数据感兴趣，推荐你这篇论文《教育数据挖掘研究进展综述》，了解一下这个领域的概况和进展&lt;/p&gt;
&lt;p&gt;官方的insights显得太重，我们打算享用这个免费午餐，但不定制它。对于个性化的数据分析，我们准备另起炉灶，完全独立于Open edX本身。架构上的设计主要为&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;采用edx的tracking system（这套机制的设计十分聪明），但产生独立的log，这样一来既不污染insights的数据源，分析时也避免从一大推的数据里去过滤数据 &lt;/li&gt;
&lt;li&gt;为了对接到edx本身，诸如需要获取课程和用户数据，采用我之前写的&lt;a href="https://github.com/wwj718/edx_siteapi"&gt;edx_siteapi&lt;/a&gt;与Open edX系统通信。&lt;/li&gt;
&lt;li&gt;将其作为一个独立的服务&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我用周末的两天，搭建了初始模型，从目前的进展看来，这条路似乎还算康庄大道&lt;/p&gt;
&lt;h1&gt;任务描述&lt;/h1&gt;
&lt;p&gt;架构中的第一条，产生了难题，我试着去hack tracking system的时候，发现它并不是个平坦的结构，hack起来十分痛苦，而我定制开源系统的原则之一是尽可能不侵入原代码。尽可能尊重原有架构，试着去理解它而不是急着改造它，后者的代价太沉重了，危机四伏&lt;/p&gt;
&lt;p&gt;所以眼前的第一个任务是理解tracking system的机制，并优雅地定制它&lt;/p&gt;
&lt;h1&gt;最初思路&lt;/h1&gt;
&lt;h3&gt;另起炉灶&lt;/h3&gt;
&lt;p&gt;写一个rest服务，在js中用ajax去发送事件(当然你也可以用edx采用的backbone)，对应的rest服务去写日志（采用django或是python原生的方式都行），这种方式简单粗暴。因为违背了我拓展开源系统的原则，所以直接pass了&lt;/p&gt;
&lt;h3&gt;拓展既有的tracking system&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://event-tracking.readthedocs.org/en/latest/user_guide/design.html#best-practices"&gt;best-practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;eventtracking&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tracker&lt;/span&gt;
&lt;span class="n"&gt;tracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some.event.name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c1"&gt;#未注册的事件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;问题是日志没有单独剥离出来，分析时，日志量巨大，需要筛选出来，所以这是我们主要需要解决的问题&lt;/p&gt;
&lt;p&gt;更好的范式为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;eventtracking&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tracker&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tracker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;tracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Open edX tracking system的设计&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/event-tracking/blob/master/doc/user_guide/design.rst"&gt;event-tracking/doc/user_guide/design.rst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://event-tracking.readthedocs.org/en/latest/user_guide/design.html"&gt;Design doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openedx.atlassian.net/wiki/display/AN/Event+Design+and+Review+Process"&gt;Event Design and Review Process&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openedx.atlassian.net/wiki/display/AN/Video+Bumper+Events"&gt;Video Bumper Events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other Tracking Systems（edx支持）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.datadoghq.com/"&gt;Data Dog&lt;/a&gt;: 一种系统监控工具，应用监控服务商（saas）&lt;ul&gt;
&lt;li&gt;airbnb在用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://segment.com/"&gt;Segment&lt;/a&gt;: 希望做出一款能与KISSmetrics或Google Analytics展开有力竞争的产品&lt;/li&gt;
&lt;li&gt;Google Analytics&lt;/li&gt;
&lt;li&gt;Deprecated APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;出于国内网络的原因，我们可能需要考虑国内的Analytics服务，由于Analytics用种普遍需求，所以国内也容易找到同类产品：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tongji.baidu.com/"&gt;tongji.baidu.com&lt;/a&gt; :百度&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ta.qq.com/"&gt;ta.qq.com&lt;/a&gt;:腾讯&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Open edX中的tracking log&lt;/h3&gt;
&lt;p&gt;Open edX中的tracking system产生的log与系统业务相关，数据特征皆为教育者所关心。并不是一种不是通用的数据（诸如nginx产生的日志就很通用，仅关心http请求本身），正是这种特质，使其适合作为EDM的数据源&lt;/p&gt;
&lt;h1&gt;源码分析&lt;/h1&gt;
&lt;p&gt;由于当前文档的匮乏，我们只好直接翻源码了，涉及的源码主要包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/event-tracking"&gt;event-tracking&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/common/djangoapps/track"&gt;track&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们从产生emit（从语义就可以知道这是提交日志事件的功能函数）开始追踪，目的是找到产生独立log的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;a href="https://github.com/edx/event-tracking/blob/master/eventtracking/tracker.py#L65"&gt;emit&lt;/a&gt;  有事件监听&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;a href="https://github.com/edx/event-tracking/blob/master/eventtracking/tracker.py#L41"&gt;self.routing_backend = RoutingBackend(backends=backends, processors=processors)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从class的名字我们可以猜到这个类（&lt;a href="https://github.com/edx/event-tracking/blob/master/eventtracking/tracker.py#L35"&gt;Tracker&lt;/a&gt;）基本就是我们要找的东西啦&lt;/p&gt;
&lt;p&gt;接下来找侵入的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;a href="https://github.com/edx/event-tracking/blob/master/eventtracking/tracker.py#L133"&gt;tracker.get_tracker()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;eventtracking&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tracker&lt;/span&gt;  &lt;span class="c1"&gt;#实际上是eventtracking/tracker.py文件&lt;/span&gt;
&lt;span class="n"&gt;tracker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tracker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tracker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#得到TRACKERS[&amp;#39;default&amp;#39;] 在register_tracker赋值 ，产生疑惑：register_tracker何时被注册的&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;code&gt;eventtracking/django/__init__.py&lt;/code&gt; 里override_default_tracker()注册tracker，而&lt;code&gt;eventtracking.django&lt;/code&gt;的&lt;a href="https://github.com/edx/event-tracking/blob/master/eventtracking/django/apps.py#L7"&gt;EventTrackingConfig&lt;/a&gt;是触发上边代码的地方，具体原理可见：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#cms/envs/common.py&lt;/span&gt;
    &lt;span class="c1"&gt;# Tracking&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;track&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;eventtracking.django.apps.EventTrackingConfig&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;#这里最终触发注册&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以我们完全可以构造自己的tracker，因为TRACKERS是个dict，所以可以同时存在任意多的tracker，每个tracker可以有自己的backends，至此，探索完毕，问题解决&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;至于细节问题，构造tracker是主要的任务，直接用Tracker构造一个新的就好，核心参数是&lt;code&gt;backends, ThreadLocalContextLocator(), processors&lt;/code&gt;,其中backends是定制化的核心，之后加入到TRACKERS中，调用时，&lt;code&gt;from eventtracking import mytracker&lt;/code&gt;就好，其他和原生的tracker无异&lt;/p&gt;
&lt;h1&gt;backend and middleware&lt;/h1&gt;
&lt;p&gt;既然在读这块的源码，解决完任务，顺便做了更全面的探索（从框架层）&lt;/p&gt;
&lt;h3&gt;backend&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#lms/envs/aws.py&lt;/span&gt;
&lt;span class="c1"&gt;# Event tracking&lt;/span&gt;
&lt;span class="n"&gt;TRACKING_BACKENDS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AUTH_TOKENS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TRACKING_BACKENDS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}))&lt;/span&gt;
&lt;span class="n"&gt;EVENT_TRACKING_BACKENDS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tracking_logs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;OPTIONS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backends&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AUTH_TOKENS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EVENT_TRACKING_BACKENDS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;middleware&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;edx-platform/common/djangoapps/track/middleware.py&lt;/code&gt;中，tracker在request里产生，被注入了session之类的属性，tracker生成的时候就很强大了，这就是它有上下文的原因，django作为一个大而全的框架，在此威力在此显现出来&lt;/p&gt;
&lt;h1&gt;其他&lt;/h1&gt;
&lt;h3&gt;server_track&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/common/djangoapps/track/views/__init__.py#L85"&gt;server_track&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个应该是配合js使用的，作为rest服务，这部分没详细去挖掘，我想模仿Segment的机制去实现&lt;/p&gt;
&lt;h1&gt;xblock tracking system&lt;/h1&gt;
&lt;p&gt;直接参考既有的插件就行了，这一部分倒是简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/oppia/xblock/blob/master/oppia/oppia.py"&gt;oppia&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openedx.atlassian.net/wiki/display/AN/Oppia+XBlock+Event+Design"&gt;Oppia XBlock Event Design&lt;/a&gt;,注意：&lt;ul&gt;
&lt;li&gt;Event namespace&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-developer-guide/en/latest/analytics.html#event-tracking"&gt;Event Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openedx.atlassian.net/wiki/display/OPEN/XBlock+Analytics+Guidelines#XBlockAnalyticsGuidelines-WhatshouldmyXBlockemiteventsfor?"&gt;XBlock Analytics Guidelines&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openedx.atlassian.net/wiki/display/AN/Code+Snippets"&gt;Code Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://event-tracking.readthedocs.org/en/latest/user_guide/design.html#best-practices"&gt;best-practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate><guid>tag:,2016-03-24:explore-Open-edX-tracking-system.html</guid><category>edx</category></item><item><title>django源码阅读笔记</title><link>/django-source-code-explore-note.html</link><description>&lt;p&gt;Open edX的后端采用Django来写，Django是一个大而全的web框架，许多地方和Rails相似&lt;/p&gt;
&lt;p&gt;Open edX对Django框架做了大量的改造，对其特性的应用也是十分全面。由于时常需要去hack Open edX，以至于不得不深入到Django源码本身，读别人的源码，和大多事情一样，都符合万事开头难的规律，深入之后，其乐无穷.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;初极狭，才通人，复行数十步，豁然开朗&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Open edX的最新稳定版所依赖的Django版本为1.8.7，所以我主要阅读的也是这个版本的源码:&lt;a href="https://github.com/django/django/tree/1.8.7"&gt;Django 1.8.7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面下阅读过程一些值得记录的地方记下来&lt;/p&gt;
&lt;h1&gt;django-admin&lt;/h1&gt;
&lt;p&gt;安装django后，我们会获得一个命令行工具&lt;code&gt;django-admin&lt;/code&gt;，用于创建django项目和djangoapp&lt;/p&gt;
&lt;p&gt;这主要是通过&lt;a href="https://github.com/django/django/blob/1.8.7/setup.py#L47"&gt;entry_points&lt;/a&gt;实现&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;entry_points={&amp;#39;console_scripts&amp;#39;: [
        &amp;#39;django-admin = django.core.management:execute_from_command_line&amp;#39;,
    ]},
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过entry_points,我们可以将python函数注册到系统，这对于用python写系统应用十分有用&lt;/p&gt;
&lt;h1&gt;request&lt;/h1&gt;
&lt;p&gt;首先来看看&lt;a href="https://github.com/django/django/blob/1.8.7/django%2Fhttp%2Frequest.py#L42"&gt;HttpRequest&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QueryDict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mutable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QueryDict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mutable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;QueryDict&lt;/h3&gt;
&lt;p&gt;request的两个GET和POST属性是&lt;a href="https://github.com/django/django/blob/1.8.7/django%2Fhttp%2Frequest.py#L316"&gt;QueryDict&lt;/a&gt;.
QueryDict集成自&lt;a href="https://github.com/django/django/blob/1.8.7/django%2Futils%2Fdatastructures.py#L285"&gt;MultiValueDict&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MultiValueDict来自&lt;a href="https://github.com/django/django/blob/1.8.7/django%2Futils%2Fdatastructures.py"&gt;django/django/utils/datastructures.py&lt;/a&gt;,是django为自身打造的一种抽象数据结构，这个抽象数据结构主要是为了解决这个问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This class exists to solve the irritating problem raised by cgi.parse_qs,which returns a list for every key, even though most Web forms submitsingle name-value pairs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;MultiPartParser&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django/http/multipartparser.py#L45"&gt;MultiPartParser&lt;/a&gt;类的主要作用是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Multi-part parsing for file uploads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;更多的可用属性和方法参考:&lt;a href="https://docs.djangoproject.com/en/1.8/ref/request-response/"&gt;Request and response objects&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;response&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django/http/response.py#L330"&gt;HttpResponse&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An HTTP response class with a string as content.
     This content that can be read, appended to or replaced.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;JsonResponse&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django/http/response.py#L517"&gt;django/django/http/response.py JsonResponse&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class JsonResponse(HttpResponse):
        ...
        kwargs.setdefault(&amp;#39;content_type&amp;#39;, &amp;#39;application/json&amp;#39;)
        data = json.dumps(data, cls=encoder)
        super(JsonResponse, self).__init__(content=data, **kwargs)
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;middleware&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Middleware is a framework of hooks into Django’s request/response processing. It’s a light, low-level “plugin” system for globally altering Django’s input or output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们关注一下几个middleware&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="s1"&gt;&amp;#39;django.contrib.sessions.middleware.SessionMiddleware&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.middleware.common.CommonMiddleware&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.middleware.csrf.CsrfViewMiddleware&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;django.contrib.auth.middleware.AuthenticationMiddleware&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django/contrib/sessions/middleware.py#L9"&gt;SessionMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;h5&gt;process_request&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;import_module&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SESSION_ENGINE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionStore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionStore&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;session_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COOKIES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SESSION_COOKIE_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;process_response&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;process_response() is called on all responses before they’re returned to the browser.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;                        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SESSION_COOKIE_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_age&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;max_age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;expires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;expires&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SESSION_COOKIE_DOMAIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SESSION_COOKIE_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SESSION_COOKIE_SECURE&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;httponly&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SESSION_COOKIE_HTTPONLY&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django%2Fmiddleware%2Fcommon.py#L16"&gt;CommonMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用条件分支来过滤非法客户端&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;META&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user_agent_regex&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DISALLOWED_USER_AGENTS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_agent_regex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;META&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HTTP_USER_AGENT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
                    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Forbidden (User agent): &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="s1"&gt;&amp;#39;status_code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="s1"&gt;&amp;#39;request&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpResponseForbidden&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;h1&amp;gt;Forbidden&amp;lt;/h1&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ETag header的处理也在CommonMiddleware&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django/middleware/csrf.py#L76"&gt;CsrfViewMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;h5&gt;process_view&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;csrf_exempt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;callback come from &lt;code&gt;def process_view(self, request, callback, callback_args, callback_kwargs):&lt;/code&gt;,callback是装饰器？&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/django/django/blob/master/django%2Fcontrib%2Fauth%2Fmiddleware.py#L14"&gt;AuthenticationMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;h5&gt;process_request&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;session&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;The Django authentication middleware requires session middleware &amp;quot;&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;to be installed. Edit your MIDDLEWARE_CLASSES setting to insert &amp;quot;&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;&amp;#39;django.contrib.sessions.middleware.SessionMiddleware&amp;#39; before &amp;quot;&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;&amp;#39;django.contrib.auth.middleware.AuthenticationMiddleware&amp;#39;.&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SimpleLazyObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;get_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意断言（assert）的使用，这里设置了request.user,并且&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Django authentication middleware requires session middleware&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;get_user&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django%2Fcontrib%2Fauth%2F__init__.py#L159"&gt;get_user&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;backends&lt;/h1&gt;
&lt;h3&gt;&lt;a href="https://github.com/django/django/blob/1.8.7/django%2Fcontrib%2Fauth%2Fbackends.py#L7"&gt;ModelBackend&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;By default, AUTHENTICATION_BACKENDS is set to:  &lt;code&gt;['django.contrib.auth.backends.ModelBackend']&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;CASBackend&lt;/h3&gt;
&lt;p&gt;look at &lt;a href="https://github.com/wwj718/django-cas/blob/wwj/1.2.0/cas/backends.py#L218"&gt;CASBackend&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;storage system&lt;/h1&gt;
&lt;h3&gt;qiniu&lt;/h3&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/django/django/tree/1.8.7"&gt;django/django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.8/"&gt;Django documentation 1.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.djangobook.com/en/2.0/index.html"&gt;djangobook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangobook.py3k.cn/2.0/"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.djangobook.com/en/2.0/appendixG.html"&gt;Appendix G: Request and Response Objects&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangobook.py3k.cn/appendixH/"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.8/topics/http/middleware/"&gt;Django documentation Middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.9/topics/auth/customizing/"&gt;Customizing authentication in Django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.9/howto/custom-file-storage/"&gt;Writing a custom storage system&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 07 Mar 2016 00:00:00 +0000</pubDate><guid>tag:,2016-03-07:django-source-code-explore-note.html</guid><category>django</category></item><item><title>使用bitnami提供的二进制包在局域网内安装Open edX</title><link>/try-bitnami.html</link><description>&lt;p&gt;由于Open edX的依赖繁多，安装繁琐等原因，&lt;a href="https://bitnami.com/"&gt;bitnami&lt;/a&gt;提供了二进制的一键安装包&lt;a href="https://bitnami.com/stack/edx"&gt;Open edX&lt;/a&gt;，edx的blog上对此事有过报道&lt;/p&gt;
&lt;p&gt;一般而言，社区倾向于采用原生的安装方式，原因有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前大多的讨论基于原生版本，这样使用过程中遇到的坑，易于搜到解决方案，因为大家围绕着一个相同的版本。这样可以充分发挥社区的力量&lt;/li&gt;
&lt;li&gt;易于升级和改造（主要也是因为资料多）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另一方便，我们也有动力去采用一键安装的二进制包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装便利，只要下载好二进制文件（1.1G），安装即可.&lt;/li&gt;
&lt;li&gt;不必担心国内外网络的差异造成的各类诡异错误。在校园网中这个优势尤其明显&lt;/li&gt;
&lt;li&gt;对环境的要求仅有linux-x64！&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在目标机器上下载&lt;a href="http://bitnami.com/redirect/to/87743/bitnami-edx-cypress-4-linux-x64-installer.run"&gt;bitnami-edx-cypress-4-linux-x64-installer.run&lt;/a&gt; （这是当前最新版）&lt;ul&gt;
&lt;li&gt;你可以采用你喜欢的工具下载（wget，curl，aria2c等），也可以本地下好，scp传输到目标机器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chmod 755 bitnami-edx-cypress-4-linux-x64-installer.run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./bitnami-edx-cypress-4-linux-x64-installer.run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;之后按提示填写信息就行&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;使用&lt;/h1&gt;
&lt;h3&gt;访问&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;http://localhost:8080 ： lms(学生端)&lt;/li&gt;
&lt;li&gt;http://localhost:18010 ： cms（教师端）&lt;/li&gt;
&lt;li&gt;http://localhost/admin ： admin（后台管理）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;start/stop the servers&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ~/application-version
./ctlscript.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更多的设置参考&lt;a href="https://wiki.bitnami.com/Applications/Bitnami_Open_edX"&gt;Bitnami_Open_edX wiki&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;探索&lt;/h1&gt;
&lt;h3&gt;项目结构&lt;/h3&gt;
&lt;p&gt;使用tree探索：&lt;code&gt;tree -L -C ~/edx-cypress-4&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;相关进程&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ps aux |grep edxapp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们看到&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/home/wwj/edx-cypress-4/apps/edx/edx-platform/bin/python.edxapp ./manage.py lms --settings=aws celery worker -I contentstore.tasks --loglevel=info --queues=edx.lms.core.low --hostname=edx.lms.core.low.%h --concurrency=1&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;控制脚本&lt;/h3&gt;
&lt;p&gt;搜索&lt;code&gt;edx.lms.core.low&lt;/code&gt;：&lt;code&gt;grep edx.lms.core.low ~/edx-cypress-4  -R&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发现&lt;code&gt;/home/wwj/edx-cypress-4/apps/edx/scripts/ctl.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过分析&lt;code&gt;ctl.sh&lt;/code&gt;,我们发现，bitnami采用shell来控制edx，而不是像原生安装那样采用supervisor来控制进程&lt;/p&gt;
&lt;h3&gt;源码&lt;/h3&gt;
&lt;p&gt;查看源码的git log我们发现，最后一次提交为&lt;code&gt;bde4dc5fdb6b470db0de361bc87038faf4f5471c&lt;/code&gt;,这恰好是&lt;a href="https://github.com/edx/edx-platform/commits/named-release/cypress.rc"&gt;named-release/cypress.rc&lt;/a&gt; 最终的提交&lt;/p&gt;
&lt;p&gt;所以bitnami没有动源码&lt;/p&gt;
&lt;p&gt;这意味着它和原生系统基本相同&lt;/p&gt;
&lt;h1&gt;题外&lt;/h1&gt;
&lt;p&gt;另外我对&lt;a href="https://bitnami.com"&gt;bitnami&lt;/a&gt;采用的技术挺感兴趣，下午和@netwalk0r聊了一下，他说以前看过bitnami的安装包，应该不是采用base64的打包，我们都觉得应该是使用某种方式包装了二进制包和shell。&lt;/p&gt;
&lt;p&gt;欢迎对此了解的同学一起来讨论咯&lt;/p&gt;
&lt;p&gt;当然由于我相信docker这类技术是未来，所以也不愿在二进制打包这类技术上话费太多精力&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;补充&lt;/p&gt;
&lt;p&gt;偶然的机会发现，bitnami 的应该是使用了&lt;a href="https://github.com/megastep/makeself"&gt;makeself&lt;/a&gt;来打包，这个工具好强大&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitnami.com/stack/edx/README.txt"&gt;stack/edx/README&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.bitnami.com/Applications/Bitnami_Open_edX"&gt;Bitnami_Open_edX wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 05 Mar 2016 00:00:00 +0000</pubDate><guid>tag:,2016-03-05:try-bitnami.html</guid><category>edx</category></item><item><title>为Open edX构建存储服务</title><link>/built-data-storage-system.html</link><description>&lt;p&gt;汤山归来，两天不碰电脑，如小钗所言，变聪明许多，思维逐渐活跃&lt;/p&gt;
&lt;p&gt;构建存储服务这个话题困扰了我很久，直到今天洗澡的时候才把这个问题的解决方案大纲理清，与大家分析思路和方案&lt;/p&gt;
&lt;h1&gt;背景介绍&lt;/h1&gt;
&lt;h3&gt;Open edX&lt;/h3&gt;
&lt;p&gt;关于Open edX就不做过多介绍了，误入本文的小伙伴可以翻阅我此前的这篇译文:&lt;a href="http://blog.just4fun.site/about-Open-edX.html"&gt;关于Open edX[译文]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;入坑已久的小伙伴，继续下翻好啦&lt;/p&gt;
&lt;h3&gt;存储服务&lt;/h3&gt;
&lt;p&gt;这里谈论的存储服务，主要指为网站提供文件存储/分发功能的服务，包括js/css/img等静态文件，也包括用户上传的资源文件，诸如视频/图片和文档&lt;/p&gt;
&lt;p&gt;之所以称之为服务而不是系统，是因为我把它视为一个抽象存在，实际上在技术人员看来，它只是一套对接云平台的接口。是存储云平台与Open edX之间的一个胶水层&lt;/p&gt;
&lt;p&gt;出于七牛云完备的文档和对开发者的友好，我选择以七牛云为例来实现&lt;/p&gt;
&lt;h1&gt;Open edX中的文件存储需求&lt;/h1&gt;
&lt;p&gt;我们进入主题，从需求说起。&lt;/p&gt;
&lt;p&gt;Open edX中的文件存储需求主要包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;课程团队私有仓库（文件夹），用于存取：&lt;ul&gt;
&lt;li&gt;课程相关的log，以便进一步做数据分析&lt;/li&gt;
&lt;li&gt;课程数据下载，诸如成绩单&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;课程资料&lt;/li&gt;
&lt;li&gt;课程视频（重点之一）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中涉及的技术点主要包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件权限控制&lt;/li&gt;
&lt;li&gt;文件操作（接口）&lt;ul&gt;
&lt;li&gt;上传&lt;/li&gt;
&lt;li&gt;下载&lt;/li&gt;
&lt;li&gt;管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CDN&lt;/li&gt;
&lt;li&gt;流量监测（方便优化）&lt;/li&gt;
&lt;li&gt;并发访问&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;h3&gt;传统思路&lt;/h3&gt;
&lt;p&gt;实际上以上是很典型的文件存储需求，传统的思路是自己构建一个存储服务就好啦，租上机房，买来服务器，拉好光纤，做好磁盘阵列，写一个web服务来对外提供存储服务。如果访问量大，继续做CDN之类的优化，折腾之极，而且效果不理想&lt;/p&gt;
&lt;p&gt;我们实际也这样做过,试着自行搭建管理系统（试过wagtail，seafile等），试着整合cas登录机制，都很折腾&lt;/p&gt;
&lt;p&gt;这样面临的问题包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间成本高&lt;/li&gt;
&lt;li&gt;经济成本高&lt;/li&gt;
&lt;li&gt;系统不够健壮&lt;/li&gt;
&lt;li&gt;扩展性差&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;基于云平台&lt;/h3&gt;
&lt;p&gt;今天的开发者可能是有史以来最幸福的开发者。云的崛起，使大多的计算资源以云的形式存在，我们只需要抽象使用即可。&lt;/p&gt;
&lt;p&gt;付出经济的成本，我们就可轻松获得稳定、灵活的云服务，而把底层的复杂性屏蔽在外，开发者只需关注业务逻辑。&lt;/p&gt;
&lt;p&gt;当然，存储也不例外&lt;/p&gt;
&lt;h1&gt;技术细节&lt;/h1&gt;
&lt;p&gt;此前困扰我的一个问题是，处于对权限的控制，我们是不是需要所有文件都经过后端，然后同步到云&lt;/p&gt;
&lt;p&gt;其实这个问题已经被云存储上考虑在内的，S3的解决方案最为完备，此后也被其他厂商跟进。但对此方案的论述似乎很少，或者这是架构的一个问题，本身就小众，关注者不多，我在网上一搜发现不少架构者有这种疑惑，但决绝方案比较晚近才比较完备&lt;/p&gt;
&lt;p&gt;当我们能够描述问题的时候，已经解决了大半，尤其是在网络时代，你遇到的问题，其实几乎都被别人遇到过，你要做的是弄清问题所在领域和问题描述。then google它或是github它&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;seek, and you will find&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;编程模型&lt;/h3&gt;
&lt;p&gt;&lt;img alt="programming-model" src="http://developer.qiniu.com/docs/v6/api/overview/img/programming-model.png" /&gt;&lt;/p&gt;
&lt;p&gt;一般的云存储上传流程是:&lt;code&gt;客户端（终端用户） =&amp;gt; 业务服务器 =&amp;gt; 云存储服务&lt;/code&gt;,这样多了一次上传的流程，会有上传延时，而且有带宽的浪费。但七牛引入了客户端直传，将整个上传过程调整为：&lt;code&gt;客户端（终端用户） =&amp;gt; 七牛 =&amp;gt; 业务服务器&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文件上传成功以后，七牛的服务器使用回调功能，只需要将非常少的数据（比如Key）传给应用服务器，应用服务器进行保存即可。&lt;/p&gt;
&lt;p&gt;在七牛云存储中，整个上传流程大体分为这样几步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务服务器颁发&lt;code&gt;上传凭证&lt;/code&gt;给客户端（终端用户）&lt;/li&gt;
&lt;li&gt;客户端凭借 上传凭证 上传文件到七牛&lt;/li&gt;
&lt;li&gt;在七牛获得完整数据后，发起一个 HTTP 请求回调到业务服务器&lt;/li&gt;
&lt;li&gt;业务服务器保存相关信息，并返回一些信息给七牛&lt;/li&gt;
&lt;li&gt;七牛原封不动地将这些信息转发给客户端（终端用户）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载和其他操作也于此类似。更多细节请看文档&lt;/p&gt;
&lt;p&gt;由以上流程我们看到，这是一个灵活的机制，我们可以将自己的业务员逻辑轻松附在其上，诸如如果要控制用户级别的权限，那么只要在在后端将上传凭证和用户身份进行绑定即可。诸如此类&lt;/p&gt;
&lt;h3&gt;将模型用于Open edX&lt;/h3&gt;
&lt;p&gt;后端层面，构建颁发凭证的rest 接口，利用凭证，我们可以做到用户或课程团队粒度的权限控制。&lt;/p&gt;
&lt;p&gt;前端层面，将上传资源的按钮绑定到新的函数上。主要需要修改的地方并不多：诸如studio视频组件，论坛的图片上传等&lt;/p&gt;
&lt;p&gt;你当然也可以实现功能更全面的资源管理，诸如实践课件资源库之类的功能，只需将云存储api作为积木，置于后端业务逻辑中即可&lt;/p&gt;
&lt;h1&gt;我的实现&lt;/h1&gt;
&lt;p&gt;我会把我的实现放到我此前这个项目里&lt;a href="https://github.com/wwj718/edx_siteapi"&gt;edx_siteapi&lt;/a&gt;，欢迎围观，该项目的主要目的是对open edx进行拓展。&lt;/p&gt;
&lt;p&gt;主要是实现权限控制和授权的rest api&lt;/p&gt;
&lt;h3&gt;其他云平台&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;又拍云&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.aliyun.com/document_detail/oss/product-documentation/intruduction.html?spm=5176.docoss/sdk/python-sdk/get-started.6.80.njJEJT"&gt;阿里云 对象存储oss&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.aliyun.com/document_detail/oss/sdk/python-sdk/get-started.html?spm=5176.docoss/product-documentation/intruduction.6.270.maUISb"&gt;python-sdk 快速入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;FQA&lt;/h1&gt;
&lt;h3&gt;流量监控的用途&lt;/h3&gt;
&lt;p&gt;对于某个区域内高访问量的视频资源，采用区域内自行搭建视频服务器的方式可能比云服务廉价许多。但这依然不影响我们使用云存储。一般的云存储都有流量监控机制，当我们检测到某类文件流量高于临界值时，只需把它同步到自行搭建的本地服务器即可，后台修改地址即可，我们可以用编程的方式，为视频对象赋予一个use_local_file的开关（属性）即可&lt;/p&gt;
&lt;p&gt;这样在享受云平台廉价、敏捷的同时，也可以对特定文件做本地优化(出于成本考虑)&lt;/p&gt;
&lt;p&gt;之所以提到这点是因为公司前技术总监T老师构建了此前的视频解决方案，在特定情况下，要比云存储廉价。他说我遇见过最优秀的技术人员之一，尽管目前已经不再做技术，对问题的分解能力，交流与组织能力都令人叹服&lt;/p&gt;
&lt;h3&gt;跨域问题&lt;/h3&gt;
&lt;p&gt;由于大多云存储网站都支持域名绑定，所以不错在跨域的问题，ajax可以照常使用。所以开发者感受不出文件服务是不是来自本地后端&lt;/p&gt;
&lt;h3&gt;定制化的CDN&lt;/h3&gt;
&lt;p&gt;出于我们的具体需求，局域网内布有服务器。解决方案也简单，定制同步文件，而后匹配用户请求头，将静态资源重定向到坐在局域网服务器的ip即可，这个任务可以放在nginx那里处理&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://developer.qiniu.com/docs/v6/api/overview/concepts.html"&gt;关键概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://developer.qiniu.com/docs/v6/api/overview/programming-model.html"&gt;编程模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://developer.qiniu.com/docs/v6/sdk/python-sdk.html"&gt;Python SDK 使用指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://developer.qiniu.com/docs/v6/sdk/javascript-sdk.html"&gt;JavaScript SDK 使用指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://developer.qiniu.com/docs/v6/api/reference/security/put-policy.html"&gt;上传策略（PutPolicy）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;相关问题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://segmentfault.com/q/1010000000611870"&gt;使用第三方存储，怎么不进行自己服务器中转就能进行权限控制？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://segmentfault.com/q/1010000000611870"&gt;各种云储存都有一个问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate><guid>tag:,2016-02-28:built-data-storage-system.html</guid><category>edx</category></item><item><title>为edx dogwood版本开发者准备的ova镜像</title><link>/dowwood-for-dev.html</link><description>&lt;p&gt;镜像基于&lt;a href="http://edustack.org/"&gt;eduStack&lt;/a&gt;的版本:&lt;a href="http://45.32.248.32/eduStack.Dogwood.ova"&gt;eduStack.Dogwood.ova&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;a href=""&gt;VMWare Workstation 12&lt;/a&gt;和&lt;a href=""&gt;&lt;/a&gt;都可正常使用&lt;/p&gt;
&lt;h3&gt;让局域网内可访问网站&lt;/h3&gt;
&lt;p&gt;采用bridged(桥接模式)即可。前提是你的网络能自动分配ip&lt;/p&gt;
&lt;h1&gt;账户&lt;/h1&gt;
&lt;p&gt;edx:edx&lt;/p&gt;
&lt;h3&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;edustack做好了汉化的工作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我为此添加了以下开发特性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持ipyhton notebook&lt;ul&gt;
&lt;li&gt;使用方法:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;vim优化&lt;/li&gt;
&lt;li&gt;htop&lt;/li&gt;
&lt;li&gt;fish&lt;/li&gt;
&lt;li&gt;z&lt;ul&gt;
&lt;li&gt;进入edx-platform目录只需要:&lt;code&gt;z edx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;todo&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;永久token&lt;/li&gt;
&lt;li&gt;挂到vps上&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 23 Feb 2016 00:00:00 +0000</pubDate><guid>tag:,2016-02-23:dowwood-for-dev.html</guid><category>edx</category></item><item><title>基于云端环境的edx开发协作</title><link>/edx-dev-in-cloud.html</link><description>&lt;p&gt;本地开发edx有许多坑，其中一个是open edx的环境搭建十分复杂，而且极其耗费cpu和内存资源。如果每个小伙伴都自行折腾一遍，真是一个不小的精力浪费。而且由于各自平台的不同，出现的错误五花八门，虽然采用vagrant可以部分解决，但vagrant本身又引来了各种蛋疼的问题。&lt;/p&gt;
&lt;p&gt;就我个人而言，习惯分布式的协作，团队成员分布在全国各地，甚至国外，为了交流方便，常常围绕一个一致的中心，否则容易各说各的，这个中心包括源码远程仓库和一致的开发环境。&lt;/p&gt;
&lt;p&gt;为了让每个人专注在自己的领域，通过分工来达到最大效率，团队中最好有一个全栈(其实就是万金油 囧)来协调大家。全栈未必熟悉具体细节，但对流程应该能整体把握，以便来黏合不同领域和分配任务，划清职责&lt;/p&gt;
&lt;h1&gt;我们的开发环境&lt;/h1&gt;
&lt;p&gt;虽然我们的开发环境基于云，但思路是通用的，希望对你的团队也有用&lt;/p&gt;
&lt;p&gt;目前我们的开发环境在青云上，按需付费。1核4G内存(swap)就足够了,ip按流量计费。价格很廉价&lt;/p&gt;
&lt;p&gt;所有配置由技术负责人完成就行，任务量并不大。&lt;/p&gt;
&lt;h3&gt;云端开发环境&lt;/h3&gt;
&lt;p&gt;云上存有一份干净的原生dogwood镜像，在此基础上定制出公司的开发基础版，假设代号为&lt;code&gt;dogwood_base&lt;/code&gt;，该基础版包括一同通用的定制。&lt;/p&gt;
&lt;p&gt;前后端的开发均从中衍生各自的版本。&lt;/p&gt;
&lt;h3&gt;代码管理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;只谈论核心仓库：edx-platform&lt;/li&gt;
&lt;li&gt;在git服务器上，存有公司定制的open edx源码库，存为私有仓库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dogwood_base&lt;/code&gt;是基于named-release/Dogwood的分支&lt;/li&gt;
&lt;li&gt;团队每个成员均有自己的开发分支，命名为&lt;code&gt;&amp;lt;NAME&amp;gt;/&amp;lt;FEATURE&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;NAME&amp;gt;&lt;/code&gt;为成员姓名,&lt;code&gt;&amp;lt;FEATURE&amp;gt;&lt;/code&gt;为功能代号&lt;/li&gt;
&lt;li&gt;技术负责人负责将各个开发代码merge到dogwood_base，当然你也可以采用gitflow工作流&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;后端开发&lt;/h1&gt;
&lt;p&gt;后端开发的同学，可能分布在网络各地&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt;可以让你们在一个同个shell会话里协作:参考&lt;a href="http://www.kancloud.cn/kancloud/tmux/62466"&gt;使用 tmux 结对编程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;采用组来做到协同会话&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tmux new-session -s groupedsession
tmux new-session -t groupedsession -s mysession
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;新人入职&lt;/h4&gt;
&lt;p&gt;只需要给他分发一个镜像就好啦，环境的搭配十分容易。团队内经验的传递也是个影响效率的关键因素，通过tmux，新老员工能容易地结对编程，经验的传递变得容易。使用qq和文档互动性是很低的，而高互动性能明显提高学习效率，tmux，你值得拥有&lt;/p&gt;
&lt;h4&gt;为前端提供服务&lt;/h4&gt;
&lt;p&gt;前端同学一般对linux不怎么熟悉，后端同学最好能直接给他们一个一切就绪的环境，因为我自己在处理后端，所以给后端安排的任务会多些&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责后端的同学，折腾好配置环境，可以用我的&lt;a href="https://github.com/wwj718/edx_tools"&gt;edx_tools&lt;/a&gt;,按照这篇教程为前端同学准备好环境：&lt;a href="http://blog.just4fun.site/edx-front-dev-workflow.html"&gt;edx前端定制开发工作流&lt;/a&gt;,交付给前端的仅仅是个一切就绪的url&lt;/li&gt;
&lt;li&gt;将前端修改的文件拉取到themes目录，按照theme机制摆放定制文件，参考&lt;a href="https://github.com/edx/edx-platform/tree/master/themes"&gt;edx-platform/themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;在云上开发xblock&lt;/h4&gt;
&lt;p&gt;相比于xblock-sdk，我更倾向于原生的环境，有了云的话，很容易将环境分发给xblock开发者&lt;/p&gt;
&lt;h4&gt;特性开发（遇到风险）&lt;/h4&gt;
&lt;p&gt;在开发一些新特性时，有些特性可能会搞坏环境，当这种情况出现，云环境能很好帮到你，做个快照只要你不到一分钟的时间&lt;/p&gt;
&lt;h1&gt;前端开发&lt;/h1&gt;
&lt;p&gt;由于云端是外网可访问的，后端同学可以帮助前端构建好所有的环境，所以前端可以专注在前端开发，不需要与环境和服务器打交道（open edx的环境对于后端同学来说头很头疼，实在不该把锅甩给前端，毕竟术业有专攻）&lt;/p&gt;
&lt;p&gt;前端同学只需要打开浏览器，输入ip就得到一个干净的开发环境，所需要做的只是用Chrome Dev Tools或者firebug来直接调试scss代码&lt;/p&gt;
&lt;p&gt;&lt;img alt="sass1.png" src="img/edx/sass/sass1.png" /&gt;&lt;/p&gt;
&lt;p&gt;前端同学的工作流为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置好chrome/firefox， 使其支持sass调试，参考&lt;a href="http://thesassway.com/intermediate/using-source-maps-with-sass"&gt;Using source maps with Sass 3.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;直接在chrome里调试,如下如
&lt;img alt="sas2" src="img/edx/sass/sass2.png" /&gt;&lt;/li&gt;
&lt;li&gt;由于在chrome里的修改只对当然会话有效，我们需要将修改保存到本地，使用git管理，每个修改旁边都应该有注释说明，注释格式为：&lt;code&gt;// &amp;lt;NAME&amp;gt;:&amp;lt;MESSAGE&amp;gt;&lt;/code&gt;
&lt;img alt="sas3" src="img/edx/sass/sass3.png" /&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 18 Feb 2016 00:00:00 +0000</pubDate><guid>tag:,2016-02-18:edx-dev-in-cloud.html</guid><category>edx</category></item><item><title>edx前端定制开发工作流</title><link>/edx-front-dev-workflow.html</link><description>&lt;p&gt;这篇文章重点理一下，前端开发的工作流，以便前端开发上手&lt;/p&gt;
&lt;h1&gt;环境搭建（devstack）&lt;/h1&gt;
&lt;p&gt;如果有以下有链接无法打开，应该是网络的问题，请保证能正常访问国外网络（你懂的）&lt;/p&gt;
&lt;h3&gt;软件安装&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;安装VirtualBox，&lt;code&gt;版本 &amp;gt;= 4.3.12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装Vagrant，&lt;code&gt;版本&amp;gt;= 1.6.5&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;edx box下载&lt;/h3&gt;
&lt;p&gt;下载链接：&lt;a href="https://s3.amazonaws.com/edx-static/vagrant-images/20151221-dogwood-fullstack-rc2.box?torrent"&gt;vagrant-images_20151221-dogwood-fullstack-rc2.box&lt;/a&gt;，下载完毕后，得到文件：vagrant-images_20151221-dogwood-fullstack-rc2.box&lt;/p&gt;
&lt;h3&gt;box文件是什么鬼&lt;/h3&gt;
&lt;p&gt;之前忘了对背景知识做些介绍啦&lt;/p&gt;
&lt;p&gt;box文件是Vagrant使用的image（镜像）,用于在VirtualBox里构建虚拟操作系统。我们知道操作系统的镜像一般是iso文件，好比windows7的镜像文件windows_7_ultimate_x64.iso，所以可以把box看做相似的东西。&lt;/p&gt;
&lt;p&gt;我们知道VirtualBox是一款开源虚拟机软件，那么Vagrant又是什么呢，Vagrant可以看做是个配置工具，用于帮助创建、配置、管理虚拟机，帮助我们快速搭建开发环境，有了Vagrant，我们就不需要手动操作VirtualBox，只需要建立一个Vagrantfile，写好配置脚本就行！&lt;/p&gt;
&lt;p&gt;背景知识介绍到这里就差不多啦，如果你想进一步了解，可以自己去google搜索&lt;code&gt;Vagrant介绍&lt;/code&gt;、&lt;code&gt;VirtualBox介绍&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;构建环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在命令行里执行：&lt;code&gt;vagrant box add fullstack vagrant-images_20151221-dogwood-fullstack-rc2.box&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在本地新建文件Vagrantfile,内容如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Vagrant.require_version &amp;quot;&amp;gt;= 1.5.3&amp;quot;

VAGRANTFILE_API_VERSION = &amp;quot;2&amp;quot;

MEMORY = 4096
CPU_COUNT = 2


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Creates an edX fullstack VM from an official release
  config.vm.box     = &amp;quot;fullstack&amp;quot;

  config.vm.synced_folder  &amp;quot;.&amp;quot;, &amp;quot;/vagrant&amp;quot;, disabled: true
  config.ssh.insert_key = true

  config.vm.network :private_network, ip: &amp;quot;192.168.33.10&amp;quot;
  config.hostsupdater.aliases = [&amp;quot;preview.localhost&amp;quot;]

  config.vm.provider :virtualbox do |vb|
    vb.customize [&amp;quot;modifyvm&amp;quot;, :id, &amp;quot;--memory&amp;quot;, MEMORY.to_s]
    vb.customize [&amp;quot;modifyvm&amp;quot;, :id, &amp;quot;--cpus&amp;quot;, CPU_COUNT.to_s]

    # Allow DNS to work for Ubuntu 12.10 host
    # http://askubuntu.com/questions/238040/how-do-i-fix-name-service-for-vagrant-client
    vb.customize [&amp;quot;modifyvm&amp;quot;, :id, &amp;quot;--natdnshostresolver1&amp;quot;, &amp;quot;on&amp;quot;]
  end

end
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;在文件Vagrantfile所在目录下，执行&lt;code&gt;vagrant up&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;看看成果&lt;/h3&gt;
&lt;p&gt;以上步骤顺利完成后，访问&lt;code&gt;192.168.33.10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;之后每次只需要进入到Vagrantfile文件所在目录，执行&lt;code&gt;vagrant up&lt;/code&gt;(启动虚拟机）、&lt;code&gt;vagrant halt&lt;/code&gt;(关闭虚拟机）就行啦&lt;/p&gt;
&lt;h1&gt;开发工作流&lt;/h1&gt;
&lt;p&gt;参考我之前写的&lt;a href="http://blog.just4fun.site/edx-front-dev.html"&gt;edx前端定制开发相关&lt;/a&gt;中&lt;code&gt;use map to debug scss&lt;/code&gt;之后的部分&lt;/p&gt;
&lt;p&gt;当然你也可以参考官方文档：&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack"&gt;edX Developer Stack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你不想跳来跳去，我把重点都列出来：&lt;/p&gt;
&lt;h3&gt;工作流核心&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;搭建开发环境(参考上文)&lt;/li&gt;
&lt;li&gt;由于sass需要编译，所以你需要简单地使用命令行（很简单的）：使用putty登录服务器,下边列出一些常用命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用命令如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo /edx/bin/supervisorctl stop edxapp:&lt;/code&gt;（关闭无用的服务，提高开发速度）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings devstack&lt;/code&gt; (启用开发服务器，记得将5000端口映射出去，注意这是一个常驻进程，需要一直占用这个窗口)&lt;/li&gt;
&lt;li&gt;&lt;pre&gt;
    sudo -H -u edxapp bash
    source /edx/app/edxapp/edxapp_env
    cd /edx/app/edxapp/edx-platform
    paver update_assets lms --debug --settings=aws
    # (生产map文件，方便调试scss)
  &lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;pre&gt;
    sudo -H -u edxapp bash
    source /edx/app/edxapp/edxapp_env
    cd /edx/app/edxapp/edx-platform
    paver update_assets lms --debug --settings=aws --watch
    #（实时观测scss文件的变化，每当变化自动编译为css，这是一个常驻进程，需要一直占用这个窗口）
   &lt;/pre&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在chrome里调试（参考&lt;a href="http://thesassway.com/intermediate/using-source-maps-with-sass"&gt;Using source maps with Sass 3.3&lt;/a&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;使用filezilla修改文件（filezilla可以在设置里指定你喜欢的编辑器作为默认编辑器），修改完成后，ctrl-s保存就会同步到服务器&lt;/li&gt;
&lt;li&gt;静态文件位于目录：&lt;code&gt;edx-platform/lms/static/sass/&lt;/code&gt;，开发是可以直接修改即可，如果能使用git来管理变更则最好&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;附录&lt;/h1&gt;
&lt;p&gt;当前open edx的前端排版主要用到&lt;a href="http://neat.bourbon.io/"&gt;Neat&lt;/a&gt;。.Neat是一个语义化的轻量级布局网格框架，构建在 Sass 和 Bourbon之上&lt;/p&gt;
&lt;p&gt;example看这里：&lt;a href="http://neat.bourbon.io/examples/"&gt;example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文档看这里:&lt;a href="http://thoughtbot.github.io/neat-docs/latest/"&gt;Neat-docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;open edx之后可能会有基于Susy和bootstrap的主题&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 15 Feb 2016 00:00:00 +0000</pubDate><guid>tag:,2016-02-15:edx-front-dev-workflow.html</guid><category>edx</category></item><item><title>编译edx安卓客户端</title><link>/build-edx-android-app.html</link><description>&lt;h1&gt;服务端&lt;/h1&gt;
&lt;p&gt;首先，登录到服务器，编辑&lt;code&gt;/edx/app/edxapp/lms.env.json&lt;/code&gt;,在FEATURES中添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;ENABLE_MOBILE_REST_API&amp;quot;: true,
&amp;quot;ENABLE_OAUTH2_PROVIDER&amp;quot;: true,
&amp;quot;ENABLE_COMBINED_LOGIN_REGISTRATION&amp;quot;: true,
&amp;quot;OAUTH_ENFORCE_SECURE&amp;quot;: false,
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着，&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/mobile.html#create-the-oauth-clients"&gt;创建oauth client&lt;/a&gt;，将得到的OAUTH_CLIENT_ID给移动端&lt;/p&gt;
&lt;h1&gt;移动端&lt;/h1&gt;
&lt;h3&gt;环境依赖&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;= java 7&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SDK要求23&lt;/li&gt;
&lt;li&gt;Build Tools：23.0.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;开始编译&lt;/h3&gt;
&lt;p&gt;首先拉取项目，切换到相应分支:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#拉取edx-app-android&lt;/span&gt;
git clone https://github.com/edx/edx-app-android.git
&lt;span class="c1"&gt;#切换到named-release/dogwood分支&lt;/span&gt;
git checkout -b named-release/dogwood named-release/dogwood
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着修改配置文件&lt;code&gt;VideoLocker/default_config/config.yaml&lt;/code&gt;,填入你自己的服务器信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;API_HOST_URL&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://10.0.2.2&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# localhost is 10.0.2.2 in Android&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ENVIRONMENT_DISPLAY_NAME&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Localhost&amp;#39;&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;PLATFORM_NAME&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;platform&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;here&amp;#39;&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;PLATFORM_DESTINATION_NAME&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;example.com&amp;#39;&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;FEEDBACK_EMAIL_ADDRESS&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;support@example.com&amp;#39;&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;COURSE_ENROLLMENT&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ENABLED&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;EXTERNAL_COURSE_SEARCH_URL&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://10.0.2.2/courses&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将你的&lt;code&gt;OAUTH_CLIENT_ID&lt;/code&gt;填入&lt;code&gt;VideoLocker/default_config/local.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后使用 Android Studio或gradle来编译项目&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/mobile.html"&gt;Setting Up the Open edX Mobile Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-app-android/tree/named-release/dogwood"&gt;edx-app-android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openedx.atlassian.net/wiki/display/MA/App+Configuration+Flags"&gt;App Configuration Flags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 04 Feb 2016 00:00:00 +0000</pubDate><guid>tag:,2016-02-04:build-edx-android-app.html</guid><category>edx</category></item><item><title>ngrok在调试Open edX中的应用</title><link>/use-ngrok-in-open-edx.html</link><description>&lt;p&gt;在去年的一次黑客最喜欢的工具投票中，ngrok位列第五&lt;/p&gt;
&lt;h1&gt;&lt;a href="https://github.com/inconshreveable/ngrok"&gt;ngrok&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;ngrok is a reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service. ngrok captures and analyzes all traffic over the tunnel for later inspection and replay.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于ngrok我此前写过两篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.just4fun.site/build-ngrok-server.html"&gt;搭建ngrok服务（内网穿透）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.just4fun.site/use-ngrok.html"&gt;ngrok使用笔记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;查看数据库信息&lt;/h1&gt;
&lt;h3&gt;将mongo映射出去&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;./ngrok -config ./ngrok.cfg -proto=tcp 27017&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ngrok会将本地端口映射到外网，就像这样：&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_ngrok0.png" src="img/edx/edx_ngrok/edx_ngrok0.png" /&gt;&lt;/p&gt;
&lt;p&gt;从中得到外网地址：xxx.xxx.xxx&lt;/p&gt;
&lt;p&gt;在本地输入：mongo xxx.xxx.xxx&lt;/p&gt;
&lt;p&gt;你就可以访问啦：&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_ngrok1.png" src="img/edx/edx_ngrok/edx_ngrok1.png" /&gt;&lt;/p&gt;
&lt;p&gt;或是使用rebomongo，不需要做任何配置&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_ngrok2.png" src="img/edx/edx_ngrok/edx_ngrok2.png" /&gt;&lt;/p&gt;
&lt;h3&gt;将mysql映射出去&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;./ngrok -config ./ngrok.cfg -proto=tcp 3306&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;mycli -h xxx.xxx.xxx -P xxx -u root&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_ngrok3.png" src="img/edx/edx_ngrok/edx_ngrok3.png" /&gt;&lt;/p&gt;
&lt;h3&gt;run devstack&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings devstack
./ngrok -config ./ngrok.cfg 5000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上两条命令使用不同的tmux窗口打开&lt;/p&gt;
&lt;h3&gt;run IPython notebook&lt;/h3&gt;
&lt;p&gt;参考&lt;a href="http://blog.just4fun.site/dogwood-use-ipython-notebook.html"&gt;use ipython notebook in edx dogwood&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 02 Feb 2016 00:00:00 +0000</pubDate><guid>tag:,2016-02-02:use-ngrok-in-open-edx.html</guid><category>edx</category></item><item><title>use ipython notebook in edx dogwood</title><link>/dogwood-use-ipython-notebook.html</link><description>&lt;p&gt;今晚喝了一杯咖啡写完&lt;a href="http://blog.just4fun.site/edx-front-dev.html"&gt;edx前端开发相关&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;喝了一杯豆浆,写完了这篇&lt;/p&gt;
&lt;p&gt;哈哈，希望内容没有饮料那么湿&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;dogwood版本的django升级到了1.8.7,所以我们有一大波好用的Django工具可用啦！&lt;/p&gt;
&lt;h1&gt;安装依赖&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/pip.edxapp install django-extensions
sudo /edx/bin/pip.edxapp install ipython&lt;span class="o"&gt;[&lt;/span&gt;notebook&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;修改devstack.py&lt;/h1&gt;
&lt;p&gt;在devstack.py末尾添加&lt;code&gt;INSTALLED_APPS += ("django_extensions",)&lt;/code&gt;,指令为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sed -i '$a\INSTALLED_APPS += ("django_extensions",)' /edx/app/edxapp/edx-platform/lms/envs/devstack.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sed -i '$a\NOTEBOOK_ARGUMENTS = ["--no-browser","--ip","0.0.0.0"]' /edx/app/edxapp/edx-platform/lms/envs/devstack.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;另外&lt;code&gt;--notebook-dir /home/edx/notebook&lt;/code&gt;最好不要用，否则会因为path的问题带来困惑&lt;/p&gt;
&lt;p&gt;哈哈最近用sed用得很high，许多场景下都可以替代vim&lt;/p&gt;
&lt;h1&gt;run notebook&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;sudo /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms shell_plus --notebook --settings devstack&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="edxbook5.jpg" src="img/edx/edxbook/edxbook5.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;哦对了，由于&lt;/p&gt;
&lt;h1&gt;映射到外网&lt;/h1&gt;
&lt;p&gt;使用ngrok把8888端口映射到外网&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./ngrok -config ./ngrok.cfg -subdomain edxbook 8888&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后访问返回的网址即可&lt;/p&gt;
&lt;h1&gt;效果图&lt;/h1&gt;
&lt;p&gt;&lt;img alt="edxbook0.jpg" src="img/edx/edxbook/edxbook0.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="edxbook1.jpg" src="img/edx/edxbook/edxbook1.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="edxbook2.jpg" src="img/edx/edxbook/edxbook2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;开了它之后，我们几乎就不需要使用ssh了，所有操作都能在网页执行！！&lt;/p&gt;
&lt;p&gt;&lt;img alt="edxbook4.jpg" src="img/edx/edxbook/edxbook2.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="edxbook3.jpg" src="img/edx/edxbook/edxbook2.jpg" /&gt;&lt;/p&gt;
&lt;h1&gt;登录认证&lt;/h1&gt;
&lt;p&gt;处于安全考虑可以为网页设置密码，注意不用的使用应该终止notebook&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u edxapp bash
&lt;span class="nb"&gt;source&lt;/span&gt; /edx/app/edxapp/
sudo chmod  -R &lt;span class="m"&gt;777&lt;/span&gt; /home/ubuntu/.jupyter/
jupyter notebook --generate-config
ipython
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在ipython里输入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;notebook.auth&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;
&lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;#输入密码&lt;/span&gt;
&lt;span class="c1"&gt;#得到输出 ：sha1:f086762ff47a:3d896aedd90dfb4d49cc4f40bb0eed2072exxxx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将其加到vim ~/.jupyter/jupyter_notebook_config.py&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c.NotebookApp.password = u'sha1:67c9e60bb8b6:3d896aedd90dfb4d49cc4f40bb0eed2072exxxx'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后重新跑
&lt;code&gt;sudo /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms shell_plus --notebook --settings devstack&lt;/code&gt;，就只有输对密码才能进入啦&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;查看类图&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms graph_models courseware --s
ettings devstack  &amp;gt; courseware.dot 

&lt;span class="c1"&gt;#转化为png格式的图片&lt;/span&gt;
dot -Tpng courseware.dot &amp;gt; courseware.png

&lt;span class="c1"&gt;#查看整个edx的类结构&lt;/span&gt;
sudo /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms graph_models --settings devstack -a -g -o all.png
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;edx的整个类图如下，继承关系极其庞杂，图片很大就不贴过来了，有兴趣的小伙伴可以给我发邮件，我发给你&lt;/p&gt;
&lt;p&gt;截取局部&lt;/p&gt;
&lt;p&gt;&lt;img alt="edxbook6.jpg" src="img/edx/edxbook/edxbook6.jpg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;以下是局部细节&lt;/p&gt;
&lt;p&gt;&lt;img alt="edxbook7.jpg" src="img/edx/edxbook/edxbook7.jpg" /&gt;&lt;/p&gt;
&lt;h1&gt;debugsqlshell&lt;/h1&gt;
&lt;p&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms debugsqlshell --settings devstack&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样我们就能看到orm真正执行的SQL语句，对调试帮助很大，当然你也可以借助&lt;a href="https://github.com/django-debug-toolbar/django-debug-toolbar"&gt;django-debug-toolbar&lt;/a&gt;来做到这点&lt;/p&gt;
&lt;p&gt;类似这样：&lt;/p&gt;
&lt;p&gt;&lt;img alt="edxbook8.jpg" src="img/edx/edxbook/edxbook8.jpg" /&gt;&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;p&gt;最近准备请小伙伴w帮忙折腾edx前端，w对前端十分熟悉，哈哈此处做膜拜状，对linux不算太熟（ps：linux这么丐帮的东西留给我等技术宅来就好啦）&lt;/p&gt;
&lt;p&gt;所以我想把服务器相关的部分对w屏蔽，使其专心在前端，准备通过fabric写好控制脚本，开启notebook，编译相关的工作保存成一个ipynb文件，只要回车就能执行！&lt;/p&gt;
&lt;p&gt;所有的工作就可以在web端完成啦。&lt;/p&gt;
&lt;p&gt;大工基本告成，好想找一群人来演示，以满足装x的需求 233&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;补遗&lt;/h1&gt;
&lt;h3&gt;20160222&lt;/h3&gt;
&lt;p&gt;按照以上方式配置好后，即便在其他环境里安装jupyter(pip install )，django Shell-Plus环境也生效&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-28:dogwood-use-ipython-notebook.html</guid><category>edx</category></item><item><title>edx前端定制开发相关</title><link>/edx-front-dev.html</link><description>&lt;p&gt;上周末去了趟内蒙古师范大学，他们在Open edX前端所做的工作令人震惊，不仅效果惊人，让你看不出这是一个edx系统，而且采用的方法也十分聪明，完全可以去今年在斯坦福举办的Open edX第三届会议上与大家分享。&lt;/p&gt;
&lt;p&gt;这段时间我在考虑Open edX的前端相关的工作流和最佳实践，整理出来与大家分享和讨论&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;历史回顾&lt;/h3&gt;
&lt;p&gt;关于Open edX前端开发，此前主要有两类做法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接侵入修改scss和template&lt;/li&gt;
&lt;li&gt;采用theme机制，例子有：&lt;ul&gt;
&lt;li&gt;斯坦福大学贡献的&lt;a href="https://github.com/Stanford-Online/edx-theme"&gt;Stanford-Online/edx-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IONISx公司贡献的&lt;a href="https://github.com/IONISx/edx-theme"&gt;IONISx/edx-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来自法国的&lt;a href="https://github.com/openfun/edx-theme"&gt;openfun/edx-theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;估计以上的这些，对新手而言，看的云里雾里了。看不懂历史是好事呢，说明没有历史负担。&lt;/p&gt;
&lt;p&gt;在edx发布了dogwood版本之后，我们就不要这么折腾啦。&lt;/p&gt;
&lt;p&gt;新版本前端定制相关的工作，有内置的主题机制。只要保证主题包的目录结构和静态文件目录结构相同，主题包下的同名文件就会覆盖原始文件。这样修改前端界面就是全面且非侵入式的了。&lt;/p&gt;
&lt;p&gt;如果你有修改theme的经验，那么对当前的theme机制应该手到擒来，修改过程几乎一样，当然命名规则有些调整，具体参考&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/themes/README.rst"&gt;Comprehensive Theming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;并且theme同时支持lms和cms！&lt;/p&gt;
&lt;p&gt;此外更激动人心的一个项目是&lt;a href="https://github.com/edx/ux-pattern-library"&gt;ux-pattern-library&lt;/a&gt;，使用方法看这里:&lt;a href="https://github.com/edx/ux-pattern-library#use-and-deployment"&gt;Use and Deployment&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;我们带着任务来学习edx的前端机制，我关注的问题主要包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;edx是如何管理/编译静态文件的&lt;/li&gt;
&lt;li&gt;如何使edx前端能自适应&lt;/li&gt;
&lt;li&gt;是否可以直接采用css覆盖的方式来定制页面，这样一来是否就不需要编译&lt;/li&gt;
&lt;li&gt;如果采用theme机制修改scss文件，代码如何迅速生效而不是每次paver update_assets&lt;/li&gt;
&lt;li&gt;如何方便地调试，最好是定位到影响页面的scss元素&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;探索一番&lt;/h3&gt;
&lt;p&gt;我们先进入到项目目录里随便瞧瞧，探索一番&lt;/p&gt;
&lt;p&gt;这篇文章写作动机主要针对edx的排版，所以暂时不打算讨论js相关的内容&lt;/p&gt;
&lt;p&gt;edx使用&lt;a href="https://github.com/sass/sass"&gt;sass&lt;/a&gt;来写CSS，关于sass是什么,可以看这里&lt;a href="http://www.ruanyifeng.com/blog/2012/06/sass.html"&gt;SASS用法指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这些文件位于目录：&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/lms/static/sass"&gt;edx-platform/lms/static/sass/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中很多文件有ltr后缀，意思是left-to-right，为left-to-right排版的语言准备的，汉语和英语都是ltr风格的语言，阿拉伯语是rtl风格的语言&lt;/p&gt;
&lt;p&gt;我们在scss文件里经常看到&lt;code&gt;@import 'bourbon/bourbon';&lt;/code&gt;,bourbon位于&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/common/static/sass"&gt;edx-platform/common/static/sass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/sass/lms-main-rtl.scss"&gt;lms-main-rtl.scss&lt;/a&gt;可以看到THEME-OVERRIDE是插入式的而不是覆盖式的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// This comment is used by preprocess_assets.py to include resources from a&lt;/span&gt;
&lt;span class="c1"&gt;// theme, for old-style deprecated theming.&lt;/span&gt;
&lt;span class="c1"&gt;//&amp;lt;THEME-OVERRIDE&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于主题的实现暂时不作探索。&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/pavelib/assets.py#L305"&gt;update_assets&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我对edx中静态文件最初的认识，来自&lt;code&gt;paver update_assets lms --settings=aws&lt;/code&gt;命令，这条命令会做许多工作，诸如编译sass/coffee，替换主题，收集静态文件等。&lt;/p&gt;
&lt;p&gt;我们来看看这块的机制&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/pavelib/assets.py#L305"&gt;update_assets&lt;/a&gt;命令来自&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/pavelib/assets.py"&gt;edx-platform/pavelib/assets.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过探索，我们可以回答&lt;code&gt;问题5&lt;/code&gt;了，通过传递debug参数给update_assets命令，compile_sass将&lt;code&gt;--sourcemap&lt;/code&gt;传给&lt;code&gt;sass&lt;/code&gt;命令，这样在编译scss的时候同时生成css.map文件，这个文件就是为调试scss而生的&lt;/p&gt;
&lt;p&gt;我们知道在浏览器调试面板中可以直接调试css文件，可css文件是由scss生成的，就是说影响最终界面的是css文件，而我们编写的确实scss，那么如何弥合这两者，map文件就是解决方案，在浏览器里我们可以直接看到影响布局的scss代码！想想就让人激动呀&lt;/p&gt;
&lt;p&gt;如何使用map文件，参考&lt;a href="http://thesassway.com/intermediate/using-source-maps-with-sass"&gt;Using source maps with Sass 3.3&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;use map to debug scss&lt;/h3&gt;
&lt;p&gt;首先把调试环境跑起来：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/supervisorctl stop edxapp:
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings devstack 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后生成css.map文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -H -u edxapp bash
&lt;span class="nb"&gt;source&lt;/span&gt; /edx/app/edxapp/edxapp_env
&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform
paver update_assets lms --debug --settings&lt;span class="o"&gt;=&lt;/span&gt;aws
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cypress和birch都有css.map文件，而dogwood没有了，应该是bug&lt;/p&gt;
&lt;p&gt;---2016.02.01
今天发现在dogwood中，&lt;code&gt;paver update_assets lms --settings=aws&lt;/code&gt;编译是会生成css.map文件的，之前可能由于&lt;code&gt;--settings=devstack&lt;/code&gt;的缘故&lt;/p&gt;
&lt;p&gt;之后打开浏览器，就可以开始调试啦&lt;/p&gt;
&lt;p&gt;我们可以一边调试一边开发，只需要实时观测scss文件的变化，每当变化自动编译为css&lt;/p&gt;
&lt;p&gt;新开一个tmux窗口执行&lt;code&gt;paver update_assets lms --debug --settings=aws --watch&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;theme机制&lt;/h3&gt;
&lt;p&gt;我们可以认为theme目录下的主题包下的文件会覆盖同名文件，这样一来我们需要定制前端页面的时候，就容易多啦。在这种机制下，之后主题包完全是插件式的了：）&lt;/p&gt;
&lt;p&gt;先来看下主题包的目录结构&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;my-theme
└── lms
    ├── static
    │   ├── images
    │   │   └── logo.png
    │   └── sass
    │       ├── _overrides.scss
    │       ├── lms-main-rtl.scss
    │       └── lms-main.scss
    └── templates
        ├── footer.html
        └── header.html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;具体案例可以参考&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/themes/edx.org"&gt;edx.org&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;工作流&lt;/h3&gt;
&lt;p&gt;至此，前端定制的工作流已经很明确了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动开发环境&lt;/li&gt;
&lt;li&gt;编译生成css.map文件&lt;/li&gt;
&lt;li&gt;启动&lt;code&gt;paver update_assets --watch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在浏览器调试面板里选择感兴趣的元素，观察影响其排版的scss文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来是在主题包中定制的该文件的过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新建一个主题包，建议目录在edx-platform之外，纳入版本管理系统&lt;/li&gt;
&lt;li&gt;按照目标scss文件所在目录，在主题包中构建相应目录，在其中创建同名scss文件，写定制的排版规则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;paver watch会为你自动编译变更，所以直接到浏览器里去调试就行啦&lt;/p&gt;
&lt;p&gt;工作流闭环完成&lt;/p&gt;
&lt;p&gt;至此，以上我感兴趣的5个问题，除了自适应，几乎全部解决，自适应的问题是排版本身的问题，和edx的前端机制倒没啥关系了&lt;/p&gt;
&lt;h3&gt;效果展示&lt;/h3&gt;
&lt;p&gt;&lt;img alt="sass0" src="img/edx/sass/sass0.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="sass1" src="img/edx/sass/sass1.png" /&gt;&lt;/p&gt;
&lt;h3&gt;案例&lt;/h3&gt;
&lt;p&gt;具体定制案例可以参考&lt;a href="https://github.com/Stanford-Online/edx-theme/blob/master/static/sass/_default.scss"&gt;Stanford-Online/edx-theme&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当然这个案例有些过时，原因参考：&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/themes/README.rst"&gt;Comprehensive Theming&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;附录&lt;/h1&gt;
&lt;p&gt;探索过程中，顺便发现了跑dev的方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -ibak &lt;span class="s1"&gt;&amp;#39;s/ENV_ROOT.*/&amp;quot;edx.db&amp;quot;,/&amp;#39;&lt;/span&gt;  /edx/app/edxapp/edx-platform/envs/dev.py
sudo /edx/bin/supervisorctl stop edxapp:


sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms syncdb --settings dev 
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms makemigrations --settings dev
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms migrate --settings dev 
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings dev 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;SASS与css模块化&lt;/h3&gt;
&lt;p&gt;SASS有助于css模块化，我们很多时候并不是从头开始一个项目的。不少人会使用一个 Sass 模板项目，包含了一些变量、mixin 和函数，Open edX就是这样一个项目。&lt;/p&gt;
&lt;p&gt;通过模块化，我们大致能猜到登录相关的布局应该通过修改&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/sass/views/_login-register.scss"&gt;sass/views/_login-register.scss&lt;/a&gt;，而通过修改&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/sass/views/_login-register.scss#L6"&gt;$sm-btn-google: #dd4b39;&lt;/a&gt;，我们可以调整google登录按钮的颜色，这样可以让开发更轻松一些。&lt;/p&gt;
&lt;p&gt;这样一来css文件被组织得井井有条，像大多的工程项目那样&lt;/p&gt;
&lt;h3&gt;关于css.map&lt;/h3&gt;
&lt;p&gt;这是一个辅助调试的文件，把scss编译完的文件（css）关联到原始的scss&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sass a.scss:a.css --sourcemap&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/Using-Grunt-Libsass-for-assets-managent-(WIP)"&gt;Using Grunt Libsass for assets managent (WIP)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-28:edx-front-dev.html</guid><category>edx</category></item><item><title>edx前端开发相关</title><link>/edx-front-dev.html</link><description>&lt;p&gt;上周末去了趟内蒙古师范大学，他们在Open edX前端所做的工作令人震惊，不仅效果惊人，让你看不出这是一个edx系统，而且采用的方法也十分聪明，完全可以去今年在斯坦福举办的Open edX第三届会议上与大家分享。&lt;/p&gt;
&lt;p&gt;这段时间我在考虑Open edX的前端相关的工作流和最佳实践，整理出来与大家分享和讨论&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;历史回顾&lt;/h3&gt;
&lt;p&gt;关于Open edX前端开发，此前主要有两类做法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接侵入修改scss和template&lt;/li&gt;
&lt;li&gt;采用theme机制，例子有：&lt;ul&gt;
&lt;li&gt;斯坦福大学贡献的&lt;a href="https://github.com/Stanford-Online/edx-theme"&gt;Stanford-Online/edx-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IONISx公司贡献的&lt;a href="https://github.com/IONISx/edx-theme"&gt;IONISx/edx-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来自法国的&lt;a href="https://github.com/openfun/edx-theme"&gt;openfun/edx-theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;估计以上的这些，对新手而言，看的云里雾里了。看不懂历史是好事呢，说明没有历史负担。&lt;/p&gt;
&lt;p&gt;在edx发布了dogwood版本之后，我们就不要这么折腾啦。&lt;/p&gt;
&lt;p&gt;新版本前端定制相关的工作，有内置的主题机制。只要保证主题包的目录结构和静态文件目录结构相同，主题包下的同名文件就会覆盖原始文件。这样修改前端界面就是全面且非侵入式的了。&lt;/p&gt;
&lt;p&gt;如果你有修改theme的经验，那么对当前的theme机制应该手到擒来，修改过程几乎一样，当然命名规则有些调整，具体参考&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/themes/README.rst"&gt;Comprehensive Theming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;并且theme同时支持lms和cms！&lt;/p&gt;
&lt;p&gt;此外更激动人心的一个项目是&lt;a href="https://github.com/edx/ux-pattern-library"&gt;ux-pattern-library&lt;/a&gt;，使用方法看这里:&lt;a href="https://github.com/edx/ux-pattern-library#use-and-deployment"&gt;Use and Deployment&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;我们带着任务来学习edx的前端机制，我关注的问题主要包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;edx是如何管理/编译静态文件的&lt;/li&gt;
&lt;li&gt;如何使edx前端能自适应&lt;/li&gt;
&lt;li&gt;是否可以直接采用css覆盖的方式来定制页面，这样一来是否就不需要编译&lt;/li&gt;
&lt;li&gt;如果采用theme机制修改scss文件，代码如何迅速生效而不是每次paver update_assets&lt;/li&gt;
&lt;li&gt;如何方便地调试，最好是定位到影响页面的scss元素&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;探索一番&lt;/h3&gt;
&lt;p&gt;我们先进入到项目目录里随表瞧瞧，探索一番&lt;/p&gt;
&lt;p&gt;这篇文章写作动机主要针对edx的排版，所以暂时不打算讨论js相关的内容&lt;/p&gt;
&lt;p&gt;edx使用&lt;a href="https://github.com/sass/sass"&gt;sass&lt;/a&gt;来写CSS，关于sass是什么,可以看这里&lt;a href="http://www.ruanyifeng.com/blog/2012/06/sass.html"&gt;SASS用法指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这些文件位于目录：&lt;code&gt;[edx-platform/lms/static/sass/](https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/lms/static/sass)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中很多文件有ltr后缀，意思是left-to-right，为left-to-right排版的语言准备的，汉语和英语都是ltr风格的语言，阿拉伯语是rtl风格的语言&lt;/p&gt;
&lt;p&gt;我们在scss文件里经常看到&lt;code&gt;@import 'bourbon/bourbon';&lt;/code&gt;,bourbon位于&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/common/static/sass"&gt;edx-platform/common/static/sass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/static/sass/lms-main-rtl.scss"&gt;lms-main-rtl.scss&lt;/a&gt;可以看到THEME-OVERRIDE是插入式的而不是覆盖式的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// This comment is used by preprocess_assets.py to include resources from a&lt;/span&gt;
&lt;span class="c1"&gt;// theme, for old-style deprecated theming.&lt;/span&gt;
&lt;span class="c1"&gt;//&amp;lt;THEME-OVERRIDE&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于主题的实现暂时不作探索。&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/pavelib/assets.py#L305"&gt;update_assets&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我对edx中静态文件最初的认识，来自&lt;code&gt;paver update_assets lms --settings=aws&lt;/code&gt;命令，这条命令会做许多工作，诸如编译sass/coffee，替换主题，收集静态文件等。&lt;/p&gt;
&lt;p&gt;我们来看看这块的机制&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/pavelib/assets.py#L305"&gt;update_assets&lt;/a&gt;命令来自&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/pavelib/assets.py"&gt;edx-platform/pavelib/assets.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过探索，我们可以回答&lt;code&gt;问题5&lt;/code&gt;了，通过传递debug参数给update_assets命令，compile_sass将&lt;code&gt;--sourcemap&lt;/code&gt;传给&lt;code&gt;sass&lt;/code&gt;命令，这样在编译scss的时候同时生成css.map文件，这个文件就是为调试scss而生的&lt;/p&gt;
&lt;p&gt;我们知道在浏览器调试面板中可以直接调试css文件，可css文件是由scss生成的，就是说影响最终界面的是css文件，而我们编写的确实scss，那么如何弥合这两者，map文件就是解决方案，在浏览器里我们可以直接看到影响布局的scss代码！想想就让人激动呀&lt;/p&gt;
&lt;p&gt;如何使用map文件，参考&lt;a href="http://thesassway.com/intermediate/using-source-maps-with-sass"&gt;Using source maps with Sass 3.3&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;use map to debug scss&lt;/h3&gt;
&lt;p&gt;首先把调试环境跑起来：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/supervisorctl stop edxapp:
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings devstack 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后生成css.map文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -H -u edxapp bash
&lt;span class="nb"&gt;source&lt;/span&gt; /edx/app/edxapp/edxapp_env
&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform
paver update_assets lms --debug --settings&lt;span class="o"&gt;=&lt;/span&gt;aws
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cypress和birch都有css.map文件，而dogwood没有了，应该是bug&lt;/p&gt;
&lt;p&gt;之后打开浏览器，就可以开始调试啦&lt;/p&gt;
&lt;p&gt;我们可以一边调试一边开发，只需要实时观测scss文件的变化，每当变化自动编译为css&lt;/p&gt;
&lt;p&gt;新开一个tmux窗口执行&lt;code&gt;paver update_assets lms --debug --settings=aws --watch&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;theme机制&lt;/h3&gt;
&lt;p&gt;我们可以认为theme目录下的主题包下的文件会覆盖同名文件，这样一来我们需要定制前端页面的时候，就容易多啦。在这种机制下，之后主题包完全是插件式的了：）&lt;/p&gt;
&lt;p&gt;先来看下主题包的目录结构&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;my-theme
└── lms
    ├── static
    │   ├── images
    │   │   └── logo.png
    │   └── sass
    │       ├── _overrides.scss
    │       ├── lms-main-rtl.scss
    │       └── lms-main.scss
    └── templates
        ├── footer.html
        └── header.html
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;具体案例可以参考&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/themes/edx.org"&gt;edx.org&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;工作流&lt;/h3&gt;
&lt;p&gt;至此，前端定制的工作流已经很明确了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动开发环境&lt;/li&gt;
&lt;li&gt;编译生成css.map文件&lt;/li&gt;
&lt;li&gt;启动&lt;code&gt;paver update_assets --watch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在浏览器调试面板里选择感兴趣的元素，观察影响其排版的scss文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来是在主题包中定制的该文件的过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新建一个主题包，建议目录在edx-platform之外，纳入版本管理系统&lt;/li&gt;
&lt;li&gt;按照目标scss文件所在目录，在主题包中构建相应目录，在其中创建同名scss文件，写定制的排版规则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;paver watch会为你自动编译变更，所以直接到浏览器里去调试就行啦&lt;/p&gt;
&lt;p&gt;工作流闭环完成&lt;/p&gt;
&lt;p&gt;至此，以上我感兴趣的5个问题，除了自适应，几乎全部解决，自适应的问题是排版本身的问题，和edx的前端机制倒没啥关系了&lt;/p&gt;
&lt;h3&gt;效果展示&lt;/h3&gt;
&lt;p&gt;&lt;img alt="sass0" src="img/edx/sass/sass0.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img alt="sass1" src="img/edx/sass/sass0.png" /&gt;&lt;/p&gt;
&lt;h3&gt;案例&lt;/h3&gt;
&lt;p&gt;具体定制案例可以参考&lt;a href="https://github.com/Stanford-Online/edx-theme/blob/master/static/sass/_default.scss"&gt;Stanford-Online/edx-theme&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当然这个案例有些过时，原因参考：&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/themes/README.rst"&gt;Comprehensive Theming&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;附录&lt;/h1&gt;
&lt;p&gt;探索过程中，顺便发现了跑dev的方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -ibak &lt;span class="s1"&gt;&amp;#39;s/ENV_ROOT.*/&amp;quot;edx.db&amp;quot;,/&amp;#39;&lt;/span&gt;  /edx/app/edxapp/edx-platform/envs/dev.py
sudo /edx/bin/supervisorctl stop edxapp:


sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms syncdb --settings dev 
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms makemigrations --settings dev
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms migrate --settings dev 
sudo  /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings dev 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;关于css.map&lt;/h3&gt;
&lt;p&gt;这是一个辅助调试的文件，把scss编译完的文件（css）关联到原始的scss&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sass a.scss:a.css --sourcemap&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/Using-Grunt-Libsass-for-assets-managent-(WIP)"&gt;Using Grunt Libsass for assets managent (WIP)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-28:edx-front-dev.html</guid><category>edx</category></item><item><title>edx search code analysis</title><link>/edx-search-code-analysis.html</link><description>&lt;p&gt;接着&lt;a href="http://blog.just4fun.site/edx-search-analysis.html"&gt;上篇文章&lt;/a&gt;我们继续往下走，在这里我们来跟踪源码，看看edx是如何利用elasticsearch来搜索课程/内容的&lt;/p&gt;
&lt;p&gt;首先在上篇文章里，我们知道了：在lms中搜索课程时，其实是发出ajax请求，而后&lt;code&gt;search&lt;/code&gt;服务响应这个请求，前台将其呈现给用户。这种设计在edx中随处可见，通过RESTful风格的接口，来将功能模块化。如此一来职责清晰，耦合度里，模块化高&lt;/p&gt;
&lt;h1&gt;定义目标&lt;/h1&gt;
&lt;p&gt;我们此次探索源码的目标是了解搜索相关的逻辑代码，看看适合在哪里开始定制。以及找到edx利用elasticsearch的机制，在那里我们可以将搜索问题变成elasticsearch的问题，借助elasticsearch，我们能获得惊人的搜索能力，elasticsearch有许多强大的插件，诸如中文分词插件，这对中文搜索很重要，对搜索的大动干戈建议从elasticsearch入手。&lt;/p&gt;
&lt;h1&gt;Go&lt;/h1&gt;
&lt;p&gt;我喜欢通过github读代码，有种破案推理的乐趣。当然啦更现代化的方法是使用Source Insight之类的工具或是使用打断点堆栈跟踪之类的方法&lt;/p&gt;
&lt;p&gt;我喜欢github是因为这种泛泛的搜索，常常有意外的收获，牺牲针精确换取更宽的视野。&lt;/p&gt;
&lt;p&gt;时有物外之趣&lt;/p&gt;
&lt;p&gt;下边开始我们的旅程。&lt;/p&gt;
&lt;p&gt;从上篇文章我们知道数据的来源是这几个url：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/search/&lt;/li&gt;
&lt;li&gt;/search/\&amp;lt;COURSE_ID&gt;&lt;/li&gt;
&lt;li&gt;/search/course_discovery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们以此为切入点，首先定位到&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url(r'^search/', include('search.urls')),&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个url会把我们引入&lt;a href="https://github.com/edx/edx-search"&gt;edx-search&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过url.py我们顺利找到&lt;a href="https://github.com/edx/edx-search/blob/master/search/urls.py#L13+L15"&gt;入口&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;    url(r&amp;#39;^$&amp;#39;, views.do_search, name=&amp;#39;do_search&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt;    url(r&amp;#39;^{}$&amp;#39;.format(COURSE_ID_PATTERN), views.do_search, name=&amp;#39;do_search&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt;    url(r&amp;#39;^course_discovery/$&amp;#39;, views.course_discovery, name=&amp;#39;course_discovery&amp;#39;),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;顺藤摸瓜找到相关的view&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-search/blob/master/search/views.py#L49"&gt;do_search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-search/blob/master/search/views.py#L147"&gt;course_discovery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;跟踪内容搜素（&lt;code&gt;do_search&lt;/code&gt;）&lt;/h3&gt;
&lt;p&gt;我对搜索课程内容更感兴趣，所以先跟踪&lt;code&gt;do_search&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此外我们有个意外的发现，搜索会触发track.emit,这意味着搜索这个事件会被记录，之后在insights中可能会有显示&lt;/p&gt;
&lt;p&gt;不难发现&lt;a href="https://github.com/edx/edx-search/blob/master/search/views.py#L100"&gt;results&lt;/a&gt;是搜索所得的核心的数据，顺藤摸瓜，追踪到.api模块里的&lt;a href="https://github.com/edx/edx-search/blob/master/search/api.py#L30"&gt;perform_search&lt;/a&gt;函数&lt;/p&gt;
&lt;p&gt;=&amp;gt; &lt;a href="https://github.com/edx/edx-search/blob/master/search/api.py#L44"&gt;searcher&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; &lt;a href="https://github.com/edx/edx-search/blob/master/search/search_engine_base.py#L8"&gt;SearchEngine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们看到这是一个抽象类，许多方法有待实现&lt;/p&gt;
&lt;p&gt;=&amp;gt; &lt;a href="https://github.com/edx/edx-search/blob/master/search/search_engine_base.py#L45"&gt;get_search_engine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; &lt;a href="https://github.com/edx/edx-search/blob/master/search/search_engine_base.py#L49"&gt;search_engine_class&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SEARCH_ENGINE在&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/configuration/edx_search.html#supported-flags"&gt;Enabling Open edX Search&lt;/a&gt;里有提到，生产环境用的是&lt;code&gt;search.elastic.ElasticSearchEngine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; &lt;a href="https://github.com/edx/edx-search/blob/master/search/elastic.py#L185"&gt;ElasticSearchEngine&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们如愿以偿地找到了&lt;a href="https://github.com/edx/edx-search/blob/master/search/elastic.py#L428"&gt;search&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;顺便我们还发现了&lt;a href="https://github.com/edx/edx-search/blob/master/search/elastic.py#L354"&gt;index&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;又经过了层层包装,都在&lt;a href="https://github.com/edx/edx-search/blob/master/search/elastic.py#L185"&gt;ElasticSearchEngine&lt;/a&gt;类里了（主要在&lt;a href="https://github.com/edx/edx-search/blob/master/search/elastic.py#L428"&gt;search&lt;/a&gt;里），把搜索参数最终传递给elasticsearch:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            &lt;span class="n"&gt;es_response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_es&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们顺便跟踪一下&lt;code&gt;_es&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;=&amp;gt; self._es = getattr(settings, "ELASTIC_SEARCH_IMPL", Elasticsearch)(es_config)&lt;/p&gt;
&lt;p&gt;=&amp;gt; from elasticsearch import Elasticsearch&lt;/p&gt;
&lt;p&gt;最后我们回到&lt;a href="https://github.com/elastic/elasticsearch-py"&gt;elasticsearch-py&lt;/a&gt;的&lt;a href="http://elasticsearch-py.readthedocs.org/en/master/api.html#elasticsearch.Elasticsearch.search"&gt;search&lt;/a&gt;方法，这样我们就把整个流程走完了&lt;/p&gt;
&lt;p&gt;至于&lt;a href="https://github.com/elastic/elasticsearch-py"&gt;elasticsearch-py&lt;/a&gt;如何封装elasticsearch，我觉得暂时可以不用关心&lt;/p&gt;
&lt;p&gt;中间的这个流程，任何一个环节我们都可能进行定制修改。&lt;/p&gt;
&lt;p&gt;enjoy it&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-21:edx-search-code-analysis.html</guid><category>edx</category></item><item><title>edx tools</title><link>/edx-tools.html</link><description>&lt;p&gt;在命令行下开发edx的小伙伴，可能有个困扰，每次需要&lt;code&gt;paver update_asset&lt;/code&gt;的时候都需要先&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -H -u edxapp bash
&lt;span class="nb"&gt;source&lt;/span&gt; /edx/app/edxapp/edxapp_env
&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;记性渣渣的我可记不住&lt;code&gt;-H -u&lt;/code&gt;这些乱七八糟的参数，所以写了一些简单的脚本来做这些重复性的工作。&lt;/p&gt;
&lt;p&gt;后来连服务器也懒得ssh登录了。我只是想看一下edx环境的依赖包版本，还要费半天劲先登录服务器，好烦&lt;/p&gt;
&lt;p&gt;所以用fabric写了可以远程操作服务器的工具脚本，用以简化一些无聊的工作。这样依赖我们可以在本地管理和调试远程edx服务器&lt;/p&gt;
&lt;p&gt;当前的版本还很简陋,不过常用功能已经有了，框架也已经出来了，欢迎大家来补充和拓展，仓库地址是:&lt;a href="https://github.com/wwj718/edx_tools"&gt;wwj718/edx_tools&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;edx tools&lt;/h1&gt;
&lt;p&gt;在本地管理和调试远程edx服务器&lt;/p&gt;
&lt;h1&gt;Install&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install fabric
git clone https://github.com/wwj718/edx_tools.git
&lt;span class="nb"&gt;cd&lt;/span&gt; edx_tools
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;setting&lt;/h1&gt;
&lt;p&gt;在settings.py里填写服务器的账户和密码&lt;/p&gt;
&lt;h1&gt;Usage&lt;/h1&gt;
&lt;h3&gt;查看所有可用指令&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fab -f edx.py -l&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;查看服务器状态&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fab -f edx.py status&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;重启edxapp&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fab -f edx.py restart_edxapp&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;查看日志&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查看最新10条lms日志：&lt;code&gt;fab -f edx.py tailLog 10,lms&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看最新50条cms日志：&lt;code&gt;fab -f edx.py tailLog 50,cms&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;进入lms shell&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fab -f edx.py shell&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;启用调试模式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fab -f edx.py devstack&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;编译静态文件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;编译lms：&lt;code&gt;fab -f edx.py update_assets:lms&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;编译cms：&lt;code&gt;fab -f edx.py update_assets:cms&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;edxapp.pip&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查看环境中有安装了哪些依赖库：&lt;code&gt;fab -f edx.py edxapp_pip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-21:edx-tools.html</guid><category>edx</category></item><item><title>edx search analysis</title><link>/edx-search-analysis.html</link><description>&lt;p&gt;关于如何在Open edX中启用搜索特性可以参考我此前的评测文章:&lt;a href="http://blog.just4fun.site/try-open-edx-master-20151214.html"&gt;Open edX最新版评测与新特性探索(20151214)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方也给出了这个特性的介绍：&lt;a href="http://edx.readthedocs.org/projects/open-edx-learner-guide/en/latest/SFD_course_search.html"&gt;Searching the Course&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以及技术文档：&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/configuration/edx_search.html"&gt;Enabling Open edX Search&lt;/a&gt;,如你所料，它一如既往地变更频繁和不够完备。怎么说呢，如果你和我一样乐观，你大概会觉得这是好事吧，它意味着这个项目在被持续、迅猛地推进&lt;/p&gt;
&lt;h1&gt;Ready&lt;/h1&gt;
&lt;p&gt;关于edx search（这里重点谈论的是课程/内容搜索相关的部分），我们有个很有趣的想法，为了实现它，我们需要深入了解这个机制。而后在网上发现一些人也需要深度定制它。所以我将自己的分析过程分享出来，抛装引玉。也许能引来有趣的讨论，也许能帮到后来者，也许能给自己以启发&lt;/p&gt;
&lt;h1&gt;Go&lt;/h1&gt;
&lt;h3&gt;资源汇集&lt;/h3&gt;
&lt;p&gt;首先我们把能找到的资源进行汇集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-search"&gt;edx-search&lt;/a&gt;:edx-search源码&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/tree/named-release/dogwood.rc/lms/lib/courseware_search"&gt;courseware_search&lt;/a&gt;:lms中相关源码&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/configuration/edx_search.html"&gt;Enabling Open edX Search&lt;/a&gt;：文档&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/open-edx-learner-guide/en/latest/SFD_course_search.html"&gt;Searching the Course&lt;/a&gt;:用户手册&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;阅读技术文档&lt;/h3&gt;
&lt;p&gt;通过阅读文档，我们大致了解了设计相关的信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-search"&gt;edx-search&lt;/a&gt;本质上是一个 Django application，用于与edx-platform通信&lt;/li&gt;
&lt;li&gt;搜索的过程是通过先创建索引，然后在索引里检索匹配信息，如果你熟悉ElasticSearch，你会觉得这个过程理所当然&lt;/li&gt;
&lt;li&gt;Python包依赖：Django、pyMongo、&lt;a href="https://github.com/newvem/pytz"&gt;pytz&lt;/a&gt;、elasticsearch&lt;/li&gt;
&lt;li&gt;索引数据由index_dictionary()方法决定，当前被索引的数据有：&lt;ul&gt;
&lt;li&gt;Sequence&lt;/li&gt;
&lt;li&gt;Vertical&lt;/li&gt;
&lt;li&gt;Video &lt;/li&gt;
&lt;li&gt;HTML Block&lt;/li&gt;
&lt;li&gt;也包括课程元信息，包括课程名、课程描述、以及课程开始、结束时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;LMS和CMS里有好些可开启的开关和可定制的信息，我摘录几个觉得重要的：&lt;ul&gt;
&lt;li&gt;指定引擎：SEARCH_ENGINE，当前支持ElasticSearchEngine和MockSearchEngine&lt;/li&gt;
&lt;li&gt;增加可搜索信息：ELASTIC_FIELD_MAPPINGS，该对象是一个自定，可自定拓展&lt;/li&gt;
&lt;li&gt;如果你想深度定制搜索：SEARCH_INITIALIZER、SEARCH_RESULT_PROCESSOR和SEARCH_FILTER_GENERATOR会是有用的接口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进一步分析edx相关的库我们可以了解到&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edx中写搜索相关的业务逻辑，使用&lt;a href="https://github.com/elastic/elasticsearch-py"&gt;elasticsearch-py&lt;/a&gt;来操作elasticsearch&lt;/li&gt;
&lt;li&gt;edx的搜索用到了ElasticSearch，通过查阅&lt;a href="https://github.com/edx/configuration/"&gt;edx/configuration&lt;/a&gt;,我们发现Birch、Cypress和Dogwood使用的版本都是0.90.11&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;定制思路&lt;/h3&gt;
&lt;p&gt;通过前头的初步分析（注意我们还没有进入源码！我们已经初步了解课程搜索相关的设计了，可见阅读文档的重要性），我们大致知道了可以通过实现接口来实现自己的搜索逻辑，其中有三个接口是关键的，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SEARCH_INITIALIZER，源码见&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/lib/courseware_search/lms_search_initializer.py#L15"&gt;LmsSearchInitializer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lms.lib.courseware_search.lms_search_initializer.LmsSearchInitializer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SEARCH_RESULT_PROCESSOR,源码见&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/lib/courseware_search/lms_result_processor.py#L15"&gt;LmsSearchResultProcessor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lms.lib.courseware_search.lms_result_processor.LmsSearchResultProcessor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SEARCH_FILTER_GENERATOR,源码见&lt;a href="https://github.com/edx/edx-platform/blob/named-release/dogwood.rc/lms/lib/courseware_search/lms_filter_generator.py#L17"&gt;LmsSearchFilterGenerator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lms.lib.courseware_search.lms_filter_generator.LmsSearchFilterGenerato」r&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;眼见为实&lt;/h3&gt;
&lt;p&gt;我们首先将devstack跑起来（实际上是在生产环境下）：
&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings devstack&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;课程搜索包括三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;course discovery&lt;/li&gt;
&lt;li&gt;all course search&lt;/li&gt;
&lt;li&gt;single course search&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先是course discovery，我们据此来搜索需要的课程
&lt;img alt="course_discovery0" src="/img/edx/search/course_discovery0.png" /&gt;&lt;/p&gt;
&lt;p&gt;通过调试面板来看看实际的请求时怎样的
&lt;img alt="course_discovery1" src="/img/edx/search/course_discovery1.png" /&gt;&lt;/p&gt;
&lt;p&gt;搜索实际是一个RESTful 风格的API，以ajax的方式整合到页面里，我们稍后会跟踪这个接口&lt;/p&gt;
&lt;p&gt;我们接着看看all course search部分
&lt;img alt="all_course_search0.png" src="/img/edx/search/all_course_search0.png" /&gt;&lt;/p&gt;
&lt;p&gt;同样打开调试面板
&lt;img alt="all_course_search1.png" src="/img/edx/search/all_course_search1.png" /&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到接口的url，以POST方式发送搜索请求&lt;/p&gt;
&lt;p&gt;随时来看看课程被的搜索（single course search）&lt;/p&gt;
&lt;p&gt;&lt;img alt="single_course_search0.png" src="/img/edx/search/single_course_search0.png" /&gt;&lt;/p&gt;
&lt;p&gt;观察调试面板可以发现，实际是以以POST方式请求http://ip:5000/search/course-v1:edX+DemoX+Demo_Course&lt;/p&gt;
&lt;p&gt;response为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;access_denied_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;max_score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6223112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;took&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;results&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6223112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;_score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6223112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@2bee8c4248e842a19ba1e73ed8d426c2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;course_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX Demonstration Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/courses/course-v1:edX+DemoX+Demo_Course/jump_to/block-v1:edX+DemoX+Demo_Course+type@html+block@2bee8c4248e842a19ba1e73ed8d426c2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;excerpt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;b&amp;gt;Lab&amp;lt;/b&amp;gt;s and Demos Professors that create courses on edX are able to&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;start_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2013-02-05T00:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;html_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Labs and Demos Professors that create courses on edX are able to implement highly interactive experiences that allow you as a student to experiment using easy to use online web applications. These labs are customized to each class and subject area. We have collected a couple of the more popular lab environments here for you to experience and play with. Please be patient with yourself as you take a look around at these lab environments. You probably will not be able to answer these questions without taking a course on the topic first! &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;display_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Labs and Demos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:edX+DemoX+Demo_Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Example Week 2: Get Interactive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Homework - Labs and Demos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Labs and Demos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;content_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;content_groups&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@2bee8c4248e842a19ba1e73ed8d426c2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.16797835&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;_score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.16797835&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@Lab_5B_Mosfet_Amplifier_Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;course_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX Demonstration Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/courses/course-v1:edX+DemoX+Demo_Course/jump_to/block-v1:edX+DemoX+Demo_Course+type@html+block@Lab_5B_Mosfet_Amplifier_Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;excerpt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;There are no responses that need to be checked.In the &amp;lt;b&amp;gt;lab&amp;lt;/b&amp;gt; below, you&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;start_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1970-01-01T05:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;html_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MOSFET AMPLIFIER EXPERIMENTThis demonstration is to develop your intuition about amplifiers and biasing, and to have fun with music! There are no responses that need to be checked.In the lab below, you will find:A circuit schematic of the MOSFET amplifier. You can use the sliders to the left of the circuit to control various parameters of the MOSFET and the amplifier.A plot (as a function of time) of selected voltages from the amplifier circuit. You can select the input waveform (e.g., sine wave, square wave, various types of music) by using the \\(v_\\mathrm{IN}\\) drop-down menu and the associated sliders. (The parameter \\(V_\\mathrm{MAX}\\) sets the maximum range on the plots.)The \&amp;quot;Play\&amp;quot; button which lets you listen to the selected voltage waveform as sound. Try it out!Listen to:vINvOUTvRGraph:vINvOUTvRvIN:Zero InputUnit ImpulseUnit StepSine WaveSquare WaveClassical MusicFolk MusicJazz MusicReggae MusicYour browser must support the Canvas element and have JavaScript enabled to view this tool.Your browser must support the Canvas element and have JavaScript enabled to view this tool.Experiment 1: Distorted outputBegin by selecting a sine wave input in the drop-down menu for \\(v_\\mathrm{IN}\\). Then, adjust the sliders to the baseline (default) setting shown below.Baseline setting of sliders:Peak to peak voltage: \\(v_\\mathrm{IN}=3~\\mathrm{V}\\),Frequency: \\(f = 1000~\\mathrm{Hz}\\),Supply voltage: \\(V_\\mathrm{S}=1.6~\\mathrm{V}\\),Input bias voltage: \\(V_\\mathrm{BIAS}=2.5~\\mathrm{V}\\),Pull-up resistor: \\(R = 10~\\mathrm{k}\\Omega\\),MOSFET parameter: \\(K=\\frac{1~\\mathrm{mA}}{\\mathrm{V}^2}\\),MOSFET threshold voltage: \\(V_\\mathrm{T} = 1~\\mathrm{V}\\),Vertical plot range: \\(V_\\mathrm{MAX} = 2~\\mathrm{V}\\).You should observe in the plot that with the baseline settings, the amplifier produces a distorted sine wave signal for \\(v_{OUT}\\). Next, go ahead and select one of the music signals as the input and listen to each of \\(v_{IN}\\) and \\(v_{OUT}\\), and confirm for yourself that the output sounds degraded at the chosen slider settings. You will notice that the graph now plots the music signal waveforms. Think about the reasons why the amplifier is producing a distorted output.Experiment 2: Linear regimeWe now study the amplifier&amp;#39;s small signal behavior. Select a sine wave as the input signal. To study the small signal behavior, reduce the value of \\(v_{IN}\\) to 0.1V (peak-to-peak) by using the \\(v_{IN}\\) slider. Keeping the rest of the parameters at their baseline settings, derive an appropriate value of \\(V_{BIAS}\\) that will ensure saturation region operation for the MOSFET for the 0.1V peak-to-peak swing for \\(v_{IN}\\). Make sure to think about both positive and negative excursions of the signals.Next, use the \\(V_{BIAS}\\) slider to choose your computed value for \\(V_{BIAS}\\) and see if the observed plot of \\(v_{OUT}\\) is more-or-less distortion free. If your calculation was right, then the output will indeed be distortion free.Next, select one of the music signals as the input and listen to each of \\(v_{IN}\\) and \\(v_{OUT}\\), and confirm for yourself that the output sounds much better than in Experiment 1. Also, based on sound volume, convince yourself that \\(v_{OUT}\\) is an amplified version of \\(v_{IN}\\).Experiment 3: Your settingsNow go ahead and experiment with various other settings while listening to the music signal at \\(v_{OUT}\\). Observe the plots and listen to \\(v_{OUT}\\) as you change, for example, the bias voltage \\(V_{BIAS}\\). You will notice that the amplifier distorts the input signal when \\(V_{BIAS}\\) becomes too small, or when it becomes too large. You can also experiment with various values of \\(v_{IN}\\), \\(R_{L}\\), etc., and see how they affect the amplification and distortion.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;display_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Electronic Sound Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:edX+DemoX+Demo_Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Example Week 2: Get Interactive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Lesson 2 - Let&amp;#39;s Get Interactive!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Electronic Sound Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;content_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;content_groups&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@Lab_5B_Mosfet_Amplifier_Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;做个试验&lt;/h3&gt;
&lt;p&gt;使用httpie做实验，在里我们从外部发起请求，ajax的方式让人不方便直接观察数据，而且总感觉耦合在一起，不干净&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http -f POST http://209.9.106.99:5000/search/course-v1:edX+DemoX+Demo_Course search_string=edx page_size=20 page_index=0 'Cookie:sessionid=pzjqyf6kdoo8jj96ng753xhr1isvstm3;csrftoken=sjPry3O5UpFFp3N3izrIVvd9ZMDEWA7V' X-CSRFToken:sjPry3O5UpFFp3N3izrIVvd9ZMDEWA7V&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;url的格式为 DEMAIN/search/&lt;COURSE_ID&gt;&lt;/p&gt;
&lt;p&gt;返回为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;access_denied_count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;max_score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6223112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;results&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@2bee8c4248e842a19ba1e73ed8d426c2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6223112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;display_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Labs and Demos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;html_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Labs and Demos Professors that create courses on edX are able to implement highly interactive experiences that allow you as a student to experiment using easy to use online web applications. These labs are customized to each class and subject area. We have collected a couple of the more popular lab environments here for you to experience and play with. Please be patient with yourself as you take a look around at these lab environments. You probably will not be able to answer these questions without taking a course on the topic first! &amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;content_groups&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;content_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:edX+DemoX+Demo_Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;course_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX Demonstration Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;excerpt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;b&amp;gt;Lab&amp;lt;/b&amp;gt;s and Demos Professors that create courses on edX are able to&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@2bee8c4248e842a19ba1e73ed8d426c2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;Example Week 2: Get Interactive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;Homework - Labs and Demos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;Labs and Demos&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;start_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2013-02-05T00:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/courses/course-v1:edX+DemoX+Demo_Course/jump_to/block-v1:edX+DemoX+Demo_Course+type@html+block@2bee8c4248e842a19ba1e73ed8d426c2&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6223112&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@Lab_5B_Mosfet_Amplifier_Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.16797835&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;courseware_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;display_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Electronic Sound Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;quot;html_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MOSFET AMPLIFIER EXPERIMENTThis demonstration is to develop your intuition about amplifiers and biasing, and to have fun with music! There are no responses that need to be checked.In the lab below, you will find:A circuit schematic of the MOSFET amplifier. You can use the sliders to the left of the circuit to control various parameters of the MOSFET and the amplifier.A plot (as a function of time) of selected voltages from the amplifier circuit. You can select the input waveform (e.g., sine wave, square wave, various types of music) by using the \\(v_\\mathrm{IN}\\) drop-down menu and the associated sliders. (The parameter \\(V_\\mathrm{MAX}\\) sets the maximum range on the plots.)The \&amp;quot;Play\&amp;quot; button which lets you listen to the selected voltage waveform as sound. Try it out!Listen to:vINvOUTvRGraph:vINvOUTvRvIN:Zero InputUnit ImpulseUnit StepSine WaveSquare WaveClassical MusicFolk MusicJazz MusicReggae MusicYour browser must support the Canvas element and have JavaScript enabled to view this tool.Your browser must support the Canvas element and have JavaScript enabled to view this tool.Experiment 1: Distorted outputBegin by selecting a sine wave input in the drop-down menu for \\(v_\\mathrm{IN}\\). Then, adjust the sliders to the baseline (default) setting shown below.Baseline setting of sliders:Peak to peak voltage: \\(v_\\mathrm{IN}=3~\\mathrm{V}\\),Frequency: \\(f = 1000~\\mathrm{Hz}\\),Supply voltage: \\(V_\\mathrm{S}=1.6~\\mathrm{V}\\),Input bias voltage: \\(V_\\mathrm{BIAS}=2.5~\\mathrm{V}\\),Pull-up resistor: \\(R = 10~\\mathrm{k}\\Omega\\),MOSFET parameter: \\(K=\\frac{1~\\mathrm{mA}}{\\mathrm{V}^2}\\),MOSFET threshold voltage: \\(V_\\mathrm{T} = 1~\\mathrm{V}\\),Vertical plot range: \\(V_\\mathrm{MAX} = 2~\\mathrm{V}\\).You should observe in the plot that with the baseline settings, the amplifier produces a distorted sine wave signal for \\(v_{OUT}\\). Next, go ahead and select one of the music signals as the input and listen to each of \\(v_{IN}\\) and \\(v_{OUT}\\), and confirm for yourself that the output sounds degraded at the chosen slider settings. You will notice that the graph now plots the music signal waveforms. Think about the reasons why the amplifier is producing a distorted output.Experiment 2: Linear regimeWe now study the amplifier&amp;#39;s small signal behavior. Select a sine wave as the input signal. To study the small signal behavior, reduce the value of \\(v_{IN}\\) to 0.1V (peak-to-peak) by using the \\(v_{IN}\\) slider. Keeping the rest of the parameters at their baseline settings, derive an appropriate value of \\(V_{BIAS}\\) that will ensure saturation region operation for the MOSFET for the 0.1V peak-to-peak swing for \\(v_{IN}\\). Make sure to think about both positive and negative excursions of the signals.Next, use the \\(V_{BIAS}\\) slider to choose your computed value for \\(V_{BIAS}\\) and see if the observed plot of \\(v_{OUT}\\) is more-or-less distortion free. If your calculation was right, then the output will indeed be distortion free.Next, select one of the music signals as the input and listen to each of \\(v_{IN}\\) and \\(v_{OUT}\\), and confirm for yourself that the output sounds much better than in Experiment 1. Also, based on sound volume, convince yourself that \\(v_{OUT}\\) is an amplified version of \\(v_{IN}\\).Experiment 3: Your settingsNow go ahead and experiment with various other settings while listening to the music signal at \\(v_{OUT}\\). Observe the plots and listen to \\(v_{OUT}\\) as you change, for example, the bias voltage \\(V_{BIAS}\\). You will notice that the amplifier distorts the input signal when \\(V_{BIAS}\\) becomes too small, or when it becomes too large. You can also experiment with various values of \\(v_{IN}\\), \\(R_{L}\\), etc., and see how they affect the amplification and distortion.&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;content_groups&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;content_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:edX+DemoX+Demo_Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;course_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX Demonstration Course&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;excerpt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;There are no responses that need to be checked.In the &amp;lt;b&amp;gt;lab&amp;lt;/b&amp;gt; below, you&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;block-v1:edX+DemoX+Demo_Course+type@html+block@Lab_5B_Mosfet_Amplifier_Experiment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;Example Week 2: Get Interactive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;Lesson 2 - Let&amp;#39;s Get Interactive!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s2"&gt;&amp;quot;Electronic Sound Experiment&amp;quot;&lt;/span&gt;
                &lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;start_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1970-01-01T05:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/courses/course-v1:edX+DemoX+Demo_Course/jump_to/block-v1:edX+DemoX+Demo_Course+type@html+block@Lab_5B_Mosfet_Amplifier_Experiment&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;score&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.16797835&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;took&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;total&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同理在课程首页的搜索和Dashboard里的搜索也类似&lt;/p&gt;
&lt;p&gt;以上这个技巧对我们做调试十分有帮助，因为输出在命令行所以我们可以尽情使用grep和jq等工具来筛选信息。只要数据能流向命令行，我们的linux工具箱就将发挥作用，工具的组合威力每次都能让我大吃一惊。管道大概是Unix工具箱最美妙的特性之一&lt;/p&gt;
&lt;p&gt;评测发现搜索必须是个词，好比搜demo课程，搜索&lt;code&gt;edx&lt;/code&gt;可以搜到内容，而搜索&lt;code&gt;e&lt;/code&gt;则无法搜索到，这应该和分词有关。在edx本土化（汉化）的过程中这个问题应该也会存在&lt;/p&gt;
&lt;p&gt;在课程内部进行搜索，可以检索中文&lt;/p&gt;
&lt;h3&gt;分析源码&lt;/h3&gt;
&lt;h4&gt;类继承关系&lt;/h4&gt;
&lt;p&gt;waiting... 具体的源码分析留到之后有时间再折腾。今天大体上已经将search服务干净地分离出来了，据此可以做许多有趣的东西&lt;/p&gt;
&lt;h3&gt;Elasticsearch&lt;/h3&gt;
&lt;p&gt;Elasticsearch 是一个分布式可扩展的实时搜索和分析引擎。它能帮助你搜索、分析和浏览数据。edx中的相关搜索都是基于它写的&lt;/p&gt;
&lt;h4&gt;资源&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://es.xiaoleilu.com/"&gt;Elasticsearch 权威指南（中文版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.learnes.net/getting_started/README.html"&gt;Elasticsearch 权威指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.justinablog.com/archives/967"&gt;使用Python进行Elasticsearch数据索引&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 20 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-20:edx-search-analysis.html</guid><category>edx</category></item><item><title>招兵买马</title><link>/join-us.html</link><description>&lt;p&gt;从没写过招聘，并不知道格式如何，先打油一把&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;如果你热爱互联网，同时又热爱教育  &lt;/p&gt;
&lt;p&gt;你码完代码，可能还想码诗&lt;/p&gt;
&lt;p&gt;你厌倦了雾霾，想找个厚重却不失情趣的城市&lt;/p&gt;
&lt;p&gt;你春初的周末醒来，想到钟山景区芳草如织&lt;/p&gt;
&lt;p&gt;你讨厌加班熬夜，还讨厌产品经理&lt;/p&gt;
&lt;p&gt;想过当木匠、作家，又舍不得离开代码  &lt;/p&gt;
&lt;p&gt;也许你并不是一个人，也许只是你还没有加入我们&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;打油完毕，该正经写招聘了&lt;/p&gt;
&lt;h1&gt;Web后端攻城狮&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;熟悉Python(Django)&lt;/li&gt;
&lt;li&gt;熟悉Linux(Ubuntu)&lt;/li&gt;
&lt;li&gt;熟悉Git&lt;/li&gt;
&lt;li&gt;如果有过参与开源项目的经验就更好啦&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哦对了我们一般用Tmux/Vim/IPython来做开发，当然你也可以用Pycharm啦&lt;/p&gt;
&lt;p&gt;如果你有更多的技能和这里匹配：&lt;a href="http://blog.just4fun.site/open-edx-dev-skill-and-resource.html"&gt;Open edX开发技能与入门资料&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还不快到碗里来233&lt;/p&gt;
&lt;h1&gt;前端攻城狮 (暂时不需要啦，有兴趣的小伙伴可以保持联系)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;全职&lt;/li&gt;
&lt;li&gt;精通 HTML/CSS/JavaScript&lt;/li&gt;
&lt;li&gt;熟悉html5/jQuery/Ajax&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;熟悉以下技术的小伙伴优先(不强求)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前端工程化&lt;/li&gt;
&lt;li&gt;Backbone.js&lt;/li&gt;
&lt;li&gt;npm/Bower/Grunt&lt;/li&gt;
&lt;li&gt;RequireJS&lt;/li&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;li&gt;Sass&lt;/li&gt;
&lt;li&gt;React/Vue&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;如果你爱折腾爱技术，请无视以上所有要求，直接发简历吧~~&lt;/h3&gt;
&lt;h1&gt;联系方式&lt;/h1&gt;
&lt;p&gt;我们坐标南京，想用技术改变教育：）&lt;/p&gt;
&lt;p&gt;简历发送至 &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#119;&amp;#117;&amp;#119;&amp;#101;&amp;#110;&amp;#106;&amp;#105;&amp;#101;&amp;#55;&amp;#49;&amp;#56;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#119;&amp;#117;&amp;#119;&amp;#101;&amp;#110;&amp;#106;&amp;#105;&amp;#101;&amp;#55;&amp;#49;&amp;#56;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果有github和博客，也一并附上吧&lt;/p&gt;
&lt;p&gt;哦对了 我们接受实习 ：）&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 16 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-16:join-us.html</guid><category>edx</category></item><item><title>Open edX开发技能与入门资料</title><link>/open-edx-dev-skill-and-resource.html</link><description>&lt;p&gt;上周末应@COVER老师邀请，去了趟华中师范大学，和@徐潇@treasure@liuyuantao 及其他几个小伙伴，讨论了些Open edX相关的技术话题，关于Open edX架构、源码结构、源码阅读建议、开发及工作流建议、遇到的坑及解决思路相关的问题&lt;/p&gt;
&lt;p&gt;由于我们踩过的坑比较多，分享完前车之鉴，大家希望我分享些源码阅读经验和入门资料，我说我最近正好在思考这个问题，回去写成博客好啦，所以有下边这篇文章&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;哈哈上边的总结未免官方，我真正想说的是作为一个能吃辣地南方人，武汉的菜很合我胃口呀 ：） 与大家相处的周末很开心，像回到一年多以前，在学校里与一群热爱技术的小伙伴在一起的感觉&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;@MT在前些日子写过一篇&lt;a href="http://edustack.org/2015/12/14/open-edx%E6%B6%89%E5%8F%8A%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%E3%80%81%E6%A1%86%E6%9E%B6%E5%92%8C%E5%BC%80%E6%BA%90%E7%BB%84%E4%BB%B6/"&gt;Open edX涉及的开发语言、框架和开源组件
&lt;/a&gt;，整理得很全了，对整个技术栈有兴趣的小伙伴，可以看那篇&lt;/p&gt;
&lt;p&gt;哦对了，招聘要求往往也是很不错的技能风向标，所以&lt;a href="http://www.xuetangx.com/"&gt;学堂在线&lt;/a&gt;的&lt;a href="http://www.xuetangx.com/about#join_us"&gt;招兵买马&lt;/a&gt;当然也是很好的参考啦&lt;/p&gt;
&lt;p&gt;我在这里主要整理我认为开发Open edX主要涉及的技术以及我自己比较喜欢的入门书籍,以及其他一些我的个人建议，分以下几个部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通用技能&lt;/li&gt;
&lt;li&gt;后端技能&lt;/li&gt;
&lt;li&gt;前端技能&lt;/li&gt;
&lt;li&gt;运维技能&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;通用技能&lt;/h1&gt;
&lt;h3&gt;Git&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;建议&lt;/code&gt;：团队中应当至少有一人熟练使用Git，这样能省下大量的时间。如果不能熟练使用Git，那么团队的协作将举步维艰，大多可以通过版本管理轻松解决的问题，将变为手工操作，效率极大地下降。当然也不要求所有人都精通Git，大多成员只要会最基本的操作就行，对于新手，SourceTree是十分不错的工具&lt;/p&gt;
&lt;p&gt;推荐资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;入门教程：  &lt;ul&gt;
&lt;li&gt;&lt;a href="http://rogerdudler.github.io/git-guide/index.zh.html"&gt;git - 简明指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Mark24Code/15minGit/blob/master/15minGit.md"&gt;15分钟学会使用Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;深入学习&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000"&gt;Git教程 廖雪峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://backlogtool.com/git-guide/cn/intro/intro1_1.html"&gt;猴子都能懂的GIT入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://zhengkun.info/2014/10/09/git_usage.html"&gt;Git 常用命令用法：程序员的场景&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;终极教程：    &lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/zh/v2"&gt;Pro Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;后端技能&lt;/h1&gt;
&lt;h3&gt;Linux(Ubuntu)&lt;/h3&gt;
&lt;p&gt;推荐几个特别有用的工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;li&gt;ssh&lt;/li&gt;
&lt;li&gt;IPython&lt;/li&gt;
&lt;li&gt;sshuttle&lt;/li&gt;
&lt;li&gt;ngrok&lt;/li&gt;
&lt;li&gt;htop&lt;/li&gt;
&lt;li&gt;nethogs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://billie66.github.io/TLCL/book/zh/"&gt;The Linux Command Line &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://linuxtools-rst.readthedocs.org/zh_CN/latest/index.html"&gt;Linux工具快速教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md"&gt;命令行的艺术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://man.linuxde.net/"&gt;Linux命令大全&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;p&gt;推荐资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Head First Programming&lt;/li&gt;
&lt;li&gt;&lt;a href="http://book.douban.com/subject/3988517/"&gt;Learning Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://old.sebug.net/paper/books/LearnPythonTheHardWay/"&gt;笨办法学 Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python简明教程&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pythondoc.com/pythontutorial27/index.html"&gt;Python 2.7 官方教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进阶：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python3-cookbook.readthedocs.org/zh_CN/latest/"&gt;Python Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26389274/"&gt;Python高手之路&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Django&lt;/h3&gt;
&lt;p&gt;我自己的入门资料是&lt;a href="http://djangobook.py3k.cn/2.0/"&gt;djangobook&lt;/a&gt;,十分喜欢这本书，往复翻了有好几遍。此外的建议是边看书，边去github上找些小项目跟着做，写个小博客就是很好的练手项目&lt;/p&gt;
&lt;p&gt;推荐资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangobook.py3k.cn/2.0/"&gt;djangobook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yangyubo/zh-django-best-practices"&gt;Django 最佳实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python.usyiyi.cn/django/index.html"&gt;Django 1.8.2 文档中文版 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gitbook.com/book/andrew-liu/django-blog/details"&gt;Django搭建简易博客教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Mako&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.makotemplates.org/en/latest/"&gt;http://docs.makotemplates.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yeolar.com/note/2012/08/28/mako-syntax/"&gt;Python模板库Mako的语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;数据库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mysql&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html"&gt;21分钟 MySQL 入门教程&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MongoDB&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/justinyhuang/the-little-mongodb-book-cn/blob/master/mongodb.md"&gt;The Little MongoDB Book&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;可选：Docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;Todo&lt;/h1&gt;
&lt;h1&gt;前端技能&lt;/h1&gt;
&lt;p&gt;HTML、CSS、Javascript(jQuery)当然是必备的&lt;/p&gt;
&lt;h3&gt;调试工具&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jinlong.github.io/2013/08/29/devtoolsecrets/"&gt;浏览器开发工具的秘密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools/blob/master/directory.md"&gt;Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Backbone.js&lt;/h3&gt;
&lt;h3&gt;Require.js&lt;/h3&gt;
&lt;h3&gt;Sass&lt;/h3&gt;
&lt;h1&gt;运维技能&lt;/h1&gt;
&lt;h3&gt;Linux(Ubuntu)&lt;/h3&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;h2&gt;Nginx&lt;/h2&gt;
&lt;h3&gt;Ansible&lt;/h3&gt;
&lt;h1&gt;附录&lt;/h1&gt;
&lt;h3&gt;vim&lt;/h3&gt;
&lt;p&gt;我日常使用vim作为编辑器，如果你想学习vim，推荐这篇文章&lt;a href="http://coolshell.cn/articles/5426.html"&gt;简明 Vim 练级攻略&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-11:open-edx-dev-skill-and-resource.html</guid><category>edx</category></item><item><title>edx Dogwood基础配置</title><link>/Dogwood-setting.html</link><description>&lt;h1&gt;Todo&lt;/h1&gt;
&lt;p&gt;所有用手动修改的地方改为sed修改，使其命令化&lt;/p&gt;
&lt;h1&gt;新特性配置&lt;/h1&gt;
&lt;p&gt;关于新特性的配置请移步&lt;a href="http://blog.just4fun.site/try-open-edx-master-20151214.html"&gt;Open edX最新版评测与新特性探索(20151214)&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;预备知识&lt;/h1&gt;
&lt;p&gt;配置文件在&lt;code&gt;/edx/app/edxapp&lt;/code&gt;目录，有四个配置文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lms.env.json&lt;/li&gt;
&lt;li&gt;cms.env.json&lt;/li&gt;
&lt;li&gt;lms.auth.json&lt;/li&gt;
&lt;li&gt;cms.auth.json&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;汉化&lt;/h1&gt;
&lt;h3&gt;修改配置文件&lt;/h3&gt;
&lt;p&gt;修改*ms.env.json中的LANGUAGE_CODE,将en改为&lt;code&gt;zh_CN&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;获取汉化包&lt;/h3&gt;
&lt;p&gt;Dogwood的汉化包还没有出来。
我们暂时适应@MT的&lt;a href="http://edustack.org/2015/10/26/open-edx-cypress%E5%AE%8C%E6%95%B4%E6%B1%89%E5%8C%96%E8%AF%AD%E8%A8%80%E5%8C%85/"&gt;Open edX Cypress完整汉化语言包&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u edxapp bash
&lt;span class="nb"&gt;source&lt;/span&gt; /edx/app/edxapp/edxapp_env
&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform/conf/locale/zh_CN/LC_MESSAGES/
rm *
wget http://mirrors.edustack.org/LC_MESSAGES/django.po
wget http://mirrors.edustack.org/LC_MESSAGES/djangojs.po
&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform
paver i18n_fastgenerate
sudo /edx/bin/supervisorctl restart edxapp:
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;配置邮件服务&lt;/h1&gt;
&lt;p&gt;邮件配置和此前的版本没有变化，通过修改/edx/app/edxapp/目录下的json文件&lt;/p&gt;
&lt;h1&gt;Logo修改与主题定制&lt;/h1&gt;
&lt;p&gt;Dogwood已经把主题内置到源码里了，此前的&lt;a href="https://github.com/edx/edx-platform/wiki/Stanford-Theming"&gt;https://github.com/edx/edx-platform/wiki/Stanford-Theming&lt;/a&gt;和&lt;a href="https://github.com/IONISx/edx-theme"&gt;IONISx/edx-theme&lt;/a&gt;都不适用了（可以通过修改来补救），大家注意一下&lt;/p&gt;
&lt;p&gt;文档参考&lt;a href="https://github.com/edx/edx-platform/tree/master/themes"&gt;Comprehensive Theming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改lms.env.json中的COMPREHENSIVE_THEME_DIR,指向主题所在目录&lt;/p&gt;
&lt;p&gt;Dogwood中带了几个demo主题。我们给个demo：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"COMPREHENSIVE_THEME_DIR": "/edx/app/edxapp/edx-platform/themes/edx.org"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后编译静态文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -H -u edxapp bash
&lt;span class="nb"&gt;source&lt;/span&gt; /edx/app/edxapp/edxapp_env
&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform
paver update_assets cms --settings&lt;span class="o"&gt;=&lt;/span&gt;aws
&lt;span class="c1"&gt;#paver update_assets lms --settings=aws&lt;/span&gt;
paver update_assets lms --settings&lt;span class="o"&gt;=&lt;/span&gt;devstack
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;修改站点信息&lt;/h1&gt;
&lt;h3&gt;网站名&lt;/h3&gt;
&lt;p&gt;修改*ms.env.json中的PLATFORM_NAME&lt;/p&gt;
&lt;h3&gt;时区&lt;/h3&gt;
&lt;p&gt;修改*ms.env.json中的TIME_ZONE，使其为&lt;code&gt;Asia/Shanghai&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edustack.org/manual/edx/ova%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"&gt;Open edX » 简明配置指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Full-Stack"&gt;edX Managing the Full Stack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-07:Dogwood-setting.html</guid><category>edx</category></item><item><title>Open edX，开放教育与许可协议</title><link>/about-creative-commons.html</link><description>&lt;h1&gt;年度事件&lt;/h1&gt;
&lt;p&gt;在&lt;a href="https://opensource.com/life/15/12/best-open-source-news-2015"&gt;Top news of 2015 in open source&lt;/a&gt;(2015年开源年度新闻)里提到&lt;code&gt;开放教育为未来做好准备&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;原文如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Open education ready for the future&lt;/p&gt;
&lt;p&gt;This year, Open edX added Creative Commons licensing to their content, and Creative Commons sent an open letter to the Obama administration calling for administrative action to ensure that federally funded educational materials are made available as Open Educational Resources for the public.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大致是说Open edX 在它们的内容中增加了&lt;code&gt;知识共享许可协议&lt;/code&gt;（Creative Commons licensing），他们（Creative Commons）给奥巴马政府发了一封公开信，呼吁采取行政手段来保障教育资料对公众开放。&lt;/p&gt;
&lt;h1&gt;我的理解&lt;/h1&gt;
&lt;p&gt;Open edX的出现，为开放教育提供了技术支持。同历史上的大多事件一样，技术的成熟往往只是个开始，接下来更深刻的变革来自制度/协议/契约的建立，这些属于社会层面的活动。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;知识共享许可协议&lt;/code&gt;试图建立一种协议，为教育资源的开放保驾护航&lt;/p&gt;
&lt;p&gt;如果把Open edX比作Linux操作系统，那么知识共享许可协议就类似当年的GNU协议。&lt;/p&gt;
&lt;p&gt;当然他们都只是工具，还不涉及内容本身，虽然必定影响内容的表达。&lt;/p&gt;
&lt;p&gt;他们提供了类似脚手架的东西。在此基础上，那些对教育资源持开放态度且期待对教育进行变革的人们，起步要容易许多。&lt;/p&gt;
&lt;p&gt;我相信开源运动的核心是Richard Stallman（RMS）建立了开源哲学，并构建了强有力的GUN协议，使其与传统的专利法抗争，以此来保障自由。&lt;/p&gt;
&lt;p&gt;在这个层面上我相信知识共享许可协议（Creative Commons Licensing）是一个比Open edX本身重大的东西。而且可能重大得多。&lt;/p&gt;
&lt;p&gt;如果将来开放教育在教育领域引起了变革，正如今天开源运动之于软件领域。也许那时候Open edX已经形成生态，类似今天的Linux。但我依然相信&lt;code&gt;知识共享许可协议&lt;/code&gt;是促成变革的核心要素&lt;/p&gt;
&lt;h1&gt;可能性&lt;/h1&gt;
&lt;p&gt;我对内容的传播/扩散与改良十分感兴趣，这种传播过程很像生活进化进程中基因的活动。&lt;/p&gt;
&lt;p&gt;我对进化论视角的偏好，可能是受道金斯《自私的基因》的影响，在这本书里作者论述了，基因为了达到扩散自身的目的,"采取"的种种策略，令人叹为观止，后半部分作者进一步论述了与基因属性极其相似的东西迷因（meme），也就是我们日常所说的文化，他们的传播机制&lt;/p&gt;
&lt;p&gt;而作为知识载体的教育资源，我觉得适合看做文化的一个片段。&lt;code&gt;知识共享许可协议&lt;/code&gt;很像是为他们创造的外部环境，在此环境下的生物形态（教育资源）将可能具有以下特征：他们的进化更加频繁，互动更为紧密, 对环境的适应更好。他们进化出更优良的特性，最后被选择下来&lt;/p&gt;
&lt;p&gt;正如开源协议为软件协作解除了枷锁，这个协议可能为开放教育解除束缚&lt;/p&gt;
&lt;p&gt;最后把我在Open edX开发研究群里的讨论也放到这里，做个归档：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个协议被采用的话，可能内容就像开源软件一样可被不同的人迭代改良&lt;/p&gt;
&lt;p&gt;而edx成为类似linux的东西，基于此平台的课程就行基于Linux/Unix的开源软件，可以被任意更改优化，分布式地来改良&lt;/p&gt;
&lt;p&gt;如果顺利，这多像linux和开源运动的历史，不过是教育界的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;相关资料&lt;/h1&gt;
&lt;p&gt;我相信这是一件让人热血沸腾的变革，虽然它才蹒跚学步。&lt;/p&gt;
&lt;p&gt;给对此感兴趣的小伙伴列出我所收集到的相关资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://creativecommons.org/licenses/?lang=zh"&gt;关于许可协议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/features/creative-commons-licensing-courses-and-videos"&gt;Creative Commons Licensing for Courses and Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/blog/open-edx-releases-creative-commons-licensing"&gt;Open edX Releases Creative Commons Licensing!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/configuration/enable_licensing.html"&gt;Enabling Course and Video Licensing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-07:about-creative-commons.html</guid><category>edx</category></item><item><title>Open edX，开放教育与许可协议</title><link>/about-creative-commons.html</link><description>&lt;h1&gt;年度事件&lt;/h1&gt;
&lt;p&gt;在&lt;a href="https://opensource.com/life/15/12/best-open-source-news-2015"&gt;Top news of 2015 in open source&lt;/a&gt;(2015年开源年度新闻)里提到&lt;code&gt;开放教育为未来做好准备&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;原文如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Open education ready for the future&lt;/p&gt;
&lt;p&gt;This year, Open edX added Creative Commons licensing to their content, and Creative Commons sent an open letter to the Obama administration calling for administrative action to ensure that federally funded educational materials are made available as Open Educational Resources for the public.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大致是说Open edX 在它们的内容中增加了&lt;code&gt;知识共享许可协议&lt;/code&gt;（Creative Commons licensing），他们（Creative Commons）给奥巴马政府发了一封公开信，呼吁采取行政手段来保障教育资料对公众开放。&lt;/p&gt;
&lt;h1&gt;我的理解&lt;/h1&gt;
&lt;p&gt;Open edX的出现，为开放教育提供了技术支持。同历史上的大多事件一样，技术的成熟往往只是个开始，接下来更深刻的变革来自制度/协议/契约的建立，这些属于社会层面的活动。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;知识共享许可协议&lt;/code&gt;试图建立一种协议，为教育资源的开放保驾护航&lt;/p&gt;
&lt;p&gt;如果把Open edX比作Linux操作系统，那么知识共享许可协议就类似当年的GNU协议。&lt;/p&gt;
&lt;p&gt;当然他们都只是工具，还不涉及内容本身，虽然必定影响内容的表达。&lt;/p&gt;
&lt;p&gt;他们提供了类似脚手架的东西。在此基础上，那些对教育资源持开放态度且期待对教育进行变革的人们，起步要容易许多。&lt;/p&gt;
&lt;p&gt;我相信开源运动的核心是Richard Stallman（RMS）建立了开源哲学，并构建了强有力的GUN协议，使其与传统的专利法抗争，以此来保障自由。&lt;/p&gt;
&lt;p&gt;在这个层面上我相信知识共享许可协议（Creative Commons Licensing）是一个比Open edX本身重大的东西。而且可能重大得多。&lt;/p&gt;
&lt;p&gt;如果将来开放教育在教育领域引起了变革，正如今天开源运动之于软件领域。也许那时候Open edX已经形成生态，类似今天的Linux。但我依然相信&lt;code&gt;知识共享许可协议&lt;/code&gt;是促成变革的核心要素&lt;/p&gt;
&lt;h1&gt;可能性&lt;/h1&gt;
&lt;p&gt;我对内容的传播/扩散与改良十分感兴趣，这种传播过程很像生活进化进程中基因的活动。&lt;/p&gt;
&lt;p&gt;我对进化论视角的偏好，可能是受道金斯《自私的基因》的影响，在这本书里作者论述了，基因为了达到扩散自身的目的,"采取"的种种策略，令人叹为观止，后半部分作者进一步论述了与基因属性极其相似的东西迷因（meme），也就是我们日常所说的文化，他们的传播机制&lt;/p&gt;
&lt;p&gt;而作为知识载体的教育资源，我觉得适合看做文化的一个片段。&lt;code&gt;知识共享许可协议&lt;/code&gt;很像是为他们创造的外部环境，在此环境下的生物形态（教育资源）将可能具有以下特征：他们的进化更加频繁，互动更为紧密, 对环境的适应更好。他们进化出更优良的特性，最后被选择下来&lt;/p&gt;
&lt;p&gt;正如开源协议为软件协作解除了枷锁，这个协议可能为开放教育解除束缚&lt;/p&gt;
&lt;p&gt;最后把我在Open edX开发研究群里的讨论也放到这里，做个归档：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个协议被采用的话，可能内容就像开源软件一样可被不同的人迭代改良
而edx成为类似linux的东西，基于此平台的课程就行基于Linux/Unix的开源软件，可以被任意更改优化，分布式地来改良
如果顺利，这多像linux和开源运动的历史，不过是教育界的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;相关资料&lt;/h1&gt;
&lt;p&gt;我相信这是一件让人热血沸腾的变革，虽然它才蹒跚学步。&lt;/p&gt;
&lt;p&gt;给对此感兴趣的小伙伴列出我所收集到的相关资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://creativecommons.org/licenses/?lang=zh"&gt;关于许可协议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/features/creative-commons-licensing-courses-and-videos"&gt;Creative Commons Licensing for Courses and Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/blog/open-edx-releases-creative-commons-licensing"&gt;Open edX Releases Creative Commons Licensing!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/configuration/enable_licensing.html"&gt;Enabling Course and Video Licensing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-07:about-creative-commons.html</guid><category>edx</category></item><item><title>在ubuntu12.04下安装edx Dogwood</title><link>/install-edx-Dogwood.html</link><description>&lt;h1&gt;Dogwood&lt;/h1&gt;
&lt;p&gt;Dogwood是Open edX的第四个稳定版本，该版本相关的特性可以参考@MT的&lt;a href="http://edustack.org/2016/01/03/open-edx-dogwood%E7%89%88%E6%9C%AC%E7%89%B9%E6%80%A7/"&gt;Open edX DogWood版本特性&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前Dogwood还是rc版，估计要本月中旬才会有最终稳定版&lt;/p&gt;
&lt;h1&gt;最简易的方式&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;OPENEDX_RELEASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;named-release/dogwood.rc
wget https://raw.githubusercontent.com/edx/configuration/&lt;span class="nv"&gt;$OPENEDX_RELEASE&lt;/span&gt;/util/install/sandbox.sh -O - &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;分步安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;sudo apt-get update -y&lt;/li&gt;
&lt;li&gt;sudo apt-get upgrade -y&lt;/li&gt;
&lt;li&gt;sudo reboot&lt;/li&gt;
&lt;li&gt;sudo apt-get install -y build-essential software-properties-common python-software-properties curl git-core libxml2-dev libxslt1-dev libfreetype6-dev python-pip python-apt python-dev libxmlsec1-dev swig&lt;/li&gt;
&lt;li&gt;sudo pip install --upgrade pip&lt;/li&gt;
&lt;li&gt;sudo pip install --upgrade virtualenv&lt;/li&gt;
&lt;li&gt;cd /var/tmp&lt;/li&gt;
&lt;li&gt;git clone https://github.com/edx/configuration&lt;/li&gt;
&lt;li&gt;cd /var/tmp/configuration&lt;/li&gt;
&lt;li&gt;git checkout named-release/dogwood.rc&lt;/li&gt;
&lt;li&gt;sed  -i "/COMMON_SSH_PASSWORD_AUTH/c COMMON_SSH_PASSWORD_AUTH: \"yes\"" playbooks/roles/common/defaults/main.yml&lt;/li&gt;
&lt;li&gt;sudo pip install -r requirements.txt&lt;/li&gt;
&lt;li&gt;cd /var/tmp/configuration/playbooks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ansible-playbook -c local ./edx_sandbox.yml -i  "localhost," -e 'edx_platform_version=named-release/dogwood.rc certs_version=named-release/dogwood.rc forum_version=named-release/dogwood.rc xqueue_version=named-release/dogwood.rc'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;问题与解决方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;pkg_resources.DistributionNotFound: paramiko&lt;ul&gt;
&lt;li&gt;解决方法：&lt;code&gt;sudo pip install -U setuptools&lt;/code&gt;     &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mysql_config not found&lt;ul&gt;
&lt;li&gt;解决方法: &lt;code&gt;sudo apt-get install libmysqlclient-dev&lt;/code&gt;      &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;青云&lt;/h1&gt;
&lt;p&gt;如果在青云上安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim /etc/default/grub
change &amp;quot;apparmor=1&amp;quot;
sudo update-grub
reboot
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 07 Jan 2016 00:00:00 +0000</pubDate><guid>tag:,2016-01-07:install-edx-Dogwood.html</guid><category>edx</category></item><item><title>OAuth学习笔记</title><link>/OAuth2-note.html</link><description>&lt;p&gt;既然最近在学习身份认证相关的东西，OAuth2就是一个绕不开的部分了&lt;/p&gt;
&lt;p&gt;OAuth致力于解决的是&lt;code&gt;授权&lt;/code&gt;相关的问题。它和认证并不相同。&lt;/p&gt;
&lt;p&gt;OAuth致力于为跨站的授权提供解决方案，而OpenID则是为了解决跨站点认证问题，当然这两个协议有重叠处，授权和认证常常关系紧密&lt;/p&gt;
&lt;p&gt;当前流行的OAuth版本是OAuth2.0，就是著名的OAuth2&lt;/p&gt;
&lt;h1&gt;介绍&lt;/h1&gt;
&lt;p&gt;维基上描述说，OAuth（&lt;code&gt;开放授权&lt;/code&gt;）是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方应用。&lt;/p&gt;
&lt;p&gt;OAuth允许用户提供一个令牌，而不是用户名和密码来访问他们存放在特定服务提供者的数据。每一个令牌授权一个特定的网站（例如，视频编辑网站)在特定的时段（例如，接下来的2小时内）内访问特定的资源（例如仅仅是某一相册中的视频）。这样，OAuth让用户可以授权第三方网站访问他们存储在另外服务提供者的某些特定信息，而非所有内容。&lt;/p&gt;
&lt;h1&gt;意义&lt;/h1&gt;
&lt;p&gt;关于OAuth能给你带来什么好处，课程格子的创始人李天放在知乎有一段很棒的回答，我摘过来：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;新浪微博就是你的家。偶尔你会想让一些人（第三方应用）去你的家里帮你做一些事，或取点东西。你可以复制一把钥匙（用户名和密码）给他们，但这里有三个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;别人拿了钥匙后可以去所有的房间  &lt;/li&gt;
&lt;li&gt;别人拿到你的钥匙后也许会不小心丢到，甚至故意送到它人手里。这样你都不知到谁有你家钥匙。  &lt;/li&gt;
&lt;li&gt;过一段时间你也许会想要回自己的钥匙，但别人不还怎么办？   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OAuth 是高级钥匙: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你可以配置不同权限的钥匙。有些只能进大厅（读取你的微博流）。有些钥匙可以进储藏柜（读取你的相片)&lt;/li&gt;
&lt;li&gt;钥匙上带着指纹验证的（指纹 = appkey)。 收到钥匙的人只能自己用，不能转让 &lt;/li&gt;
&lt;li&gt;你可以远程废除之前发出的钥匙相对来说, OAuth比给出用户名密码安全&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相对来说, OAuth比给出用户名密码安全&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我觉得以上的回答简介形象又切中要害&lt;/p&gt;
&lt;h1&gt;原理&lt;/h1&gt;
&lt;p&gt;关于入门引导和原理介绍，阮一峰老师的博客一直是极好的学习之处，关于OAuth部分，他的博客依然精彩，我在文后给出了链接。在此引述一些关键内容&lt;/p&gt;
&lt;h3&gt;相关名词&lt;/h3&gt;
&lt;p&gt;我们先把名词定义理清楚&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resource Owner(RO)：资源所有者&lt;/li&gt;
&lt;li&gt;Authorization Server(AS)：认证服务器，即服务提供商专门用来处理认证的服务器。&lt;/li&gt;
&lt;li&gt;Resource Server(RS)：资源服务器，即服务提供商存放用户生成的资源的服务器。它与认证服务器，可以是同一台服务器，也可以是不同的服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;基本思路&lt;/h3&gt;
&lt;p&gt;OAuth在"客户端"与"服务提供商"之间，设置了一个授权层（authorization layer）。"客户端"不能直接登录"服务提供商"，只能登录授权层，以此将用户与客户端区分开来。"客户端"登录授权层所用的令牌（token），与用户的密码不同。用户可以在登录的时候，指定授权层令牌的权限范围和有效期。&lt;/p&gt;
&lt;p&gt;"客户端"登录授权层以后，"服务提供商"根据令牌的权限范围和有效期，向"客户端"开放用户储存的资料。&lt;/p&gt;
&lt;h1&gt;客户端获取授权的四种模式&lt;/h1&gt;
&lt;p&gt;客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0定义了四种授权方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;授权码模式（authorization code）&lt;/li&gt;
&lt;li&gt;简化模式（implicit）&lt;/li&gt;
&lt;li&gt;密码模式（resource owner password credentials）&lt;/li&gt;
&lt;li&gt;客户端模式（client credentials）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;授权码模式&lt;/h3&gt;
&lt;p&gt;授权码模式（authorization code）是功能最完整、流程最严密的授权模式，也是我们最长见到的那种模式，当我们使用开放api的时候&lt;/p&gt;
&lt;p&gt;步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户访问客户端，后者将前者导向认证服务器。&lt;/li&gt;
&lt;li&gt;用户选择是否给予客户端授权。&lt;/li&gt;
&lt;li&gt;假设用户给予授权，认证服务器将用户导向客户端事先指定的"重定向URI"（redirection URI），同时附上一个授权码。&lt;/li&gt;
&lt;li&gt;客户端收到授权码，附上早先的"重定向URI"，向认证服务器申请令牌。这一步是在客户端的后台的服务器上完成的，对用户不可见。&lt;/li&gt;
&lt;li&gt;认证服务器核对了授权码和重定向URI，确认无误后，向客户端发送访问令牌（access token）和更新令牌（refresh token）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更多细节可以阅读阮一峰老师的原文&lt;/p&gt;
&lt;h3&gt;客户端模式&lt;/h3&gt;
&lt;p&gt;在这种模式中，用户直接向客户端注册，客户端以自己的名义要求"服务提供商"提供服务&lt;/p&gt;
&lt;p&gt;步骤为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端向认证服务器进行身份认证，并要求一个访问令牌。&lt;/li&gt;
&lt;li&gt;认证服务器确认无误后，向客户端提供访问令牌。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之所以特意列出这种模式是因为之前为Open edX写微信后端，微信后端是一个独立的web app，采用Flask来写，由于edx信任这个应用，所以采用这种模式&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;h2&gt;refresh_token&lt;/h2&gt;
&lt;p&gt;之前在给Open edX写微信后端时，access_token过期的问题困扰了我很久，由于对OAuth还不够了解，我一拍脑袋重造了车轮来处理过期问题。&lt;/p&gt;
&lt;p&gt;豆瓣的&lt;a href="https://developers.douban.com/wiki/?title=oauth2"&gt;这篇文档&lt;/a&gt;很清楚地说明了access_token 有效期 与 refresh_token相关的问题&lt;/p&gt;
&lt;p&gt;如果access_token过期，根据服务端返回的标识（106错误：&lt;code&gt;access_token_has_expired&lt;/code&gt;）,此时既可以再次引导用户进行授权来获取 access_token，还可以通过 refresh_token 的方式来换取新的 access_token 和 refresh_token。&lt;/p&gt;
&lt;p&gt;refresh_token 只有在 access_token 过期时才能使用，并且只能使用一次。当换取到的 access_token 再次过期时，使用新的 refresh_token 来换取 access_token&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/zh-cn/OAuth"&gt;OAuth 维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oauth.net/2/"&gt;OAuth 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html"&gt;理解OAuth 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/seccloud/article/details/8192707"&gt;帮你深入理解OAuth2.0协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 29 Dec 2015 00:00:00 +0000</pubDate><guid>tag:,2015-12-29:OAuth2-note.html</guid><category>edx</category></item><item><title>JWT学习笔记</title><link>/jwt-note.html</link><description>&lt;p&gt;最近的这几篇文章都与身份认证有关，前边我们说到的CAS只是实现单点登录(SSO)的一种方式，本文将提到的JWT（JSON Web Token）是当前最流行的身份认证方式之一,也能实现单点登录。&lt;/p&gt;
&lt;h1&gt;基于Cookie/服务端的认证&lt;/h1&gt;
&lt;p&gt;身份认证是Web应用中极重要的一个部分，Cookie和基于服务器的身份验证（Session）一直都是最简单而常见的解决方案&lt;/p&gt;
&lt;p&gt;在传统的基于Cookie/服务端方案中,用户的每个请求中携带Cookie，服务端据此识别用户。&lt;/p&gt;
&lt;p&gt;这种方式可能存在很多问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它在跨域场景表现并不好&lt;/li&gt;
&lt;li&gt;很难提供对移动端的支持&lt;/li&gt;
&lt;li&gt;存在跨站点脚本攻击（XSS）的风险&lt;/li&gt;
&lt;li&gt;很难在两个使用不同语言编写的web框架间共享session数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;基于Token的认证&lt;/h1&gt;
&lt;p&gt;在API被广泛使用的今天（广泛到不少应用后端仅需提供API就好了），为API设计更合适的身份认证解决方案就变得十分必要，OAuth 2.0和JSON Web Token（JWT）是这些解决方案中最流行的&lt;/p&gt;
&lt;p&gt;基于Token的认证，除了能回避Cookie存在的问题，还有许多额外的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无状态：由于Token已经自包含了所有的用户信息，所以无须再存储Session， 服务端易于扩展。&lt;/li&gt;
&lt;li&gt;内容分发：易于实现CDN，将静态资源分布到CDN上，某些CDN服务商提供了基于Token验证的安全服务，服务器仅提供API&lt;/li&gt;
&lt;li&gt;解耦：无须被绑定在一个特定的验证方案。作为独立的会话系统，利于实现分布式&lt;/li&gt;
&lt;li&gt;基于标准：JWT作为Token的标准已经被广泛的接受。主流语言都有相应支持JWT标准的工具包&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;JWT&lt;/h1&gt;
&lt;h3&gt;组成&lt;/h3&gt;
&lt;p&gt;JWT是一个轻巧的规范。这个规范允许我们使用JWT在用户和服务器之间传递安全可靠的信息。规范的细节参考&lt;a href="https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32"&gt;jwt规范&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个JWT实际上就是一个字符串,看起来大概是这样的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoicGF5bG9hZCJ9.4twFt5NiznN84AWoo1d7KO1T_yoc0Z6XOpOVswacPZg&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JWT是一段被base64url编码过的字符序列（去除了尾部的“=”），并用点号分隔。它由三部分组成，头部(Header)、载荷(Payload)与签名(Signature)。&lt;/p&gt;
&lt;h3&gt;Header&lt;/h3&gt;
&lt;p&gt;Header 包含了一些元数据，至少会表明 token 类型以及 签名方法。比如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;typ&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;JWT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;quot;alg&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HS256&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;type&lt;/code&gt;: 必需。token 类型，JWT 表示是 JSON Web Token.
&lt;code&gt;alg&lt;/code&gt;: 必需。token 所使用的签名算法，可用的值在&lt;a href="http://tools.ietf.org/html/rfc7518#section-3.1"&gt;这里&lt;/a&gt;有规定。&lt;/p&gt;
&lt;h3&gt;Payload&lt;/h3&gt;
&lt;p&gt;Payload部分包含了一些跟这个 token 有关的重要信息。 JWT 标准规定了一些字段，节选一些:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iss&lt;/code&gt;: The issuer of the token，token 是给谁的&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sub&lt;/code&gt;: The subject of the token，token 主题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exp&lt;/code&gt;: Expiration Time。 token 过期时间，Unix 时间戳格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iat&lt;/code&gt;: Issued At。 token 创建时间， Unix 时间戳格式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jti&lt;/code&gt;: JWT ID。针对当前 token 的唯一标识&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了规定的字段外，可以包含其他任何 JSON 兼容的字段。&lt;/p&gt;
&lt;p&gt;Payload 示例:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;iss&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;exp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1435055117&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;user_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Payload加密后是安全可信的，所以我们可以将JWT设计为自说明、无状态的！&lt;/p&gt;
&lt;h3&gt;Signature&lt;/h3&gt;
&lt;p&gt;签名主要用于验证 token 是否有效，是否被篡改。 签名时可以加密算法进行签名，比如 HMAC SHA-256:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base64url_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;base64url_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hmacsha256&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;默认情况下Payload的内容并没有被加密,可以通过 base64url_decode(text) 的方式解码得到.如果要包含敏感信息的话，记得先将 Payload 的内容进行加密.&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;http://jwt.io&lt;/code&gt;来调试&lt;/p&gt;
&lt;h3&gt;安全性&lt;/h3&gt;
&lt;p&gt;上边说到默认情况下Payload的内容并没有被加密，所以你如果有加密需求，请使用pycrypto或是cryptography来加密。jwt的签名目的不是加密而是防止篡改.&lt;/p&gt;
&lt;h1&gt;demo&lt;/h1&gt;
&lt;h2&gt;pyjwt&lt;/h2&gt;
&lt;p&gt;我们来看一个Python实现的案例:&lt;a href="https://github.com/jpadilla/pyjwt"&gt;padilla/pyjwt&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; import jwt
&amp;gt;&amp;gt;&amp;gt; encoded = jwt.encode({&amp;#39;some&amp;#39;: &amp;#39;payload&amp;#39;}, &amp;#39;secret&amp;#39;, algorithm=&amp;#39;HS256&amp;#39;)
&amp;#39;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoicGF5bG9hZCJ9.4twFt5NiznN84AWoo1d7KO1T_yoc0Z6XOpOVswacPZg&amp;#39;

&amp;gt;&amp;gt;&amp;gt; jwt.decode(encoded, &amp;#39;secret&amp;#39;, algorithms=[&amp;#39;HS256&amp;#39;])
{&amp;#39;some&amp;#39;: &amp;#39;payload&amp;#39;}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从中我们可以发现，加解密的过程只在服务端发生（secret只有服务端存在），故而客户端拿到的是加密数据，其中携带的Payload是安全的，无法篡改。&lt;/p&gt;
&lt;h4&gt;Django实现&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/GetBlimp/django-rest-framework-jwt"&gt;django-rest-framework-jwt&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;附录：Base64&lt;/h1&gt;
&lt;p&gt;前边提到JWT使用base64来编码它的内容&lt;/p&gt;
&lt;p&gt;Base64是一种编码,并不是一种加密过程。&lt;/p&gt;
&lt;p&gt;关于Base64，维基百科已经说的很清楚了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Base64是一种基于64个可打印字符来表示二进制数据的表示方法,由于2的6次方等于64，所以每6个比特为一个单元，对应某个可打印字符。三个字节有24个比特，对应于4个Base64单元，即3个字节需要用4个可打印字符来表示...在Base64中的可打印字符包括字母A-Z、a-z、数字0-9，这样共有62个字符&lt;/p&gt;
&lt;p&gt;Base64常用于在通常处理文本数据的场合，表示、传输、存储一些二进制数据。包括MIME的email、在XML中存储复杂数据。&lt;/p&gt;
&lt;p&gt;编码后的数据比原始数据略长，为原来的4/3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;举个例子，编码&lt;code&gt;Man&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="base64.png" src="img/edx/auth/base64.png" /&gt;&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jwt.io/"&gt;jwt.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codelife.me/blog/2014/03/26/token-based-authentication-and-claims-based-identity/"&gt;基于Token的认证和基于声明的标识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mozillazg.com/2015/06/hello-jwt.html"&gt;JSON Web Token (JWT) 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.leapoahead.com/2015/09/07/user-authentication-with-jwt/#disqus_thread"&gt;八幅漫画理解使用JSON Web Token设计单点登录系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpadilla/pyjwt"&gt;jpadilla/pyjwt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 29 Dec 2015 00:00:00 +0000</pubDate><guid>tag:,2015-12-29:jwt-note.html</guid><category>edx</category></item><item><title>为什么CAS应该成为你的LMS的一部分</title><link>/use-CAS-in-your-LMS.html</link><description>&lt;h1&gt;缘起&lt;/h1&gt;
&lt;p&gt;这个标题是在呼应&lt;a href="http://edustack.org/"&gt;@MT&lt;/a&gt;的&lt;a href="http://edustack.org/2015/12/12/%E4%B8%BA%E4%BB%80%E4%B9%88lti%E5%BA%94%E8%AF%A5%E6%88%90%E4%B8%BA%E4%BD%A0%E7%9A%84elearning%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9F/"&gt;为什么LTI应该成为你的LMS的一部分？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://edustack.org/"&gt;@MT&lt;/a&gt;在上面这篇博文中写道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个独立的开发商不可能提供所有的学校和组织需要的学习工具。因此，从不同开发商整合多种工具的能力对于学习系统来说变得必须。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;@MT对学习系统的见解，我一直十分佩服，每次交流，都受益匪浅。很喜欢上边的这句话，一个系统在架构设计的时候，如果考虑到日后与其他系统协作的可能，那么这种考虑会让它变得灵活许多.保持一种开放的心态，而不是试图自己实现所有的功能，臆想所有的场景，揣度用户心理与习惯。&lt;/p&gt;
&lt;p&gt;开放性与对协作的友好，也许正是应对变化的最佳策略，这也是我喜欢Unix/Linux的原因，当然也是我很喜欢Open edX的原因。&lt;/p&gt;
&lt;p&gt;让系统保持开放性，增强与外部系统交互的能力，十分有利于一个系统的长期运行，而不是因为外部的变化而迅速被淘汰。&lt;/p&gt;
&lt;h1&gt;回顾&lt;/h1&gt;
&lt;p&gt;我们在上篇文章（&lt;a href="http://blog.just4fun.site/educational-information-information-island-authentication.html"&gt;教育信息化、信息孤岛与身份认证&lt;/a&gt;）里提到,CAS对于整合异构系统是有意义的，它解决了统一身份认证的问题，让用户在异构系统中穿梭感觉不到，一致性体验很好&lt;/p&gt;
&lt;p&gt;如果LMS支持CAS（CAS Client),那么它将可能轻易与其他系统整合，外部看去浑然一体,或者至少为将来的系统之间的整合铺平道路&lt;/p&gt;
&lt;h1&gt;CAS概述&lt;/h1&gt;
&lt;p&gt;CAS来自耶鲁大学,当前的最新版本未3.0，目前由&lt;a href="https://github.com/Jasig"&gt;Jasig&lt;/a&gt;组织维护，在美国高校中被广泛采用,因此Open edX默认支持的三种外部认证中就包括它(另外两种是SSL Client Certificates和Shibboleth，参考&lt;a href="https://github.com/edx/configuration/wiki/Setting-Up-External-Authentication"&gt;Setting Up External Authentication&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我们先摘录维基百科的一段介绍:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;集中式认证服务（英语：Central Authentication Service，缩写CAS）是一种针对万维网的单点登录协议。它的目的是允许一个用户访问多个应用程序，而只需提供一次凭证（如用户名和密码）。它还允许web应用程序在没有获得用户的安全凭据（如密码）的情况下对用户进行身份验证。“CAS”也指实现了该协议的软件包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们可能需要先解释下什么叫单点登录&lt;/p&gt;
&lt;h3&gt;单点登录&lt;/h3&gt;
&lt;p&gt;单点登录（Single Sign On），简称为 SSO，是目前比较流行的企业业务整合的解决方案之一。SSO的定义是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。&lt;/p&gt;
&lt;p&gt;单点登录一般的实现方案是通过使用ticket，认证系统能识别出用户是否登录，从而只需要登录一次就能访问所有受认证系统信任的应用。因此CAS只是实现SSO的一中协议。我们也可以用SAML，以及当前很流行的JWT来实现SSO&lt;/p&gt;
&lt;h1&gt;CAS原理&lt;/h1&gt;
&lt;p&gt;CAS由三部分组成，分别为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web Browser&lt;/li&gt;
&lt;li&gt;CAS Client&lt;/li&gt;
&lt;li&gt;CAS Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;协议过程如下如所示&lt;/p&gt;
&lt;p&gt;&lt;img alt="cas_diagram" src="img/edx/auth/cas_diagram.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;请求认证时序图为&lt;/p&gt;
&lt;p&gt;&lt;img alt="cas_diagram2" src="img/edx/auth/cas_diagram2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;上图中TGC表示&lt;code&gt;Ticket Granted Cookie&lt;/code&gt;,ST表示&lt;code&gt;Service Ticket&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在我最近的使用场景中，CAS Client是Open edX，其他的CAS Client还包括高校的其他系统。而CAS Server由校方提供，主要对接了教务数据库。&lt;/p&gt;
&lt;p&gt;这里陈述一下我之前的一个误解，不知道大家是否也存在，我以为CAS是无法跨域的，A,B两个应用得在同个主域下才可以（通过使用子域名），因为cookie不能跨域，其实是CAS是可以跨域的。&lt;/p&gt;
&lt;p&gt;由于CAS Server的存在，起了中介者的作用，使跨域成为可能。用户访问过应用A之后，已经和CAS Server建立了会话（CAS Server上有session，而浏览器记录了和这个域名相关的cookie），这时候用户访问应用B，假设没登陆应用B，则用户被重定向到CAS Server，由于访问A时建立了会话，所以将拿到tickit，之后的过程就和上边一样了。&lt;/p&gt;
&lt;p&gt;同时补充一点关于CAS Server的说明，CAS Server专注于认证，至于认证的依据是什么，CAS支持许多方案，包括数据库，LDAP等&lt;/p&gt;
&lt;p&gt;此外我们还应该知道，使用CAS不影响web应用内部的会话机制，应用A,B都有各自的session，这样一来CAS很像一个外插设备，不会干扰既有系统，我们需要做的只是在既有web应用内实现CAS Client，目前已经有许多开源实现，几乎可能整合到任何语言里&lt;/p&gt;
&lt;p&gt;而CAS Server也有成熟的开源实现，可以直接使用，诸如著名的&lt;a href="https://github.com/Jasig/cas"&gt;Jasig/cas&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Jasig/cas&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Jasig/cas"&gt;Jasig/cas&lt;/a&gt;是github上关注度最高的CAS Server开源实现，主页在&lt;a href="http://jasig.github.io/cas/"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Jasig/cas"&gt;Jasig/cas&lt;/a&gt;功能十分完备&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可插拔地支持LDAP, database等&lt;/li&gt;
&lt;li&gt;支持多种协议，诸如CAS, SAML, OAuth, OpenID&lt;/li&gt;
&lt;li&gt;之多跨平台的CAS Client，支持Java, .Net, PHP, Perl, Apache等&lt;/li&gt;
&lt;li&gt;集成了uPortal, Liferay, BlueSocket, Moodle, Google Apps等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多细节参考主页&lt;/p&gt;
&lt;h1&gt;附录：CAS实现&lt;/h1&gt;
&lt;p&gt;以下我们只关心开源实现&lt;/p&gt;
&lt;h3&gt;CAS Server&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jbittel/django-mama-cas"&gt;jbittel/django-mama-cas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KTHse/django-cas2"&gt;KTHse/django-cas2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cameronbwhite/Flask-CAS"&gt;cameronbwhite/Flask-CAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitron/django-cas-provider"&gt;Nitron/django-cas-provider&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Java&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Jasig/cas"&gt;Jasig/cas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bujiio/buji-pac4j"&gt;bujiio/buji-pac4j&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Unicon/cas-addons"&gt;Unicon/cas-addons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ruby&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rubycas/rubycas-server"&gt;rubycas-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbCAS/CASino"&gt;rbCAS/CASino&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/relevance/castronaut"&gt;relevance/castronaut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rbCAS/CASinoApp"&gt;rbCAS/CASinoApp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;CAS Client&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kstateome/django-cas"&gt;kstateome/django-cas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mingchen/django-cas-ng"&gt;mingchen/django-cas-ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nitron/django-cas-consumer"&gt;Nitron/django-cas-consumer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Java&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Jasig/java-cas-client"&gt;Jasig/java-cas-client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ruby&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/biola/rack-cas"&gt;biola/rack-cas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.NET&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Jasig/dotnet-cas-client"&gt;Jasig/dotnet-cas-client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PHP&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Jasig/phpCAS"&gt;Jasig/phpCAS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;搭建cas服务&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/apereo/cas"&gt;apereo/cas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apereo/cas/tree/dockerized-caswebapp"&gt;dockerized-caswebapp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wnameless/docker-cas_mysql/blob/master/Dockerfile"&gt;docker-cas_mysql&lt;/a&gt;:也是基于Jasig/cas，通过端口映射，docker内容器也能使用外部数据库&lt;ul&gt;
&lt;li&gt;lynx https://localhost:49163/cas/login，只能访问https&lt;/li&gt;
&lt;li&gt;需要直接映射端口，无法使用nginx代理和ngrok&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CenterForOpenScience/docker-library/blob/master/cas/docker-compose.yml"&gt;Central Authentication Server (CAS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sonnguyen.ws/install-jasig-cas-ubuntu-14-04/"&gt;INSTALL JASIG CAS IN UBUNTU 14.04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jasig.github.io/cas/development/protocol/CAS-Protocol-Specification.html"&gt;CAS Protocol 3.0 Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zh.wikipedia.org/wiki/%E9%9B%86%E4%B8%AD%E5%BC%8F%E8%AE%A4%E8%AF%81%E6%9C%8D%E5%8A%A1"&gt;集中式认证服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/loveis715/p/4491417.html"&gt;集成基于CAS协议的单点登陆&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/happyteafriends/article/details/7450104"&gt;CAS原理与配置-基于CAS的单点登陆的研究（上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.chinaunix.net/uid-7374279-id-5213207.html"&gt; CAS实现SSO单点登录原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 29 Dec 2015 00:00:00 +0000</pubDate><guid>tag:,2015-12-29:use-CAS-in-your-LMS.html</guid><category>edx</category></item><item><title>Open edX最新版评测与新特性探索(20151214)</title><link>/try-open-edx-master-20151214.html</link><description>&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;如果不出意外1月中旬，Open edX第四个稳定版Dogwood将发布，这个版本有许多吸引人的新特性，我们这边预计准备升级到这个稳定版，所以在正式发布之前，先踩踩坑，看看新特性&lt;/p&gt;
&lt;h1&gt;安装&lt;/h1&gt;
&lt;p&gt;安装过程和此前并没太大差别&lt;/p&gt;
&lt;p&gt;图方便的话，使用一步安装就行：&lt;code&gt;wget https://raw.githubusercontent.com/edx/configuration/master/util/install/sandbox.sh -O - | bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;你当然也可以分步安装，参考&lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;edX Ubuntu 12.04 64 bit Installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不过你必须保证国际网络通畅，即便如此你也很可能会出错，下面给出了我遇到的错误以及错误处理&lt;/p&gt;
&lt;h1&gt;问题处理&lt;/h1&gt;
&lt;p&gt;由于pip的升级，可能会遇到一些奇怪的问题，一般而言google一下都能解决的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql_config not found&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;解决方案：&lt;code&gt;sudo apt-get install libmysqlclient-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkg_resources.DistributionNotFound: paramiko&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;解决方案：&lt;code&gt;sudo pip install -U setuptools&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;探索&lt;/h1&gt;
&lt;h3&gt;已有服务&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo /edx/bin/supervisorctl status&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;analytics_api                    RUNNING   pid 1594, uptime 3:45:20
certs                            RUNNING   pid 2219, uptime 3:45:07
edx_notes_api                    RUNNING   pid 1597, uptime 3:45:20
edxapp:cms                       RUNNING   pid 6254, uptime 3:34:37
edxapp:lms                       RUNNING   pid 6253, uptime 3:34:37
edxapp_worker:cms_default_4      RUNNING   pid 1678, uptime 3:45:19
edxapp_worker:cms_high_1         RUNNING   pid 1656, uptime 3:45:20
edxapp_worker:cms_low_3          RUNNING   pid 1635, uptime 3:45:20
edxapp_worker:lms_default_3      RUNNING   pid 1650, uptime 3:45:20
edxapp_worker:lms_high_4         RUNNING   pid 1684, uptime 3:45:19
edxapp_worker:lms_high_mem_2     RUNNING   pid 1642, uptime 3:45:20
edxapp_worker:lms_low_1          RUNNING   pid 1665, uptime 3:45:19
forum                            RUNNING   pid 1591, uptime 3:45:20
insights                         RUNNING   pid 1690, uptime 3:45:19
notifier-celery-workers          RUNNING   pid 1593, uptime 3:45:20
notifier-scheduler               RUNNING   pid 1600, uptime 3:45:20
xqueue                           RUNNING   pid 1605, uptime 3:45:20
xqueue_consumer                  RUNNING   pid 1589, uptime 3:45:20
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到服务以及很完备了，当然和cypress区别不大,数据分析这块依然没有默认&lt;/p&gt;
&lt;h3&gt;基础组件&lt;/h3&gt;
&lt;p&gt;Django以及升级到1.8.7,这意味着migrate以及不依赖south了！&lt;/p&gt;
&lt;p&gt;&lt;img alt="django18.png" src="img/edx/try_master/django18.png" /&gt;&lt;/p&gt;
&lt;h3&gt;默认使用https&lt;/h3&gt;
&lt;p&gt;其中安装完成后明显的一项是nginx的配置发生了变化，强制使用https，所以默认情况下无法访问，简易的做法是注释&lt;code&gt;/edx/app/nginx/sites-available&lt;/code&gt;里的cms和lms&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#if ($scheme != &amp;quot;https&amp;quot;) {
#rewrite ^ https://$host$uri permanent;
#}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启nginx即可:&lt;code&gt;service nginx restart&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;证书&lt;/h3&gt;
&lt;p&gt;&lt;img alt="cert.png" src="img/edx/try_master/cert.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入Studio &amp;gt; &lt;code&gt;Advanced Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Certificates Display Behavior&lt;/code&gt; ,填入 &lt;code&gt;early_with_info&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Advanced Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Certificate Web/HTML View Enabled&lt;/code&gt; , 填入 &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入后台为这门课生成证书:&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms --settings aws ungenerated_certs -c course-v1:edX+DemoX+Demo_Course --insecure&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;搜索功能&lt;/h3&gt;
&lt;p&gt;&lt;img alt="1" src="img/edx/try_master/search1.png" /&gt;
&lt;img alt="2" src="img/edx/try_master/search2.jpg" /&gt;
&lt;img alt="3" src="img/edx/try_master/search3.png" /&gt;&lt;/p&gt;
&lt;p&gt;edx中的搜索功能及其强大，对于找知识点十分方便，可以搜索课程内部的各类数据，既可以针对某门课程进修内部资料搜索，也可以针对学生的所有选修课程，进行综合搜索&lt;/p&gt;
&lt;p&gt;使用场景参考这里&lt;a href="http://edx.readthedocs.org/projects/open-edx-learner-guide/en/latest/SFD_course_search.html"&gt;Searching the Course&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装edx-search: &lt;code&gt;pip install -e git+https://github.com/edx/edx-search.git@release-2015-11-17#egg=edx-search&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启用特性： 在*.env.json中FEATURES里加上 &lt;code&gt;"ENABLE_COURSEWARE_INDEX": true,&lt;/code&gt; 和&lt;code&gt;"ENABLE_LIBRARY_INDEX": true,&lt;/code&gt;,如果加上&lt;code&gt;"ENABLE_COURSE_DISCOVERY": true&lt;/code&gt;,那么首页的搜索功能也将被开启&lt;/li&gt;
&lt;li&gt;在Studio里， 点击&lt;code&gt;Reindex&lt;/code&gt;， 索引完成即可搜索，搜索基于elasticsearch&lt;/li&gt;
&lt;li&gt;在devstack中默认搜索功能，如果需要在生产环境里使用，可以参考devstack.py&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Enabling Custom Courses&lt;/h3&gt;
&lt;p&gt;&lt;img alt="ccx" src="img/edx/try_master/ccx.jpg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在*.env.json里添加&lt;code&gt;"CUSTOM_COURSES_EDX": true,&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;restart edxapp:&lt;/li&gt;
&lt;li&gt;进入Studio &amp;gt; &lt;code&gt;Advanced Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Enable CCX&lt;/code&gt; 设置为true&lt;/li&gt;
&lt;li&gt;在lms &amp;gt; &lt;code&gt;Instructor&lt;/code&gt; &amp;gt; &lt;code&gt;COURSE TEAM MANAGEMENT&lt;/code&gt;  选中&lt;code&gt;CCX Coaches&lt;/code&gt; ，添加用户即可&lt;/li&gt;
&lt;li&gt;migrate同步数据：&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms migrate --settings aws&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后在tab上就会出现&lt;code&gt;CCX Coaches&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Timed Exams&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;Advanced Settings&lt;/code&gt;里启用即可&lt;/p&gt;
&lt;p&gt;更多细节参考:  &lt;a href="http://edx.readthedocs.org/projects/open-edx-building-and-running-a-course/en/latest/course_features/timed_exams.html"&gt;Timed    Exams&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Using Open edX as an LTI Tool Provider&lt;/h3&gt;
&lt;p&gt;这是最令人兴奋的一块了， Open edX可以作为LTI Tool Provider, 如果你一直在关注这块，可以放手开始构建你想构建的体系啦.今天就暂时不写这块的细节了&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/open-edx-building-and-running-a-course/en/latest/course_features/lti/index.html"&gt;Using Open edX as an LTI Tool Provider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/configuration/lti/index.html"&gt;Configuring an edX Instance as an LTI Tool Provider&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 14 Dec 2015 00:00:00 +0000</pubDate><guid>tag:,2015-12-14:try-open-edx-master-20151214.html</guid><category>edx</category></item><item><title>Celery在Open edX中的使用</title><link>/Celery-on-Open-edx.html</link><description>&lt;p&gt;折腾Open edX趣味之一是它很杂。&lt;/p&gt;
&lt;p&gt;大量的工具和架构设计在这里都有具体的场景，于是从使用中学习，先跑起来，然后修修改改，如果系统没有坏掉，就继续探索。&lt;/p&gt;
&lt;p&gt;我很喜欢这种增量式学习，在这里以实战的方式学习linux command 、数据库、Python 、require.js、任务队列、缓存、REST、OAuth...&lt;/p&gt;
&lt;p&gt;今天是Celery&lt;/p&gt;
&lt;h1&gt;Celery入门&lt;/h1&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;我喜欢将Celery视为执行&lt;code&gt;异步任务&lt;/code&gt;的工具，这个观念让我容易把握它。&lt;/p&gt;
&lt;p&gt;Celery是一个专注于实时处理的任务队列，同时也支持任务调度。&lt;/p&gt;
&lt;p&gt;Celery 是用 Python 编写的，但协议可以用任何语言实现&lt;/p&gt;
&lt;h3&gt;典型使用场景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我们可能需要执行一段费时的任务, 这一时间远超用户能忍受的范围. 当这一任务不需要立即执行时, 我们就可以使用Celery在后台执行, 而不影响当前用户浏览网页&lt;/li&gt;
&lt;li&gt;定期执行某些任务，类似linux中定时任务：crontab. 比如每天半夜2点执行一下数据分析, 然后将数据储存到数据库中. 我们可以编写这一任务, 然后让Celery来定时完成执行任务.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述的任务即是&lt;code&gt;task&lt;/code&gt;,对应为一段python代码&lt;/p&gt;
&lt;h2&gt;基础概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;任务队列：是一种在线程或机器间分发任务的机制。&lt;/li&gt;
&lt;li&gt;Broker：中文意思是 &lt;code&gt;经纪人&lt;/code&gt; ，其实就是&lt;code&gt;消息队列&lt;/code&gt; ，用来发送和接受消息。这个Broker有几个方案可供选择：RabbitMQ，Redis（丢数据），数据库（不推荐）&lt;/li&gt;
&lt;li&gt;Backend:在Celery的配置中的一个配置项 CELERY_RESULT_BACKEND ，作用是保存结果和状态，如果你需要跟踪任务的状态，那么需要设置这一项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Broker和Backend可以都使用redis&lt;/p&gt;
&lt;h2&gt;一个案例&lt;/h2&gt;
&lt;h3&gt;安装依赖&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;pip install celery&lt;/li&gt;
&lt;li&gt;sudo apt-get install rabbitmq-server（启动:rabbitmq-server）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;创建tasks.py&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;broker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amqp://celery:celery@localhost//&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#edx环境中rabbitmq已经默认安装，用户名和密码均为celery:celery&lt;/span&gt;

&lt;span class="nd"&gt;@app.task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;before running x+y&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;启动一个worker&lt;/h3&gt;
&lt;p&gt;在tasks.py同级目录下执行：&lt;code&gt;celery -A tasks worker --loglevel=info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在生产环境中一般使用supervisor把它丢到后台运行&lt;/p&gt;
&lt;h3&gt;调度任务&lt;/h3&gt;
&lt;p&gt;使用ipython进入交互模式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; from tasks import add
&amp;gt;&amp;gt;&amp;gt; add.delay(1, 2)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我们可以在worker进程中看到&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[2015-11-23 16:13:26,341: INFO/MainProcess] Connected to amqp://celery:**@127.0.0.1:5672//
[2015-11-23 16:13:26,355: INFO/MainProcess] mingle: searching for neighbors
[2015-11-23 16:13:27,379: INFO/MainProcess] mingle: sync with 7 nodes
[2015-11-23 16:13:27,379: INFO/MainProcess] mingle: sync complete
[2015-11-23 16:13:27,387: WARNING/MainProcess] celery@vultr.guest ready.
[2015-11-23 16:13:30,303: INFO/MainProcess] Received task: tasks.add[af9f8162-5af0-4cd3-846b-4b6d4da3a4fc]
[2015-11-23 16:13:30,303: WARNING/Worker-1] before running x+y
[2015-11-23 16:13:30,304: INFO/MainProcess] Task tasks.add[af9f8162-5af0-4cd3-846b-4b6d4da3a4fc] succeeded in 0.000959093216807s: 3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上边的例子有返回值（执行结果），我们为了知道任务的执行结果和状态。需要设置backend。于是变为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;broker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amqp://celery:celery@localhost//&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;CELERY_RESULT_BACKEND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cache+memcached://127.0.0.1:11211/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;before running x+y&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;进入ipython&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from tasks import add
r=add.delay(1, 2)
r.ready() #False
r.result #为空,等十秒
r.ready() #True
r.result #3
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;分布式&lt;/h2&gt;
&lt;p&gt;Celery 系统可包含多个职程和中间人，以此获得高可用性和横向扩展能力。&lt;/p&gt;
&lt;p&gt;具体可参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.the5fire.com/take-a-glance-at-celery.html"&gt;Celery的安装和使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.celeryproject.org/en/latest/userguide/workers.html"&gt;Workers Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Celery在Open edX中的使用&lt;/h1&gt;
&lt;p&gt;在Open edX中，使用RabbitMQ作为Broker，默认的用户名和密码都为celery，&lt;/p&gt;
&lt;p&gt;用CACHES作为Celery的backend（"django.core.cache.backends.memcached.MemcachedCache"）&lt;/p&gt;
&lt;p&gt;具体的使用场景主要是各类耗时的任务,典型的有成绩单生成，发送大量提醒邮件，任务的源码分布在各个django app的tasks.py文件里，诸如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/lms/djangoapps/instructor_task/tasks.py"&gt;lms/djangoapps/instructor_task/tasks.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/cms/djangoapps/contentstore/tasks.py"&gt;cms/djangoapps/contentstore/tasks.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/lms/djangoapps/ccx/tasks.py"&gt;lms/djangoapps/ccx/tasks.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/lms/djangoapps/lti_provider/tasks.py"&gt;lms/lti_provider/tasks.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/tree/master/lms/djangoapps/instructor_task"&gt;lms/djangoapps/instructor_task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/openedx/core/djangoapps/credit/tasks.py"&gt;openedx/core/djangoapps/credit/tasks.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/common/djangoapps/third_party_auth/tasks.py"&gt;common/djangoapps/third_party_auth/tasks.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;celery的启用代码&lt;/h3&gt;
&lt;p&gt;参考&lt;code&gt;/edx/app/supervisor/conf.d/workers.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;形如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;command=/edx/app/edxapp/venvs/edxapp/bin/python /edx/app/edxapp/edx-platform/manage.py cms --settings=aws celery worker --loglevel=info --queues=edx.cms.core.low --hostname=edx.cms.core.low.%%h --concurrency=1
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/celery/celery"&gt;celery/celery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html"&gt;Using Celery with Django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.celeryproject.org/en/latest/index.html"&gt;Celery - Distributed Task Queue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.jinkan.org/docs/celery/"&gt;Celery - 分布式任务队列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.jinkan.org/docs/flask/patterns/celery.html"&gt;基于 Celery 的后台任务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.the5fire.com/take-a-glance-at-celery.html"&gt;Celery的安装和使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000"&gt;任务调度利器：Celery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;补遗&lt;/h1&gt;
&lt;h3&gt;相关工具与主题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.celeryproject.org/en/latest/userguide/monitoring.html"&gt;监控&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.celeryproject.org/en/latest/faq.html#how-do-i-get-the-result-of-a-task-if-i-have-the-id-that-points-there"&gt;get task result&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/76b8e2e89761c30ac7aa2fa5e8aca4dc35d9002b/lms/djangoapps/instructor_task/api_helper.py#L102"&gt;_update_instructor_task AsyncResult&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 23 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-23:Celery-on-Open-edx.html</guid><category>edx</category></item><item><title>关于Open edX[译文]</title><link>/about-Open-edX.html</link><description>&lt;p&gt;EdX是一个非盈利的在线组织，由哈佛大学和麻省理工大学发起。同时，成员包括大量的全球领先机构与联盟。EdX提供交互式的在线课程和慕课，内容来自全球最顶尖的大学或者机构。&lt;/p&gt;
&lt;p&gt;Open edX是驱动edX课程的开源平台。通过我们的开源协议，社区可以免费使用edX代码。机构可以拥有他们的Open edX平台实例，并上线他们自己的课程。教育工作者们可以扩充、利用这个平台来建立他们真正需要的学习工具。同时，开发人员可以将一些新的特性贡献到Open edX平台。&lt;/p&gt;
&lt;p&gt;我们的目标是建立一个生机勃勃的、国际化的社区，教育者以及技术开发者可以在其中随时随地分享有利于学生教育的创新思想。我们诚挚邀请您与我们一起探索Open edx，并加入我们这个正在迅速发展的组织中来。&lt;/p&gt;
&lt;h1&gt;常见问题（FAQ）&lt;/h1&gt;
&lt;h3&gt;什么是Open edx？&lt;/h3&gt;
&lt;p&gt;Open edx是一个免费、开源的课程管理系统，由edX发起。Open edX平台托管了全球范围内的大量大型开放式课程（慕课），并适用于小型课堂和培训。&lt;/p&gt;
&lt;h3&gt;Open edX包括哪些内容？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open edX Studio （课程制作平台）&lt;/li&gt;
&lt;li&gt;The Open edX LMS（学习管理系统）&lt;/li&gt;
&lt;li&gt;The capa_module XBlock， 一种基于LON-CAPA问题类型的实现&lt;/li&gt;
&lt;li&gt;The ORA2 XBlock， 一个开放性回答评估问题类型的实现&lt;/li&gt;
&lt;li&gt;论坛&lt;/li&gt;
&lt;li&gt;Open edx Insights（数据可视化组件）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;什么是Open edx Studio？&lt;/h3&gt;
&lt;p&gt;Studio 是一种可以帮助你在Open edx建立课程的工具。你可以使用Studio建立课程结构，并在其中添加课程内容，包括问题、视频以及给学习者的其他资源。&lt;/p&gt;
&lt;p&gt;同样，你可以使用Studio管理课程安排和课程团队，建立分级制度（评分），发布课程的每一个部分等等。&lt;/p&gt;
&lt;p&gt;你可以直接使用浏览器进入Studio。不需要其他任何额外的软件。&lt;/p&gt;
&lt;h3&gt;什么是 Open edX LMS？&lt;/h3&gt;
&lt;p&gt;LMS是一种帮助学习者进行课程内容学习的工具，课程内容包括视频，课本和一些问题，并且能确保课程的同步更新。Open edX LMS 同时提供论坛讨论和维基功能，学习者和课程团队成员可以在其中分享知识。&lt;/p&gt;
&lt;p&gt;对于课程团队成员来说， LMS 包括Instructor Dashboard ,可以通过它注册学习者，生成成绩单，以及管理正在进行的课程。&lt;/p&gt;
&lt;p&gt;你可以直接使用浏览器进入LMS。不需要其他任何额外的软件。&lt;/p&gt;
&lt;h3&gt;什么是XBlock？&lt;/h3&gt;
&lt;p&gt;XBlock是Open edX课程元素的组件架构。开发者创建XBlocks来创造一个独立的课程组件，该组件与其他组件在课程中无缝连接。&lt;/p&gt;
&lt;p&gt;例如，你可以建立XBlocks来展示一个特别的问题，或者是一系列的文本，或者是HTML内容。此外，XBlocks是可组合的：你可以建立XBlocks来呈现庞大的结构体系，例如一小结，一个章节，或者是一整个课程。通过组合这些服务于多种目的的Xblocks，从文本、视频到多选题单选题，我们可以构建复杂的、协作式的以及交互式的学习体验，课程团队可以创建丰富而有吸引力的课程内容。&lt;/p&gt;
&lt;p&gt;Xblocks的主要的优势之一是他们是插件式的.你所写的代码可以适用于任何edX平台或者其他的Xblock运行环境里，同时他们可被任何课程团队使用。&lt;/p&gt;
&lt;h3&gt;如何试用Open edX?&lt;/h3&gt;
&lt;p&gt;通过与Bitnami合作，edX 提供Open edX Cypress的虚拟机镜像。虚拟机镜像适用于大量的云平台，并且给你以受控方式运行Open edX。更多的信息请登录&lt;a href="https://open.edx.org/blog/open-edx-cypress-virtual-machine-images-now-available-thanks-bitnami"&gt;Open edX Cypress Virtual Machine Image Now Available Thanks to Bitnami&lt;/a&gt;博客。&lt;/p&gt;
&lt;p&gt;另一种方式是安装和运行Open edX Developer Stack或者Devstack.&lt;/p&gt;
&lt;p&gt;还有许多Open edX供应商提供了解决办案，可以查看&lt;a href="https://github.com/edx/edx-platform/wiki/List-of-Open-edX-service-providers"&gt;list in GitHub&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;什么是Devstack？我该如何运行？&lt;/h3&gt;
&lt;p&gt;Devstack 是为本地开发设计的一个虚拟机镜像。通过运行Devstack 
你可以提早发现和修复系统问题。Devstack简化某些生产环境下的配置为了使本地开发更加便利。例如，nginx和gunicorn 在Devstack被禁用；Devstack 用Django的runserver替代。更多的信息可以参考&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/install_options.html#open-edx-developer-stack"&gt;Open edX Developer Stack&lt;/a&gt;，在&lt;a href=""&gt;Installing ,Configuring ,and Running an Open edX Instance&lt;/a&gt;链接里&lt;/p&gt;
&lt;h3&gt;从哪里寻找文档？&lt;/h3&gt;
&lt;p&gt;你可以在&lt;a href="http://docs.edx.org/"&gt;docs.edx.org&lt;/a&gt;网站上找到所有的Open edX文档。在标题为Open edX Documentation:Latest Release，你可以找到关于Open edX开发者，服务提供者，课程团队还有学习者最新的指导说明。这个指导说明会根据加入到平台中的新特性不断地更新。同样你可以在该页面找到支持Open edX release的文档，最近的一篇名为Open edX Cypress Release。这部分的指导说明针对具体的发行版.&lt;/p&gt;
&lt;p&gt;当你使用Studio，可以通过帮助菜单找到文档。如果你在使用Open edX稳定版,帮助菜单会把你导向正确的课程创建指导手册。&lt;/p&gt;
&lt;p&gt;开发者还可以从源码库里上找到wiki页面，获得帮助。&lt;/p&gt;
&lt;p&gt;EdX正在持续地提升文档质量。Open edX文档团队欢迎您的反馈和意见。可以联系我们docs@edx.org。&lt;/p&gt;
&lt;h3&gt;我可以在哪里寻求帮助？&lt;/h3&gt;
&lt;p&gt;除了Open edX门户网站，开发者也可以加入许多不同的谷歌讨论组，可以提问或者与爱好者们、edX职员一起讨论。详情请见&lt;a href="https://open.edx.org/resources/community-discussions"&gt;Community Discussions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;原文&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://open.edx.org/about-open-edx"&gt;About Open edX&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 18 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-18:about-Open-edX.html</guid><category>edx</category></item><item><title>Open edX国内社区演示平台</title><link>/open-edx-cn-sandbox.html</link><description>&lt;h1&gt;公告&lt;/h1&gt;
&lt;p&gt;施工中...&lt;/p&gt;
&lt;p&gt;准备基于中旬的稳定版(Dogwood)来搭建，在等该版本的发布&lt;/p&gt;
&lt;h1&gt;演示平台概述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;由社区构建，开放给社区成员的一个sandbox平台。用以演示、研究与交流&lt;/li&gt;
&lt;li&gt;平台完全开放：开放注册、允许创建课程、公开track log给研究者、同时对外公布平台状态，以便大家研究真实环境、与提供性能优化建议&lt;/li&gt;
&lt;li&gt;基于Open edX最新稳定版构建（当前是Cypress）&lt;/li&gt;
&lt;li&gt;与国内社区开发进度保持同步&lt;/li&gt;
&lt;li&gt;接受用户在平台上展开真实课程，课程归创建者所有&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;目标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;展示社区版特性&lt;/li&gt;
&lt;li&gt;将数据开放给研究者，免去构建平台的繁琐&lt;/li&gt;
&lt;li&gt;积累在真实环境下的运行数据和经验&lt;/li&gt;
&lt;li&gt;考虑到各商业公司的隐私和不便，希望该平台能为开发者提供一个共同围绕的中心，用以交流和研究&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;平台参数&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu12.04&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;平台地址&lt;/h1&gt;
&lt;h1&gt;贡献者&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 18 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-18:open-edx-cn-sandbox.html</guid><category>edx</category></item><item><title>Open edX生态之Oppia</title><link>/open-edx-ecology-Oppia.html</link><description>&lt;p&gt;Open edX最令人激动之处，莫过于它的开放性和Xblock体系，由此带来了构建生态系统的可能。&lt;/p&gt;
&lt;p&gt;Oppia是google推出的一款在线教育工具，基于Python和AngularJS，完全开放源代码。该项目让用户创建在线互动活动，以便其他人参与学习。&lt;/p&gt;
&lt;p&gt;Oppia目前一共开源了两个项目，一个是他们的核心源码&lt;a href="https://github.com/oppia/oppia"&gt;oppia/oppia&lt;/a&gt;，另一个就是&lt;a href="https://github.com/oppia/xblock"&gt;oppia/xblock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过&lt;a href="https://github.com/oppia/xblock"&gt;oppia/xblock&lt;/a&gt;。我们可以把Oppia创作的课件集成到Open edX中&lt;/p&gt;
&lt;p&gt;这是个绝佳的案例，让我们看到Open edX的开放性带来的有趣局面&lt;/p&gt;
&lt;h1&gt;What&lt;/h1&gt;
&lt;p&gt;一图胜千言，我们先直观感受下Oppia&lt;/p&gt;
&lt;p&gt;首页
&lt;img alt="1" src="img/edx/oppia/oppia1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Oppia explorations
&lt;img alt="2" src="img/edx/oppia/oppia2.png" /&gt;&lt;/p&gt;
&lt;p&gt;下面是Oppia的自我介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Oppia is an online learning tool that enables anyone to easily create and share interactive activities (called 'explorations'). These activities simulate a one-on-one conversation with a tutor, making it possible for students to learn by doing and get feedback.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;explorations的叫法很是贴切，我们不妨截几张学习活动图&lt;/p&gt;
&lt;p&gt;&lt;img alt="4" src="img/edx/oppia/oppia3.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="5" src="img/edx/oppia/oppia4.png" /&gt;&lt;/p&gt;
&lt;h1&gt;Why&lt;/h1&gt;
&lt;p&gt;Oppia有着与Open edX完全不同的特质，Open edX定位为platform，而Oppia更像是一个tool，一个致力于提供交互式学习体验的工具。&lt;/p&gt;
&lt;p&gt;我将Oppia视为某种学习理论的技术实现。在这里可能是对反馈的强调&lt;/p&gt;
&lt;p&gt;如google所言&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;观看音乐家的表演视频，你永远都无法学会钢琴&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在线教育不应该仅仅局限于视频、音频和文字。在学习过程中，反馈是关键&lt;/p&gt;
&lt;p&gt;Oppia有趣还在于它不仅仅可以展示内容，还收集用户的互动数据。活动创建者可以根据这些反馈数据，来优化Oppia explorations（课件）。如果很多学员反馈学习方式不当，创建者就可以据此改良。&lt;/p&gt;
&lt;h1&gt;How&lt;/h1&gt;
&lt;h2&gt;安装Oppia&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/oppia/oppia#installation"&gt;oppia/oppia#installation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;制作Oppia explorations （类似Open edX中的课件）&lt;/h2&gt;
&lt;p&gt;&lt;img alt="8" src="img/edx/oppia/oppia8.png" /&gt;&lt;/p&gt;
&lt;h2&gt;集成到Open edX中&lt;/h2&gt;
&lt;p&gt;&lt;img alt="5" src="img/edx/oppia/oppia5.png" /&gt;
&lt;img alt="6" src="img/edx/oppia/oppia6.png" /&gt;
&lt;img alt="7" src="img/edx/oppia/oppia7.png" /&gt;&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;p&gt;如果我们将Oppia视为外部组件(它本身也可以是自治的)，将Open edX视为平台，这种视角能给我们很大的启发性。通过安装Open edX，我们获得了一个扩展性极强，功能完备的平台，而通过Xblock很容易将外部组件集成进来，那么针对具体的定制需求我们几乎都不必侵入Open edX本身。&lt;/p&gt;
&lt;p&gt;从Oppia中我们看到这种可能性，即便是一个学习理念的具体实现平台，也可以毫无费力地集成进来，那么理论上还有什么是无法集成的呢。还有什么是非侵入不可的呢&lt;/p&gt;
&lt;p&gt;如果这种隔离和集成是做得到的，那么edX就可以不断往通用平台发展，不断健壮与包容，健壮带来了稳定而开放性让它能接受所有新的教育理念（很可能是某种具体实现）&lt;/p&gt;
&lt;p&gt;最终成为一种生态体系。&lt;/p&gt;
&lt;h1&gt;补遗&lt;/h1&gt;
&lt;p&gt;值得一提的是，Oppia的文档写的非常好，好比下边的这个开发者引导&lt;a href="https://github.com/oppia/oppia/blob/develop/CONTRIBUTING.md"&gt;develop/CONTRIBUTING&lt;/a&gt;,可以借鉴到Open edX社区&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 18 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-18:open-edx-ecology-Oppia.html</guid><category>edx</category></item><item><title>Open edX定制开发与git rebase</title><link>/open-edx-custom-and-git-rebase.html</link><description>&lt;h1&gt;问题描述&lt;/h1&gt;
&lt;p&gt;折腾Open edX的过程中，我们得做许多自己的定制。&lt;/p&gt;
&lt;p&gt;将定制内容封装成xblock或django app是最好不过，迁移起来是方便的。可如果不得不侵入源码，诸如修改模板之类（这类事总会遇到）。那么如何在迁移edx的版本的过程中，同步自己定制的内容，是个很让人头疼的问题&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;这个问题我能想到的最佳方案是使用&lt;code&gt;模块化的思路&lt;/code&gt;和&lt;code&gt;版本管理系统&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关于模块化的思路，我在&lt;a href="http://wwj718.github.io/edx-development.html"&gt;edX开发相关&lt;/a&gt;里总结过，不妨搬过来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把代码尽量的模块化，定制的功能，可以的话，尽量整个丢到django app里&lt;/li&gt;
&lt;li&gt;尽量不要去入侵edx-platform源代码，尽可能采用非侵入式插件风格的定制
诸如主题的定制，你应当使用theme，而不是去改templates&lt;/li&gt;
&lt;li&gt;诸如要课程分类，添加属性，尽量不要去动课程模型，而是自建model，采用course_id关联到原有课程。而后整个功能模块丢到django app里。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至于如何利用&lt;code&gt;版本管理系统&lt;/code&gt;来方便我们进行版本变迁，此前并没细说，在此总结下&lt;/p&gt;
&lt;h1&gt;git层面的视角&lt;/h1&gt;
&lt;p&gt;让我们从git层面来看看我们面临的是怎样的问题&lt;/p&gt;
&lt;p&gt;我们首先fork了&lt;a href="https://github.com/edx/edx-platform"&gt;edx/edx-platform&lt;/a&gt;，于是我们有了一个自己的副本（远程仓库），对此有读写权限，在开发环境中，把它clone到本地，checkout出当前最新的稳定版&lt;a href="https://github.com/edx/edx-platform/tree/named-release/cypress.rc"&gt;named-release/cypress.rc&lt;/a&gt;，在此之上建立自己的开发分支，就可以开发我们想要的功能了，如果是团队协作，那么一般以{yourname}/{feature}命名分支，开发完成后，由负责人将新功能merge到生产分支(product)上&lt;/p&gt;
&lt;p&gt;至此问题都不大，小伙伴们其乐融融，齐头并进&lt;/p&gt;
&lt;p&gt;忽然有一天edX宣布说Dogwood版本正式发布，大家期待多时的数据分析功能也可本地使用了。那么多数人都会想升级版本。&lt;/p&gt;
&lt;p&gt;此后才发现，我们都有了许多历史负担，我们有了太多的个性化定制。如果最初没有对定制内容进行管理，那么下面就没你啥事啦，升级的痛苦会让你不愿尝试，尤其是升级从来就不只这一次&lt;/p&gt;
&lt;p&gt;如果你在前头有基于分支来开发定制，那么你只要用好git rebase就可以无痛迁移啦，定制升级两不误！&lt;/p&gt;
&lt;h1&gt;git rebase&lt;/h1&gt;
&lt;p&gt;在&lt;a href="https://github.com/edx/edx-platform"&gt;edx/edx-platform&lt;/a&gt;的wiki中，官方就有给大家打好预防针了，提醒大家以git rebase的方式来平滑迁移迁移内容：&lt;a href="https://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request"&gt;How to Rebase a Pull Request&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不过这显然不是一篇优秀的介绍文档，关于&lt;code&gt;git rebase&lt;/code&gt;，更好的资料是&lt;a href="https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA"&gt;Git 分支 - 变基&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;关于git rebase&lt;/h2&gt;
&lt;p&gt;当很多人同时在一个工程上工作的时候，一个拉取请求很快就会过时。一个&lt;code&gt;过时&lt;/code&gt;的拉取请求就是一个不再和开发主线保持同步的开发分支，它在合并到工程里面之前需要被更新.&lt;/p&gt;
&lt;p&gt;如果你的拉取请求已经过时了，在你的分支能被合并之前，你需要将你的分支变基到主分支最新版本。&lt;/p&gt;
&lt;p&gt;这个时候你就需要git rebase的帮助了&lt;/p&gt;
&lt;p&gt;一般来说git rebase就是在以上场合中被使用。&lt;/p&gt;
&lt;h2&gt;开始升级&lt;/h2&gt;
&lt;p&gt;同样的道理，我们也可以git rebase用于将开发分支迁移到不同的提交上(Dogwood/Cypress本质上仅仅是个tag而已，指向某次提交)。&lt;/p&gt;
&lt;p&gt;好比我们要将基于Cypress的wwj/course_category分支迁移到Dogwood版本上，只需要&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout wwj/course_category
git rebase product
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;过程中，可能要处理一些冲突，就像git merge中那样&lt;/p&gt;
&lt;p&gt;其中product是基于named-release/dogwood.rc,现在切换回&lt;code&gt;product&lt;/code&gt;,进行一次快进合并&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout product
git merge wwj/course_category
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同样的道理，其他特性分支也一并这样做，完成后，升级工作就完成啦！ &lt;br /&gt;
更爽在于，即便之后edX又发布了新版本，我们依然能够按照以上步骤无痛迁移！&lt;/p&gt;
&lt;p&gt;如果了解一些&lt;a href="https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF"&gt;远程分支&lt;/a&gt;相关的知识，这部分会更融通&lt;/p&gt;
&lt;p&gt;不得不承认，git几乎成为了源码管理/协作开发/升级部署的核心&lt;/p&gt;
&lt;p&gt;强大到令人叹为观止&lt;/p&gt;
&lt;h1&gt;资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request"&gt;How to Rebase a Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA"&gt;Git 分支 - 变基&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 17 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-17:open-edx-custom-and-git-rebase.html</guid><category>edx</category></item><item><title>Open edX每周简报(20151115)</title><link>/Open-edX-weekly-publication-20151115.html</link><description>&lt;h3&gt;&lt;a href="https://github.com/edx/edx-platform"&gt;edx-platform&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/44b409ebffc7f55e4479d1cd95d8651620d292a6"&gt;Added pagination on grade book&lt;/a&gt;:成绩单在线分页功能&lt;ul&gt;
&lt;li&gt;讨论细节：&lt;a href="https://github.com/edx/edx-platform/pull/10250"&gt;pull/10250:Added pagination on grade book.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/a62e403ed847753f14262dd0b32710c2514d390b"&gt;Search optimization&lt;/a&gt;：课程搜索最优化&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/78c6a38ca642efb5fc40db6ec3ee6945157f4f79"&gt;LMS: new UI for video player + AFontGarde iconfonts&lt;/a&gt;：视频播放器UI改版&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/pull/9974"&gt;pull/9974&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/cbc57aae6b3de70017e0bf4a2a0f26678ff61a36"&gt;enabled web certs by default&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/pull/10417"&gt;pull/10417&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href="https://github.com/edx/configuration"&gt;configuration&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration/commit/4b50944d59d121cb30e82c3fe585cf83efd9ca4a"&gt;CMS_COURSE_SHORTCUT_BASE_URL added to Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration/pull/2440/commits"&gt;edxapp on django 1.8 #2440&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-15:Open-edX-weekly-publication-20151115.html</guid><category>edx</category></item><item><title>基于docker构建Open edX云服务之过家家版</title><link>/build-paas-for-edx-dev.html</link><description>&lt;blockquote&gt;
&lt;p&gt;当某个系统能够正常运转时，不要打扰它；要以它为基础来构建。在自然体系中，改良就是在现存的调试好的系统上「打补丁」，原先的层级继续运作，甚至不会注意到其上还有新的层级   --《失控》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我喜欢将《失控》中的这段看作对增量式开发的隐喻&lt;/p&gt;
&lt;p&gt;这也是我顶喜欢的几种构建方式之一&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;前段时间在想，如果我们想提供Open edX的云服务(SaaS)，那么如何入手呢&lt;/p&gt;
&lt;h1&gt;场景&lt;/h1&gt;
&lt;p&gt;用户打开一个网页，就像在阿里云购买一台主机一样，选择主题，绑定域名，上传logo，填写网站名称...，然后点击提交，就生成了一个他自己的Open edX网站&lt;/p&gt;
&lt;h1&gt;联想&lt;/h1&gt;
&lt;p&gt;《失控》中的这段引导我将既有基础视为下层，在不扰乱它的情况下，构建新的层级，用户定制相关的逻辑构建在这一层，而下层对此一无所知。&lt;/p&gt;
&lt;p&gt;想到这一点时，我大为振奋。剩下的工作就是看看我们有哪些现有基础，然后寻找拼图中缺失的版块&lt;/p&gt;
&lt;p&gt;这是一种尝试、过家家式的解决方案，当对阐明原理是足够的，同时它也可以用于开发环境中，好比你完全可以把它融入公司内部的开发工作流里。对提升效率是有帮助的.我们最终至少能得到一种类似Heroku的私有云！&lt;/p&gt;
&lt;h1&gt;现有基础&lt;/h1&gt;
&lt;p&gt;我们目前都有哪些基础呢，我个人公司内部的技术基础，不方便透露。我们可以来看看edx国内社区都有哪些既有的基础。&lt;/p&gt;
&lt;p&gt;首先振奋人心的是，docker版本在实验环境中已经基本可用了，生产版本在我的实验环境中也展示出了可商用的趋势(功能都完备了)，但考虑到edx官方之后会来推进这块，不想跟官方撞车，这块暂时不推进&lt;/p&gt;
&lt;p&gt;同时，社区已经积累了足够的edx定制的经验，通过脚本可以对edx中的各个定制化要素予以定制，诸如主题和汉化甚至djangoapp和xblock都实现了脚本化。&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;在设计层面，我们将用户的定制视为信息收集业务，可以单独跑一个django app.收集到的信息，存入数据库，在构建脚本中获取到他们（实际是个传参的过程，数据注入），据此构建出定制化的Open edX示例&lt;/p&gt;
&lt;h1&gt;缺失的版块&lt;/h1&gt;
&lt;p&gt;那么我们还缺什么呢，缺的是一个开源的管理docker的工具，好在我们有github呀&lt;/p&gt;
&lt;p&gt;到github上一搜，发现了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/deis/deis"&gt;deis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shipyard/shipyard"&gt;shipyard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/progrium/dokku"&gt;dokku&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;appsembler公司的Open edX云平台使用的好像是&lt;a href="https://github.com/shipyard/shipyard"&gt;shipyard&lt;/a&gt;来管理docker，我最终决定采用&lt;a href="https://github.com/progrium/dokku"&gt;dokku&lt;/a&gt;，原因就不细说了，其中一点是它提供&lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;一样的操作方式，而Heroku是极佳的PaaS，许多的现成应用都可以直接部署到其上，十分合适用于构建公司内部的PaaS。用于自动化测试或是其他&lt;/p&gt;
&lt;h1&gt;Dokku是啥&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker powered mini-Heroku in around 100 lines of Bash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dokku是一个小型的PaaS平台，支持Python、Ruby、Node.js、Java、PHP、Clojure、Go。数据库之类的也都有插件，便利之际&lt;/p&gt;
&lt;p&gt;有了Dokku，我们可以使用简易的方式部署小型应用，将代码git push到对应的仓库就自动触发部署，当然也支持push Dockerfile的方式。我们最后采用的是后一种方式&lt;/p&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;在Ubuntu14.04 x64上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://raw.githubusercontent.com/progrium/dokku/v0.4.3/bootstrap.sh
sudo &lt;span class="nv"&gt;DOKKU_TAG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;v0.4.3 bash bootstrap.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装结束后。我们还要做以下工作:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;绑定域名（可选），如果不绑定的话，将以自动分配端口的形式访问&lt;/li&gt;
&lt;li&gt;上传受信任机器的ssh-key到dokku服务器上.dokku使用git来完成应用的部署，我们需要将我们的公钥上传到dokku上，使dokku能验证我们的身份。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/dokku
mv /home/dokku/VHOST /home/dokku/VHOST~
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt; &amp;gt; /home/dokku/HOSTNAME
sudo visudo &lt;span class="c1"&gt;#在最后写入&lt;/span&gt;
ubuntu  &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;NOPASSWD: ALL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cat ~/.ssh/id_rsa.pub | ssh ubuntu@server_ip "sudo sshcommand acl-add dokku wwj"&lt;/p&gt;
&lt;h1&gt;构建一般应用&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/wwj718/helloflask.git
git remote add qcloud_dokku dokku@127.0.0.1:helloflask
git push qcloud_dokku master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;开始构建
&lt;img alt="dokku1" src="img/edx/dokku/dokku1.png" /&gt;&lt;/p&gt;
&lt;p&gt;正在构建
&lt;img alt="dokku2" src="img/edx/dokku/dokku2.png" /&gt;&lt;/p&gt;
&lt;p&gt;构建完成
&lt;img alt="dokku3" src="img/edx/dokku/dokku3.png" /&gt;&lt;/p&gt;
&lt;h1&gt;构建edx_cypress_docker&lt;/h1&gt;
&lt;p&gt;一键式 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/wwj718/edx_cypress_docker.git
git remote add qcloud_dokku dokku@127.0.0.1:edx_cypress_docker
git push qcloud_dokku master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="dokku4" src="img/edx/dokku/dokku4.png" /&gt;&lt;/p&gt;
&lt;p&gt;至此整个拼图已经基本完整了&lt;/p&gt;
&lt;p&gt;Enjoying it&lt;/p&gt;
&lt;h1&gt;补遗&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/dokku-alt/"&gt;dokku-alt&lt;/a&gt;: dokku 的 fork 版本，它利用覆盖最稳定的使用案例及测试良好的插件来提供完整的解决文案&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 12 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-12:build-paas-for-edx-dev.html</guid><category>edx</category></item><item><title>Open edX每周简报(20151108)</title><link>/Open-edX-weekly-publication.html</link><description>&lt;p&gt;最近将在博客上开一个栏目，定期更新edx的最新动态，至于是一周一更还是两周一更还没定，更新时间大约是周末，这样官方在做的事和计划做的事，能及时被大家获悉&lt;/p&gt;
&lt;p&gt;@MT把广告词都想好了:)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修了好久的bug被官方修了；做了好久的功能官方做了。为了避免悲剧，请读每周edX简报&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;动机&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;了解官方的开发动态，避免与官方做着同样的事，导致撞车&lt;/li&gt;
&lt;li&gt;跟进新特性进展，提早获悉，帮助决策&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;形态&lt;/h1&gt;
&lt;p&gt;主要是在源码commit级别上跟进，对开发者帮助可能大些，当然也不限于此，一些激动人心的计划和资讯也会一并关注&lt;/p&gt;
&lt;h1&gt;简报内容&lt;/h1&gt;
&lt;p&gt;首先的一件大事是上个月edX第二届会议落幕，其中数据分析是此次的重头戏，更多的资讯，参考&lt;a href="https://open.edx.org/blog/open-edx-con-video-highlights"&gt;Open edX Con Video Highlights&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://github.com/edx/edx-platform"&gt;edx-platform&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/XBlock/pull/323"&gt;Adding message in XBlockSaveError Exception&lt;/a&gt;: 增强xblock的log功能，对调试友好&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/pull/10277"&gt;Reimplemented text changes for dashboard #10277&lt;/a&gt;:lms面板上更好的信息提示&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/709758e43371edd163ed87564d92ff6a4bd30b22"&gt;Hide Xblock due dates in studio for self-paced courses.&lt;/a&gt;:之前挺多人关注的自助式课程好像已经实现了？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/3a2c0e37dcfbcd5d50383050d86fdf84912e460e"&gt;Remove chat feature &lt;/a&gt;:这个特性之前可能有人关注，斯坦福最早发起的在lms中集成聊天功能，可用于讨论交流，目前正式被移除，大家就不用期待了，需要的话用第三方集成吧&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/792c3d93c1a938b913b7a7218f7f078cb795587e"&gt;Remove legacy MITX_FEATURES reference&lt;/a&gt;：我记得之前的一些配置文档中，有使用这个特性的，之后肯定会失效，不要惊讶&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/dc469ea5ecf1b9f415159ae3021b5817d0d7e011"&gt;Fix cert_status None. Add GeneratedCertificate to admin&lt;/a&gt;:哈哈@MT看过来，之后生成证书有admin面板啦，不需要命令行了&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/1f60e9696ffc05a8b24f2f6fc2b62fd1ecb4100f"&gt;Disabled auto enroll in ccx enrollment tab&lt;/a&gt;：ccx是个值得关注的新特性，用于定制课程属性&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/2f0e6635812588bb06188fb322a898d0841d4945"&gt;Use ugettext_noop instead of lambdas assigned to the underscore&lt;/a&gt;：这个问题坑了@MT好久，之后应该不会有注册页面学位下拉框汉化的问题了&lt;/li&gt;
&lt;li&gt;&lt;a href="a40d2b65d23d8b44f6b0a592cfbddb2231a1819d"&gt;Course Blocks App MA-1556&lt;/a&gt;:新的django app，提供高层次的接口，获取课程和用户信息&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/commit/069807644022854072938dd3f789cc54543e074c"&gt;Transformer: StudentViewTransformer&lt;/a&gt;：从中我们可以看到xmodule迁移到xblock的过程，很有学习价值，对学习xblock很有帮助&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;本周只关注核心库，之后对edx项目组中以下项目也会予以关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-proctoring"&gt;edx-proctoring&lt;/a&gt;:为考试而打造的子系统&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration"&gt;configuration&lt;/a&gt;:安装部署相关的库&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/programs"&gt;programs&lt;/a&gt;:这个新项目似乎是想用来构建学习流程，大体类似大学的培养方案了？&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-pipeline"&gt;edx-analytics-pipeline&lt;/a&gt;:数据分析核心库&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-submissions"&gt;edx-submissions&lt;/a&gt;：提交与得分的api，可用于构建外部题库系统&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-organizations"&gt;edx-organizations&lt;/a&gt;：平台机构相关&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-search"&gt;edx-search&lt;/a&gt;：课程搜索&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/event-tracking"&gt;event-tracking&lt;/a&gt;：学习行为跟踪，数据分析的基础&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-data-api"&gt;edx-analytics-data-api&lt;/a&gt;：开放数据接口&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/xblock-utils"&gt;xblock-utils&lt;/a&gt;：xblock辅助工具&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/XBlock"&gt;XBlock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sun, 08 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-08:Open-edX-weekly-publication.html</guid><category>edx</category></item><item><title>about Open edX course category</title><link>/about-Open-edX-course-category.html</link><description>&lt;p&gt;之后博客里Open edX相关的文章都用英文标题&lt;/p&gt;
&lt;p&gt;最近收到好些来自国外的邮件，由于Open edX比较新，我们又是Open edX重度用户，平时解决的问题，整个社区可能都用得到。前几天写了《Code Grader in Open edX》,大概是由于题目是英文的缘故，昨晚就收到了3封来自世界各地的邮件，咨询关于&lt;a href="http://wwj718.github.io/Code-Grader-in-Open-edX.html"&gt;Code Grader in Open edX&lt;/a&gt;的细节.其中一个妹子说道&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am interested on the topic you have discussed. I know the page is Chinese but thanks to google translate I could understand the page :) &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了方便他们搜索，题目之后都用英文，如果之后英文表达能力有长进，内容也用英文写好了（痛下决心学英语真是 T_T）&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;课程分类的问题，我去年有写过一篇文章:&lt;a href="http://wwj718.github.io/extend-edx-course.html"&gt;在edX中为course扩充字段&lt;/a&gt;,虽然目的是拓展edx的course模型，恰好举的例子是为课程添加分类。&lt;/p&gt;
&lt;p&gt;而后同@MT聊天时发现，课程分类竟是个刚需，对于社区版而言。后来课程分类有被添加到&lt;a href="https://github.com/edx/edx-platform/wiki/localization-and-development-in-china"&gt;localization and development in china&lt;/a&gt;，但迟迟没有人给出一个开箱可用的解决方案。&lt;/p&gt;
&lt;p&gt;当时年轻，在&lt;a href="http://wwj718.github.io/extend-edx-course.html"&gt;在edX中为course扩充字段&lt;/a&gt;中采用的方法十分dirty，侵入性很强，相比之下，反而是最初的设计优雅许多（我目前公司内部项目的课程分类，的确也是采用这个方案），我在那篇文章中有提及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自己写了个django app加入到lms/djangoapps里。app.models中有course_id字段&lt;/li&gt;
&lt;li&gt;自己写个首页&lt;/li&gt;
&lt;li&gt;在admin里管理首页的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写出来的效果大概是这样:&lt;/p&gt;
&lt;p&gt;后台管理：
&lt;img alt="course_category1" src="img/edx/edxcn/course_category1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;添加分类
&lt;img alt="course_category2" src="img/edx/edxcn/course_category2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;首页呈现
&lt;img alt="course_category3" src="img/edx/edxcn/course_category3.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;这里的核心观念是，把课程视为一种资源，course_id是课程的标识符。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;今天群里就这个问题，又讨论得挺激烈的&lt;/p&gt;
&lt;p&gt;@MT做了精彩的需求描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;课程分类的产品设计： 1 在django admin实现一级二级分类的管理   2 在studio实现对课程归属分类的管理  3 在首页实现对分类的筛选和展示&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我私下同@MT聊的时候，@MT谈到老师是否可以在studio中决定分类。这的确是一种更加去中心化的方式，属于产品形态的问题，虽然有趣，但我对此不了解，就不方便谈论了。&lt;/p&gt;
&lt;p&gt;技术上这两种方式可以共存，至于最后决定首页如何呈现，这是个产品层面的问题，就留给网站拥有者决定好了&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;下面就技术层面谈谈思路&lt;/p&gt;
&lt;p&gt;这是我接触edx不久所做的设计，很粗糙，槽点很多orz. 理念背景需要交代下，我当时把课程视为被资源实体，是内容管理的对象，我把首页视为一个内容管理平台（记得edx开发团队有在google group里说过edx.org也是这样设计的），网站的拥有者决定了课程的归属（分类）&lt;/p&gt;
&lt;p&gt;终于到我比较擅长的技术问题上来啦，主场作战哈哈哈，如果你熟悉django的话，你知道只要写一个model来定义课程类，这个类至少需要以下2个关键属性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;course_id&lt;/li&gt;
&lt;li&gt;cource_category(外键)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后至于做几级分类，随你的便，因为cource_category仅仅是个外键！&lt;/p&gt;
&lt;p&gt;然后把这个model注册到admin里，就可以在django admin里管理课程啦！&lt;/p&gt;
&lt;p&gt;最后只需要把model传递到首页的模板里，加点调料（css/js），就可以新鲜出炉啦！&lt;/p&gt;
&lt;p&gt;事后我反思这个设计，发现其实可以采用&lt;a href="https://github.com/django-mptt/django-mptt"&gt;django-mptt&lt;/a&gt;,这样分类的层级会更加自由和动态。&lt;/p&gt;
&lt;p&gt;相比具体的实现，我更关注架构上的问题，上面的这种做法采用的是django app的方式，而不是我最初那篇文章提到的侵入式，这样一来，与edx的耦合度很低，完全可以通过一个脚本，以插件的形式自动化插入到edx中，这样就不存在升级的问题。因为我们首页课程分类与edx的关联仅有course_id！&lt;/p&gt;
&lt;p&gt;松耦合，高内聚是我特别喜欢的设计口味&lt;/p&gt;
&lt;p&gt;edx是冲着构建生态去的，就这点而言，具体的实现很可能随时会被替换，更好的实现会层出不穷，为了能随时升级和替换组件，低耦合是多么诱人的特性呀。&lt;/p&gt;
&lt;p&gt;它让我们可以随时甩下历史负担，迎接未来不是么&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;p&gt;我觉得还是有必要理清一下，课程分类和&lt;a href="https://github.com/edx/edx-search"&gt;edx-search&lt;/a&gt;各自的定位问题。我此前一直将课程分类视为网站拥有者的权利，是一种引导用户和呈现资源的方式。尽管它也可以帮助用户找到资源（这两者并不矛盾）&lt;/p&gt;
&lt;p&gt;如果你关心的是如何帮助用户（student），方便用户查找需要的内容，那么&lt;a href="https://github.com/edx/edx-search"&gt;edx-search&lt;/a&gt;可能更适合你。此外@OVER同学之前同我说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我想在edx上实现课程推荐这个想法...就是根据用户的兴趣，和学习记录进行一些分析，然后给出推荐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也是个很有意思的想法。&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;补充&lt;/h1&gt;
&lt;p&gt;多媒体教育技术研究会的崔老师提到:(崔老师十分热心于社区的工作)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;课程分类教育部有规定的，有专业-课程-学分的表，就是一个专业由20门课程组成，课程又分abcd类，每个课程根据类别决定课程的课程，a类2个-3个学期，我试想：设定条件下，老师选项，自动生成课程分类表，网页形式显示出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们今后其实可以把国内教育的分类体系预置进去，这个基础性的工作很适合社区来做。目前已经收录到&lt;a href="https://github.com/edx/edx-platform/wiki/localization-and-development-in-china"&gt;localization and development in china&lt;/a&gt;中&lt;/p&gt;
&lt;p&gt;有兴趣的小伙伴一起来吧:)&lt;/p&gt;
&lt;p&gt;康忙北鼻来次GO&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate><guid>tag:,2015-11-04:about-Open-edX-course-category.html</guid><category>edx</category></item><item><title>在社区版中集成youku插件(作为社区协作的一个演示案例)</title><link>/install-youkuXblock-into-edx.html</link><description>&lt;h1&gt;目的&lt;/h1&gt;
&lt;p&gt;这篇文章将以一个真实的案例，演示如何基于github，展开社区协作。&lt;/p&gt;
&lt;p&gt;案例为:在社区版中集成&lt;a href="https://github.com/wwj718/youkuXBlock"&gt;youkuXblock&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;开发环境（社区版edx_cypress_docker）&lt;/h1&gt;
&lt;p&gt;开发环境的安装和使用,可以参考我此前的文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wwj718.github.io/edx-cypress-cn-install-and-use.html"&gt;Open edX中国社区Docker版安装使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wwj718.github.io/edx-cypress-cn-for-deveiopment.html"&gt;使用Open edX中国社区Docker版来开发调试edX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ps:使用devstack开发的同学，大体协作流程是相同的，仅是最初进入到开发环境的入口不同&lt;/p&gt;
&lt;h1&gt;fork社区版的源码&lt;/h1&gt;
&lt;p&gt;登录你的github账户，fork社区版的源码:&lt;a href="https://github.com/easy-edx/edx-platform"&gt;easy-edx/edx-platform&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;fork完之后，你得到一个自己的镜像。好比我的演示用户为edxDev（用户名），那么我将得到：
&lt;img alt="fork" src="img/edx/edxcn/fork.png" /&gt;&lt;/p&gt;
&lt;h1&gt;workflow&lt;/h1&gt;
&lt;p&gt;下边我们就进入了正式开发流程&lt;/p&gt;
&lt;h2&gt;克隆自己的源码镜像&lt;/h2&gt;
&lt;p&gt;git clone -b edx_cn/cypress_cn https://github.com/edxDev/edx-platform.git&lt;/p&gt;
&lt;h2&gt;建立自己的功能分支&lt;/h2&gt;
&lt;p&gt;分支命名：规则为&lt;yourname&gt;/&lt;feature&gt;，feature应当能代表分支的功能/特性,在这里，我的用户名为edxDev，feature是为了添加youku支持，于是命名为edxDev/youkuXblock&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; edx-platform
git checkout -b edxDev/youkuXblock edx_cn/cypress_cn
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样你就建立了基于edx_cn/cypress_cn（社区版）的分支了&lt;/p&gt;
&lt;h2&gt;开始开发&lt;/h2&gt;
&lt;h3&gt;将开发环境跑起来&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo docker run -itd -p 5000:5000 -p 5010:5010 -p 2022:22 -v ~/edx-platform:/edx/app/edxapp/edx-platform-dev wwj718/edx_cypress_docker:1.21&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注：当前edx_cypress_docker最新的社区版为1.21（感谢edustack贡献的完整语言包！）&lt;/p&gt;
&lt;h3&gt;进入开发环境，做开发&lt;/h3&gt;
&lt;p&gt;使用ssh或是docker exec进入开发环境&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/edx/app/edxapp/edx-platform-dev/edx_cn_feature&lt;/code&gt;中添加新特性（采用脚本式的安装）。至于如何修改比较自由，原则是尽量不要侵入源码，而采取增量式的改变&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/edx/app/edxapp/edx-platform-dev/edx_cn_feature&lt;/code&gt;目录下增加&lt;code&gt;youkuXblock_install.sh&lt;/code&gt;,内容为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/edx/app/edxapp/venvs/edxapp/bin/pip install git+https://github.com/wwj718/youkuXBlock.git
sed &lt;span class="s1"&gt;&amp;#39;/&amp;quot;FEATURES&amp;quot;: {/a\        &amp;quot;ALLOW_ALL_ADVANCED_COMPONENTS&amp;quot;: true,&amp;#39;&lt;/span&gt;  -i /edx/app/edxapp/cms.env.json
&lt;span class="c1"&gt;#sudo /edx/bin/supervisorctl restart edxapp:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;chmod +x /edx/app/edxapp/edx-platform-dev/edx_cn_feature/youkuXblock_install.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;之后执行&lt;code&gt;./youkuXblock_install.sh&lt;/code&gt;，特性添加完毕&lt;/p&gt;
&lt;p&gt;调试后发现一切正常，就可以提交代码到社区啦&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku.png" src="img/edx/edxcn/youku.png" /&gt;&lt;/p&gt;
&lt;h3&gt;提交修改&lt;/h3&gt;
&lt;p&gt;在docker里的话，先做好git user配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  git config --global user.email &lt;span class="s2"&gt;&amp;quot;xxx@qq.com&amp;quot;&lt;/span&gt;
  git config --global user.name &lt;span class="s2"&gt;&amp;quot;edxDev&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用git提交代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform-dev
git add /edx/app/edxapp/edx-platform-dev/edx_cn_feature/youkuXblock_install.sh
git commit -m &lt;span class="s1"&gt;&amp;#39;add youkuXblock_install.sh to use youku in edx&amp;#39;&lt;/span&gt;
git push origin edxDev/youkuXblock:edxDev/youkuXblock
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;在github上发起pull requests（请求合并到社区）&lt;/h3&gt;
&lt;p&gt;&lt;img alt="pull_request1.png" src="img/edx/edxcn/pull_request1.png" /&gt;
&lt;img alt="pull_request2.png" src="img/edx/edxcn/pull_request2.png" /&gt;
&lt;img alt="pull_request3.png" src="img/edx/edxcn/pull_request3.png" /&gt;&lt;/p&gt;
&lt;p&gt;最后提交就行啦&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 28 Oct 2015 00:00:00 +0000</pubDate><guid>tag:,2015-10-28:install-youkuXblock-into-edx.html</guid><category>edx</category></item><item><title>about Open edx distributed</title><link>/about-open-edx-distributed.html</link><description>&lt;blockquote&gt;
&lt;p&gt;premature optimization is the root of all evil. --Donald Knuth&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;过早优化&lt;/h2&gt;
&lt;p&gt;似乎每个准备用Open edX的人，在安装尚未完成，用户还没注册，workflow还未确定，就开始担忧，如何分布式部署Open edX，以便能大规模应用呢？就好像明天用户就要破百万，后天完成第二轮融资，不提早考虑好，万一火了，多对不起排着队上课的同学呀&lt;/p&gt;
&lt;p&gt;哈哈，没有开刷各位的意思，我自己一开始就是这样的（羞涩脸）&lt;/p&gt;
&lt;p&gt;尽早考虑架构的问题当然是好的。毕竟一旦下手，生米煮成熟饭，再要调整就难了。&lt;/p&gt;
&lt;h2&gt;Why not？&lt;/h2&gt;
&lt;p&gt;不是说未雨绸缪有多不好，毕竟大家都觉得有备无患嘛，只是在Open edX中你不需要过早地担忧这些，Open edX采用了SOA风格的架构，RESTful风格的接口，基本是天生支持分布式的，这些都可以动态调整，初期不予考虑并但不影响你后期的扩展，而且你起步阶段还会敏捷许多&lt;/p&gt;
&lt;p&gt;而一来就考虑分布式的问题，分散了精力不说，更要命的是：你其实不知道系统的瓶颈在哪里，你没有真实的使用场景，怎么知道压力在那里呢？&lt;/p&gt;
&lt;p&gt;是分离数据库好呢，还是多搞几台缓存服务器好，如果优化mongo的话，cluster又该准备几个。&lt;/p&gt;
&lt;p&gt;而后你发现，真实使用场景是在学校内部使用，学生集中在晚上8-9点，主要是看视频，而你折腾了半天mysql主从数据库，考虑了读写分离，同步延迟等问题，不是在闹么。。。读数据的压力缓存完全能应对，而视频流服务又独立于edx。&lt;/p&gt;
&lt;p&gt;脱离实际使用场景的优化，都是耍流氓。&lt;/p&gt;
&lt;h2&gt;定心丸&lt;/h2&gt;
&lt;p&gt;edX的架构风格有很浓郁的SOA风味，核心组件的接口都是RESTful风格。几乎天然为分布式做足了考虑。它允许我们敏捷得构建起服务，等到负载压力大了，找到瓶颈后再动态调整来应对。&lt;/p&gt;
&lt;p&gt;对REST架构的扩展性有兴趣的同学，可以去翻阅Roy Thomas Fielding博士那篇著名的博士论文。那篇论文有中文版，我用了整个周末才读完 orz&lt;/p&gt;
&lt;p&gt;ps：Roy这篇论文的结尾处，引用的一段，动人极了，二度引用以提升逼格&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们每个人在内心深处都怀有一个梦想:希望创造出一个鲜活的世界,一个宇宙。那些
处在我们生活中心、受到过专业训练的架构师们,都怀有这样的渴望:在某一天,在某个地方,因为某种原因,我要创造出一个不可思议的、美丽的、夺人心魄的场所,在那里人们可以漫步,可以梦想,历经很多世纪生生不息。  ——Christopher Alexander&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原文更是动人&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Each one of us has, somewhere in his heart, the dream to make a living world, a universe. Those of us who have been trained as architects have this desire perhaps at the very center of our lives: that one day, somewhere, somehow, we shall build one building which is wonderful, beautiful, breathtaking, a place where people can walk and dream for centuries.  -- Christopher Alexander &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;实验&lt;/h2&gt;
&lt;p&gt;为了让大家宽心，我这两天在青云上做了如下实验&lt;/p&gt;
&lt;p&gt;先以原生部署的方式，部署在单机（就是按官方wiki的的&lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;这个文档&lt;/a&gt;部署），而后假设用户暴涨, 然后我发现，这群人不知怎么搞的，读写很频繁，数据库压力挺大的，我最好把数据库分离出来。&lt;br /&gt;
话说用户暴涨的话，我不是该出任CEO迎娶白富美去了么，哪还写代码啊摔，哎想想还有点紧张。&lt;/p&gt;
&lt;p&gt;我说干就干，参考了&lt;a href="https://github.com/edx/configuration/wiki/Preparation-For-Production-Launch"&gt;Preparation For Production Launch&lt;/a&gt;，在两台独立的机器上部署好了数据库，给与了相关的用户权限（为了方便，我都用了root，习惯不好囧），允许了外部访问，又在青云里设好了防火墙，之后修改了原先机器上（跑着edxapp）的配置，主要是各个*.auth.json文件里DATABASES相关的配置，指向新的数据库位置&lt;/p&gt;
&lt;p&gt;然后把原先的数据导出再倒入到新数据库中，restart edxapp，一切OK！&lt;/p&gt;
&lt;p&gt;主从数据库之类的还没做，参考网上的资料和&lt;a href="https://github.com/dhasthagheer/edx-distributed-configuration"&gt;这个项目&lt;/a&gt;，做主从数据库是不麻烦的&lt;/p&gt;
&lt;p&gt;分离其他组件就更容易了，基本就是用ansible在相关机器上跑对应role，然后再运行edxapp的机器上配置好ip:port。把服务视为无状态为好，这样最有利于分离，而后分布&lt;/p&gt;
&lt;h2&gt;关于瓶颈&lt;/h2&gt;
&lt;p&gt;前边我们提到，在真实的环境中找到性能瓶颈是关键，这是漏水最多的短板。&lt;/p&gt;
&lt;p&gt;说来惭愧，这里分享下前车之鉴，我自己维护的平台，由于手写了比较多mongo查询，性能瓶颈都集中在这里了。达到过500%的负载，我也不知道这是什么鬼（服务器性能很好）&lt;/p&gt;
&lt;p&gt;通过合适地采用缓存，完全消解了这个问题&lt;/p&gt;
&lt;p&gt;所以，如果你写了很多自己的逻辑，尤其是大量与数据库打交道，做好缓存，做好缓存，做好缓存，重要的话说三遍。&lt;/p&gt;
&lt;p&gt;就酱&lt;/p&gt;
&lt;h2&gt;未来&lt;/h2&gt;
&lt;p&gt;如果你真的关心分布式，我是说真的关心，而不是玩票，好比你有一堆硬件，一堆资金，想据此提供云服务，有几个项目你可能会感兴趣&lt;/p&gt;
&lt;p&gt;edX的分布式，当前官方只给出基于亚马逊云的分布式部署方案。此外也有几个很引人注目的项目，一个是官方开始倾注力量到docker中，这个可以在roadmap和黑客马拉松中看到进展和计划。当然不只是官方，appsembler团队在这条路上已经走得很远了，他们甚至尝试性地给出了基于kubernetes的方案&lt;/p&gt;
&lt;p&gt;另一个是&lt;a href="https://www.hastexo.com/hastexo-integrates-openstack-open-edx"&gt;这里&lt;/a&gt;，hastexo正在将OpenStack技术用于Open edX&lt;/p&gt;
&lt;p&gt;好啦 ，收尾， 看书去&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 27 Oct 2015 00:00:00 +0000</pubDate><guid>tag:,2015-10-27:about-open-edx-distributed.html</guid><category>edx</category></item><item><title>Code Grader in Open edX</title><link>/Code-Grader-in-Open-edX.html</link><description>&lt;p&gt;友情提醒： 坑多慎入 : )&lt;/p&gt;
&lt;p&gt;但作为geek的你会很喜欢这部分的&lt;/p&gt;
&lt;p&gt;首先感谢@DatoChan分享的经验 ：）&lt;/p&gt;
&lt;h1&gt;External Grader&lt;/h1&gt;
&lt;p&gt;说Code Grader之前，我们先来说说&lt;a href="http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/exercises_tools/external_graders.html#external-grader"&gt;External Grader&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;这是个啥&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;An external grader is a service that receives learner responses to a problem, processes those responses, and returns feedback and a problem grade to the edX platform. You build and deploy an external grader separately from the edX platform.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一种用于评分的服务，这种评分机制作为独立的服务，接收学生的答题答案，对答案做出评估后，返回评估结果给edX platform.&lt;/p&gt;
&lt;p&gt;技术上的实现主要用到了消息队列，在edx中被封装为&lt;a href="https://github.com/edx/xqueue"&gt;xqueue&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;想象空间&lt;/h3&gt;
&lt;p&gt;这里充满想象的空间，好比可以使用自然语言的成果去自动对答案进行评分，又好比学生可以提交图片，平台使用图片识别去解读它。以及我们稍后介绍的，Code Grader，用于评估学生提交代码的正确性&lt;/p&gt;
&lt;p&gt;如此一来edx platform就可以专注在教育领域，把评分规则交由其他服务，通过这种机制 ，edx platform提高了内聚性的同时，带来了极大的扩展性&lt;/p&gt;
&lt;p&gt;有没有觉得似曾相似，没错，就是《Unix编程艺术》鼓励的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do one thing and do well&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而后通过组件之间的协作和组合来解决问题，而不是提供大而全的方案。&lt;/p&gt;
&lt;p&gt;edx的开放性和可扩展性无疑给大家提供了五彩缤纷的可能&lt;/p&gt;
&lt;h3&gt;Code Grader&lt;/h3&gt;
&lt;p&gt;Code Grader只是External Grader的一个特例，特殊在学生提交的答案是代码，Grader的任务是运行和评估代码的正确性。edX实现了xserver，这是个用以评估Python代码的服务，如果需要，我们可以打造评估任意代码的服务，技术上无非是在Grader里调用解释器而已。&lt;/p&gt;
&lt;p&gt;好想写一个用于评估Hy的Grader呀.(Hy是Python实现的Lisp,与python几乎无缝对接)&lt;/p&gt;
&lt;p&gt;这种拓展性对计算机相关的课程极有助益，学生可以在线编写运行代码，而不必搭建自己的开发环境了。如果涉及数据库的话，后台都可以一并搭建好，学生有一个浏览器即可，而不必折腾一整套编程环境&lt;/p&gt;
&lt;p&gt;Talk is cheap，just do it&lt;/p&gt;
&lt;p&gt;External Grader的核心机制是&lt;a href="https://github.com/edx/xqueue"&gt;xqueue&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;xqueue&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;XQueue defines an interface for the LMS to communicate with external grader services.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一语道尽&lt;/p&gt;
&lt;p&gt;流程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The learner either enters code or attaches a file for a problem, then selects Check.&lt;/li&gt;
&lt;li&gt;The external grader pulls the code from XQueue.&lt;/li&gt;
&lt;li&gt;The external grader runs the tests that you created on the code.&lt;/li&gt;
&lt;li&gt;The external grader returns the grade for the submission, as well as any results in a string, to XQueue.&lt;/li&gt;
&lt;li&gt;The XQueue delivers the results to the edX Learning Management System.&lt;/li&gt;
&lt;li&gt;The learner sees the problem results and the grade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在grader_payload可以指名test.py.如：{"grader": "ps02/bisect/grade_bisect.py"}&lt;/p&gt;
&lt;p&gt;通过输入输出来测试！在前后输入连个变量，然后测试结果。可以参考官方的示例&lt;/p&gt;
&lt;p&gt;可以直接使用py.test:&lt;a href="https://github.com/dagg/OpenEdxExternalGrader/blob/master/PythonGrader.py"&gt;PythonGrader.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是test case的问题。要求必须写成函数接受参数？写测试用例  每一个test&lt;/p&gt;
&lt;h1&gt;安装与配置&lt;/h1&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;p&gt;依据&lt;a href="https://github.com/antoviaque/xserver-grader"&gt;xserver-grader&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先在&lt;code&gt;playbooks/edx_sandbox.yml&lt;/code&gt;中加入&lt;code&gt;- xserver&lt;/code&gt;到&lt;code&gt;nginx_sites&lt;/code&gt;和&lt;code&gt;roles&lt;/code&gt;中。&lt;/li&gt;
&lt;li&gt;编辑&lt;code&gt;roles/xserver/defaults/main.yml&lt;/code&gt;,加入&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XSERVER_GRADER_DIR: &amp;quot;{{ xserver_data_dir }}/data/content-test-xserver&amp;quot;
XSERVER_GRADER_SOURCE: &amp;quot;https://github.com/antoviaque/xserver-grader.git&amp;quot;
XSERVER_LOCAL_GIT_IDENTITY: &amp;quot;{{ secure_dir }}/files/git-identity&amp;quot;
XSERVER_GIT_IDENTITY: &amp;quot;YOUR_GITHUB_NAME&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之后重新执行ansible-playbook来安装xserver.安装完成后执行&lt;code&gt;sudo /edx/bin/supervisorctl status&lt;/code&gt;应该能看到xserver依据跑起来了。内部端口为8050，外部端口为18050.&lt;/p&gt;
&lt;h3&gt;配置&lt;/h3&gt;
&lt;p&gt;编辑&lt;code&gt;/edx/app/xqueue/xqueue.env.json&lt;/code&gt;，添加你自己的queuename，指名它的url&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;LOCAL_LOGLEVEL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;INFO&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;LOGGING_ENV&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sandbox&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;LOG_DIR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/edx/var/logs/xqueue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;RABBIT_HOST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;S3_BUCKET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sandbox-bucket&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;S3_PATH_PREFIX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sandbox-xqueue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;SYSLOG_SERVER&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;XQUEUES&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;certificates&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;edX-DemoX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:8050&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;java-queue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://localhost:1710&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;open-ended&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;open-ended-message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;test-pull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;XQUEUE_WORKERS_PER_QUEUE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在studio中添加题目，类似以下这种&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;problem&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Embedded Code Box&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;markdown=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;null&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;text&amp;gt;&lt;/span&gt;Blabla&lt;span class="nt"&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;coderesponse&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;textbox&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;70&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;python&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;tabsize=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;codeparam&lt;/span&gt; &lt;span class="na"&gt;queuename=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;edX-DemoX&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;initial_display/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;answer_display&amp;gt;&lt;/span&gt;the definitive answer&lt;span class="nt"&gt;&amp;lt;/answer_display&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;grader_payload&amp;gt;&lt;/span&gt;{&amp;quot;grader&amp;quot;: &amp;quot;grade.py&amp;quot;}&lt;span class="nt"&gt;&amp;lt;/grader_payload&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/codeparam&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/coderesponse&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/problem&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;保存，发布，就该就好啦&lt;/p&gt;
&lt;p&gt;更具体的说明，参考&lt;a href="http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/exercises_tools/external_graders.html#create-a-code-response-problem"&gt;create-a-code-response-problem&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;填坑&lt;/h1&gt;
&lt;p&gt;有个坑叫&lt;code&gt;DatabaseError: (1406, "Data too long for column 'lms_callback_url' at row 1")&lt;/code&gt; ，解决方案为：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mysql
use xqueue&lt;span class="p"&gt;;&lt;/span&gt;
alter table queue_submission modify lms_callback_url VARCHAR &lt;span class="o"&gt;(&lt;/span&gt;255&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此外不要在studio中CHECK你的答案，否则会说&lt;code&gt;Error: No grader has been set up for this problem.&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Run it&lt;/h3&gt;
&lt;p&gt;&lt;img alt="xserver1.png" src="img/edx/xqueue/xserver1.png" /&gt;
&lt;img alt="xserver2.png" src="img/edx/xqueue/xserver2.png" /&gt;&lt;/p&gt;
&lt;h3&gt;重启服务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;sudo /edx/bin/supervisorctl restart xqueue_consumer&lt;/li&gt;
&lt;li&gt;sudo /edx/bin/supervisorctl restart xqueue&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Java Grader&lt;/h1&gt;
&lt;p&gt;参考这里就好：&lt;a href="https://github.com/huynq55/java-grader"&gt;java-grader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="javaGrader.png" src="img/edx/xqueue/javaGrader.png" /&gt;&lt;/p&gt;
&lt;p&gt;其他语言的实现，可以参考这个，或是xserver&lt;/p&gt;
&lt;h1&gt;设计原则&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/exercises_tools/external_graders.html#building-an-external-grader"&gt;Building an External Grader&lt;/a&gt;给出了构建自己的External Grader的指导原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scale&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Reliability and Recovery&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;2016.01.19更新&lt;/p&gt;
&lt;p&gt;至于代码judge部分，建议使用专业的judge开源项目，比如为acm竞赛准备的评测组件&lt;/p&gt;
&lt;p&gt;以及这个工具也很棒:&lt;a href="https://github.com/prasmussen/glot"&gt;glot&lt;/a&gt;，他们提供了一套完备的解决方案&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;2016.04.19更新&lt;/p&gt;
&lt;p&gt;使用pytest测试&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pytest.org/latest/getting-started.html#getstarted"&gt;py.test&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/easy-edx/OpenEdxExternalGrader/blob/master/PythonGrader.py"&gt;OpenEdxExternalGrader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个作为测试的方法，而执行的环境放在docker里，采用-v来映射目录。让代码执行完&lt;/p&gt;
&lt;p&gt;采用&lt;a href="https://github.com/docker/docker-py"&gt;docker-py&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;采用subprogrem 还是 docker-py，先写出要运行的命令，然后再调用&lt;/p&gt;
&lt;h1&gt;用后即删&lt;/h1&gt;
&lt;h1&gt;包括文件和docker 容器&lt;/h1&gt;
&lt;p&gt;sudo docker run --rm -v /tmp/test:/pydata kleetaurus/compilebox python /pydata/test.py&lt;/p&gt;
&lt;p&gt;如何使用远程的docker&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-partner-course-staff/en/latest/exercises_tools/external_graders.html#external-grader"&gt;External Grader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/xqueue"&gt;xqueue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/xserver"&gt;xserver&lt;/a&gt;*  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!topic/edx-code/-xMxjjg6uv8"&gt;How to configure Xqueue and External grader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huynq55/java-grader"&gt;java-grader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/xserver/blob/master/protocol.rst"&gt;protocol.rst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate><guid>tag:,2015-10-23:Code-Grader-in-Open-edX.html</guid><category>edx</category></item><item><title>使用Open edX中国社区Docker版来开发调试edX</title><link>/edx-cypress-cn-for-deveiopment.html</link><description>&lt;blockquote&gt;
&lt;p&gt;If you build it, they will come&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Open edX中国社区Docker版，以下简称edx_cypress_docker。&lt;/p&gt;
&lt;p&gt;关于如何安装使用，可以参考&lt;a href="http://wwj718.github.io/edx-cypress-cn-install-and-use.html"&gt;Open edX中国社区Docker版安装使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该版本为两个目的服务：&lt;code&gt;演示和开发&lt;/code&gt;，演示部分在以上文章中谈了，这篇文章谈论如何使用它来开发调试edX&lt;/p&gt;
&lt;h2&gt;预备技能&lt;/h2&gt;
&lt;p&gt;假设你已经基本熟悉&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python(Django/Mako)&lt;/li&gt;
&lt;li&gt;js(backbone.js/requre.js)&lt;/li&gt;
&lt;li&gt;Linux(Ubuntu)&lt;/li&gt;
&lt;li&gt;edX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;edX开发调试概述&lt;/h2&gt;
&lt;p&gt;调试edX是一件门槛不算低的事，而且这件事与使用docker或是vagrant或是直接在生产环境里调试关系不大，因为调试的方法和思路都是相似的，具体细节在&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack"&gt;edX Developer Stack&lt;/a&gt;中有谈及&lt;/p&gt;
&lt;p&gt;使用Pycharm来调试的小伙伴可以看这里:&lt;a href="https://github.com/edx/edx-platform/wiki/Setting-up-PyCharm-for-edX-development"&gt;Setting up PyCharm for edX development&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;社区计划&lt;/h3&gt;
&lt;p&gt;为了降低edX的开发门槛，让新手在上手时能顺畅些，不必过多地关心细节，我们想借用&lt;code&gt;一键运行&lt;/code&gt;的概念，把一些常用的调试指令做成可执行文件，例如将start lms的复杂指令&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform-dev/manage.py lms runserver 0.0.0.0:5000 --settings devstack&lt;/code&gt;变为&lt;code&gt;/edx_dev/start_lms&lt;/code&gt;,诸如此类，让新手在入手之初，能快速把开发环境跑起来，待熟悉之后再关注细节，我们想为新手打造一个抽象屏障，使其快速进入edx的开发状态。类似的便捷指令我们正在持续添加中。&lt;/p&gt;
&lt;p&gt;类似的工作刚刚起步，也期待你的反馈，收集大家都需要怎样的帮助&lt;/p&gt;
&lt;h3&gt;Why Docker&lt;/h3&gt;
&lt;p&gt;之所以使用docker来作为开发环境，主要基于以下原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相比vagrant更轻量&lt;/li&gt;
&lt;li&gt;只要docker pull和git clone 就可以快速在Windows/Linux/Mac/云平台立马开始开发。&lt;/li&gt;
&lt;li&gt;由于消耗资源少（1G单核便可），你甚至可以将系统写到U盘中，这样一来，可以把整个edx开发环境装到一个U盘里&lt;/li&gt;
&lt;li&gt;docker镜像层级的概念，十分利于迭代开发，而且易于分发和团队协作&lt;/li&gt;
&lt;li&gt;面向未来，edX官方的开发环境也在往docker迁移，此次edX国际会议（第二次）中有一个黑客马拉松的主题便是这个&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;使用Docker来开发的思路&lt;/h3&gt;
&lt;p&gt;以下内容可能有些抽象，可以先跳过直接看后边的Workflow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最核心的观念是把docker容器当做edx的运行环境，将其视为无状态最好。&lt;/li&gt;
&lt;li&gt;习惯vim/ipython调试的同学直接ssh进去就好&lt;/li&gt;
&lt;li&gt;使用Pycharm开发的话，只需要把&lt;a href="http://blog.jetbrains.com/pycharm/2013/03/how-pycharm-helps-you-with-remote-development/"&gt;remote Python interpreters&lt;/a&gt;指向docker中的&lt;code&gt;/edx/app/edxapp/venvs/edxapp/bin/python&lt;/code&gt;即可&lt;/li&gt;
&lt;li&gt;开发过程中代码的变化和保存使用git来管理，源代码在docker外部，使用-v参数把目录挂载到容器里&lt;/li&gt;
&lt;li&gt;开发过程中如果需要改变容器本身(改变系统环境)，则将这些变化写入Dockerfile中，build出新版本的image，分发给团队成员(push,pull)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Workflow&lt;/h3&gt;
&lt;p&gt;以我自己为例，在Ubuntu14.04中开发，系统中已经安装好docker了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;克隆(复制)你定制的edx-platform源码到docker所在机器里（mac/windows用户的docker可能在虚拟机里）&lt;ul&gt;
&lt;li&gt;示例：&lt;code&gt;git clone -b edx_cn/cypress_cn https://github.com/easy-edx/edx-platform.git ~/edx-platform&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将开发环境跑起来&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;sudo docker run -itd -p 5000:5000 -p 5010:5010 -p 2022:22 -v ~/edx-platform:/edx/app/edxapp/edx-platform-dev wwj718/edx_cypress_docker:1.11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入到docker中（docker exec）,启动lms/cms,多任务的适合建议使用tmux来管理窗口&lt;/li&gt;
&lt;li&gt;示例: &lt;code&gt;/edx_dev/start_lms&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开发调试完成后，回到docker宿主机，将edx-platform代码的变更提交到远程仓库&lt;/li&gt;
&lt;li&gt;cd   ~/edx-platform&lt;/li&gt;
&lt;li&gt;git add .&lt;/li&gt;
&lt;li&gt;git commit -m 'your message'&lt;/li&gt;
&lt;li&gt;git push origin edx_cn/cypress_cn:edx_cn/cypress_cn&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;社区协作&lt;/h3&gt;
&lt;h5&gt;思路&lt;/h5&gt;
&lt;p&gt;以edx-platform源码库和edx_cypress_docker为中心，接受bug提交，Issues，Pull requests&lt;/p&gt;
&lt;h5&gt;源码库&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/easy-edx/edx-platform"&gt;edx-platform源码库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wwj718/edx_cypress_docker"&gt;edx_cypress_docker源码库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;qq群&lt;/h5&gt;
&lt;p&gt;106781163&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate><guid>tag:,2015-10-17:edx-cypress-cn-for-deveiopment.html</guid><category>edx</category></item><item><title>Open edX中国社区Docker版安装使用</title><link>/edx-cypress-cn-install-and-use.html</link><description>&lt;blockquote&gt;
&lt;p&gt;当开始建设社区的时候，你需要拿出一个像样的承诺。程序此时并不需要特别好，它可以简陋、有错、不完整，文档可以少得可怜。但它至少要做到：(a)能运行，(b)让潜在的合作开发者相信，这个软件在可预见的未来，能演变成一个非常棒的东西  --《大教堂与集市》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;国内社区&lt;/h1&gt;
&lt;p&gt;Open edX中国社区的计划和愿景可以参考这里：&lt;a href="https://github.com/edx/edx-platform/wiki/localization-and-development-in-china"&gt;Open edX中国社区&lt;/a&gt;。  &lt;/p&gt;
&lt;p&gt;第一次筹备会计划：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;社区将发布基于Docker的Open edX国内版本（开发演示版）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Open edX开发研究群qq号为：106781163。 欢迎大家前来交流,一起来完善社区版本 : ）&lt;/p&gt;
&lt;h1&gt;版本概述&lt;/h1&gt;
&lt;p&gt;当前版本使用docker发布，跨平台，支持Windows/Linux/Mac，用于开发与演示，基于appsembler发布的edx-lite-cypress。&lt;/p&gt;
&lt;p&gt;当前版本对系统要求很低，在Ubuntu14.04下实验，使用的机器为单核1G内存，运行流畅&lt;/p&gt;
&lt;p&gt;社区计划以小版本的方式迭代优化。目前已支持以下特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同时支持演示和开发，默认开启lms，studio，forum&lt;/li&gt;
&lt;li&gt;支持脚本化化主题切换（一条指令切换到自适应主题，对移动端访问友好），&lt;/li&gt;
&lt;li&gt;默认配置好邮件服务&lt;/li&gt;
&lt;li&gt;默认汉化&lt;/li&gt;
&lt;li&gt;支持ssh登录(root:edx)，方便开发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计划增加的特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增强开发环境，大体效果参考&lt;a href="http://wwj718.github.io/docker-edx-birch-1.html"&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;更全面的本地化，包括CDN的优化等&lt;/li&gt;
&lt;li&gt;解决国内使用edX可能遇到的坑&lt;/li&gt;
&lt;li&gt;更多的Xblock组件，诸如优酷，腾讯云视频组件&lt;/li&gt;
&lt;li&gt;更多的主题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目细节和进展欢迎围观:&lt;a href="https://github.com/wwj718/edx_cypress_docker"&gt;edx_cypress_docker&lt;/a&gt;,欢迎提issue,欢迎pull requests，欢迎fork&lt;/p&gt;
&lt;p&gt;docker hub地址为&lt;a href="https://hub.docker.com/r/wwj718/edx_cypress_docker/"&gt;wwj718/edx_cypress_docker&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Install&lt;/h1&gt;
&lt;p&gt;由于docker跨平台，你可以任意在Windows/Linux/Mac下安装社区版的edX&lt;/p&gt;
&lt;p&gt;目前提供两种安装方式，分别适合一般用户和开发者。我们将一般用户定义为：无需技术背景，将edx视为教学工具的人员&lt;/p&gt;
&lt;h2&gt;方法一（一般用户）&lt;/h2&gt;
&lt;h3&gt;安装docker&lt;/h3&gt;
&lt;p&gt;国内用户建议从&lt;a href="http://get.daocloud.io/"&gt;daocloud&lt;/a&gt;里安装docker&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_cypress" src="/img/edx/docker/edx_cypress1.jpeg" /&gt;&lt;/p&gt;
&lt;h3&gt;拉取edx_cypress_docker镜像&lt;/h3&gt;
&lt;p&gt;考虑到国内网络，你可以从&lt;a href="http://45.32.248.32/edx_cypress_docker.1.11.tar.gz"&gt;这里&lt;/a&gt;下载docker镜像（edx_cypress_docker_1.11.tar.gz），之后load到docker中使用即可。感谢@netwalk0r同学将镜像上传到群共享&lt;/p&gt;
&lt;p&gt;docker load &amp;lt; /path/to/edx_cypress_docker_1.04.tar.gz&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/path/to/edx_cypress_docker_1.04.tar.gz&lt;/code&gt;为edx_cypress_docker_1.04.tar.gz的路径&lt;/p&gt;
&lt;p&gt;Docker Toolbox已经做好了主机和虚拟机的共享工作，所以使用起来十分顺手&lt;/p&gt;
&lt;p&gt;关于docker的入门可以看这里&lt;a href="http://dockerpool.com/static/books/docker_practice/introduction/README.html"&gt;docker_practice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;至此edx安装完成&lt;/p&gt;
&lt;h3&gt;方法二（开发者）&lt;/h3&gt;
&lt;p&gt;安装docker的方法和方法一相同。&lt;/p&gt;
&lt;p&gt;网络顺畅的小伙伴们，建议直接使用从docker hub上拉取，这样能保证得到的是最新版本。镜像地址为&lt;a href="https://hub.docker.com/r/wwj718/edx_cypress_docker/"&gt;wwj718/edx_cypress_docker&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;一条指令拉取：sudo docker pull wwj718/edx_cypress_docker:1.05&lt;/p&gt;
&lt;p&gt;考虑到国内网络，建议使用docker的国内加速服务.可以参考这里&lt;a href="https://dashboard.daocloud.io/runtimes/new"&gt;daocloud&lt;/a&gt;（需要先注册daocloud）&lt;/p&gt;
&lt;h1&gt;运行edX&lt;/h1&gt;
&lt;p&gt;也只需要一条指令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo docker run -itd -p 80:80 -p 2022:22 -p 18010:18010 wwj718/edx_cypress_docker:1.05&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;edX启动需要10秒左右的时间，片刻之后即可访问,enjoy it :)&lt;/p&gt;
&lt;p&gt;其中lms（学生端）在80端口，studio（课程制作）在18010端口，ssh端口在2022&lt;/p&gt;
&lt;p&gt;ssh用户名:root,密码:edx&lt;/p&gt;
&lt;p&gt;edx登录用户名：staff@example.com,密码：edx&lt;/p&gt;
&lt;h3&gt;如果端口冲突&lt;/h3&gt;
&lt;p&gt;如果以上端口被占用，也可以自行指定端口或使用随机分配端口:
&lt;code&gt;sudo docker run -itd  -P wwj718/edx_cypress_docker:1.05&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;更新&lt;/h1&gt;
&lt;p&gt;假设你想使用edx移动端的主题，需要更新到1.05版，只需要执行以下一条指令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo docker pull wwj718/edx_cypress_docker:1.05&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最新版本将更新在这里&lt;a href="https://github.com/wwj718/edx_cypress_docker"&gt;edx_cypress_docker&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;FQA&lt;/h1&gt;
&lt;h3&gt;为何使用docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用户友好，出于演示和尝试目的使用edX的普通用户不需费力安装，拉取就可用&lt;/li&gt;
&lt;li&gt;开发者友好，方便团队协作，方便迭代开发，缩短开发周期&lt;/li&gt;
&lt;li&gt;未来趋势，官方devstack正往docker迁移&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;mac下开发&lt;/h3&gt;
&lt;p&gt;感谢@自定义 同学的分享，他把mac下的docker配置已经写得清晰完整了，我就不重复写这部分了.参考 &lt;a href="http://www.cnblogs.com/exnihilo/p/4891346.html"&gt;Mac OS下Boot2Docker的网络映射设置&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate><guid>tag:,2015-10-13:edx-cypress-cn-install-and-use.html</guid><category>edx</category></item><item><title>edX feature之microsite</title><link>/edx-feature-microsite.html</link><description>&lt;h1&gt;使用场景&lt;/h1&gt;
&lt;p&gt;使用edX做平台的公司/机构可能有这样的一种需求：希望划分出二级域名给子机构使用，或是给合作伙伴使用。好比某高校建了一个edX平台，它的各个学院(或是兄弟院校)在其上可以有独立的主页（可以独立设计，展示各自的课程），独立的logo，独立的sitename，独立的支付账号，而所有资源又最终汇总到大平台下，资源之间可以共享。&lt;/p&gt;
&lt;p&gt;这个场景对形成联盟和生态还是挺诱人的  不是吗&lt;/p&gt;
&lt;h1&gt;特性&lt;/h1&gt;
&lt;p&gt;以下东西是各个子域可以定制的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首页定制&lt;/li&gt;
&lt;li&gt;平台名称&lt;/li&gt;
&lt;li&gt;站点小图标：favicon&lt;/li&gt;
&lt;li&gt;二级域名前缀&lt;/li&gt;
&lt;li&gt;平台logo&lt;/li&gt;
&lt;li&gt;邮件发送者&lt;/li&gt;
&lt;li&gt;支付账号&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多的定制项可以查看&lt;a href="https://github.com/edx/edx-platform/wiki/Microsites-Theming#django-configuration-settings-used-specifically-for-microsites"&gt;Django configuration settings used specifically for microsites.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;配置示范&lt;/h1&gt;
&lt;p&gt;在lms.env.json的"FEATURES"中加上&lt;code&gt;"USE_MICROSITES": true,&lt;/code&gt;.同时在lms.env.json的主体中加上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;MICROSITE_CONFIGURATION&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;domain_prefix&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;university&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;SITE_NAME&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sitename&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;logo_image_url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://x.x.x/head-logo.gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;course_org_filter&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;course_about_show_social_links&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;MICROSITE_ROOT_DIR&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/edx/app/edxapp/edx-microsite&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所有的静态文件应该在MICROSITE_ROOT_DIR目录下（页面定制过程很像theme）。以MICROSITE_CONFIGURATION中的key为子目录名，在此为test1。目录中的内容参考&lt;a href="https://github.com/edx/edx-platform/tree/master/common/test/test_microsites/test_microsite"&gt;test_microsite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此外，我在github上找到一个&lt;a href="https://github.com/jazkarta/edx-microsite-manager/blob/master/edx_microsite_manager/models.py"&gt;edx_microsite_manager&lt;/a&gt;，可以在admin里编辑管理MICROSITE_CONFIGURATION&lt;/p&gt;
&lt;h1&gt;Run&lt;/h1&gt;
&lt;p&gt;配置好之后，记得&lt;code&gt;sudo /edx/bin/supervisorctl status edxapp:&lt;/code&gt;和&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Full-Stack#compile-assets-manually"&gt;Compile assets manually&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;现在就可以访问子域啦：test1.mydomain.com&lt;/p&gt;
&lt;p&gt;&lt;img alt="microsite1" src="img/edx/microsite/microsite1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="microsite2" src="img/edx/microsite/microsite2.jpeg" /&gt;&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/Microsites-Theming"&gt;Microsites Theming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jazkarta/edx-microsite-manager/blob/master/edx_microsite_manager/models.py"&gt;edx_microsite_manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate><guid>tag:,2015-10-09:edx-feature-microsite.html</guid><category>edx</category></item><item><title>edX feature之microsite</title><link>/edx-feature-microsite.html</link><description>&lt;h1&gt;使用场景&lt;/h1&gt;
&lt;p&gt;使用edX做平台的公司/机构可能有这样的一种需求：希望划分出二级域名给子机构使用，或是给合作伙伴使用。好比某高校建了一个edX平台，它的各个学院(或是兄弟院校)在其上可以有独立的主页（可以独立设计，展示各自的课程），独立的logo，独立的sitename，独立的支付账号，而所有资源又最终汇总到大平台下，资源之间可以共享。&lt;/p&gt;
&lt;p&gt;这个场景对形成联盟和生态还是挺诱人的  不是吗&lt;/p&gt;
&lt;h1&gt;特性&lt;/h1&gt;
&lt;p&gt;以下东西是各个子域可以定制的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首页定制&lt;/li&gt;
&lt;li&gt;平台名称&lt;/li&gt;
&lt;li&gt;站点小图标：favicon&lt;/li&gt;
&lt;li&gt;二级域名前缀&lt;/li&gt;
&lt;li&gt;平台logo&lt;/li&gt;
&lt;li&gt;邮件发送者&lt;/li&gt;
&lt;li&gt;支付账号&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多的定制项可以查看&lt;a href="https://github.com/edx/edx-platform/wiki/Microsites-Theming#django-configuration-settings-used-specifically-for-microsites"&gt;Django configuration settings used specifically for microsites.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;配置示范&lt;/h1&gt;
&lt;p&gt;在lms.env.json的"FEATURES"中加上&lt;code&gt;"USE_MICROSITES": true,&lt;/code&gt;.同时在lms.env.json的主体中加上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;MICROSITE_CONFIGURATION&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;domain_prefix&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;university&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;SITE_NAME&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sitename&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;logo_image_url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://x.x.x/head-logo.gif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;course_org_filter&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;course_about_show_social_links&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;MICROSITE_ROOT_DIR&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/edx/app/edxapp/edx-microsite&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所有的静态文件应该在MICROSITE_ROOT_DIR目录下（页面定制过程很像theme）。以MICROSITE_CONFIGURATION中的key为子目录名，在此为test1。目录中的内容参考&lt;a href="https://github.com/edx/edx-platform/tree/master/common/test/test_microsites/test_microsite"&gt;test_microsite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此外，我在github上找到一个&lt;a href="https://github.com/jazkarta/edx-microsite-manager/blob/master/edx_microsite_manager/models.py"&gt;edx_microsite_manager&lt;/a&gt;，可以在admin里编辑管理MICROSITE_CONFIGURATION&lt;/p&gt;
&lt;h1&gt;Run&lt;/h1&gt;
&lt;p&gt;记得先讲域名泛解析到你的ip上&lt;/p&gt;
&lt;p&gt;配置好之后，记得&lt;code&gt;sudo /edx/bin/supervisorctl status edxapp:&lt;/code&gt;和&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Full-Stack#compile-assets-manually"&gt;Compile assets manually&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;现在就可以访问子域啦：test1.mydomain.com&lt;/p&gt;
&lt;p&gt;&lt;img alt="microsite1" src="img/edx/microsite/microsite1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="microsite2" src="img/edx/microsite/microsite2.jpeg" /&gt;&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/Microsites-Theming"&gt;Microsites Theming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jazkarta/edx-microsite-manager/blob/master/edx_microsite_manager/models.py"&gt;edx_microsite_manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate><guid>tag:,2015-10-09:edx-feature-microsite.html</guid><category>edx</category></item><item><title>Open edX体系架构[译文]</title><link>/Open-edX-Architecture-Translation.html</link><description>&lt;p&gt;接下来准备翻译一些文章。&lt;/p&gt;
&lt;p&gt;决定这样做是因为，在开发群里，@amspring提到&lt;code&gt;之前我知道论坛部分使用到轻量级的Sinatra，没有看到Rails，看好几个地方博客什么的涉及技术这块都写ROR,我以为我漏掉了什么呢 Rails比较重，这里提供简单接口的 使用Sinatra较符合&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;而不少群友似乎也觉得edX架构中使用了Rails，而实际上Rails并没有被采用，这类知识其实在官方的文章中都已经说清楚了&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Open edX是一个基于web技术的平台，用于创建，发布和分析在线课程。它驱动着edx.org以及其他的许多在线教育网站。&lt;/p&gt;
&lt;p&gt;这篇文章准备站在较高的层面上来说明平台当前的架构方案，而不会深入到许多细节里。同时也描述出我们正在积极做着的变更。&lt;/p&gt;
&lt;h1&gt;技术&lt;/h1&gt;
&lt;p&gt;Open edX中，几乎所有的后端(服务器端)代码都是用Python写的，django作为web应用框架，使用Mako模板（译者注：替换Django原生模板）&lt;/p&gt;
&lt;p&gt;前端(浏览器端)代码主要用JavaScript来写。部分代码使用CoffeeScript来写，edX正将其替换为JavaScript。部分客户端代码(前端)由Backbone.js写成，更多的代码正在往这个框架上迁移。&lt;/p&gt;
&lt;p&gt;edX同时使用Sass和Bourbon框架来写css&lt;/p&gt;
&lt;h1&gt;组件&lt;/h1&gt;
&lt;p&gt;Open edX平台中有一组核心组件。在可能的情况下，这些组件采用稳定的，经过验证的的api来互相通信&lt;/p&gt;
&lt;p&gt;点击示意图可以查看Open edX的组件：&lt;/p&gt;
&lt;p&gt;&lt;img alt="edX_architecture_CMS_LMS_0" src="https://open.edx.org/sites/default/files/wysiwyg/open-edx-pages/edX_architecture_CMS_LMS_0.png" /&gt;&lt;/p&gt;
&lt;h3&gt;学习管理系统（LMS）&lt;/h3&gt;
&lt;p&gt;LMS是Open edX的核心部分，学生使用它来学习课程。LMS也提供教师面板。&lt;/p&gt;
&lt;p&gt;LMS采用了多种存储机制，课程存储在Mongo中，视频存储在YouTube和或亚马逊S3上，而每个学生的数据存储在MySQL数据库里&lt;/p&gt;
&lt;p&gt;学生浏览课程并与课程内容交互。这个过程产生的事件被推送到analytics pipeline里，这些事件将被收集，分析和发布&lt;/p&gt;
&lt;p&gt;当前edX正在把LMS打造成一个LTI服务提供者，以便Open edX课程组件能嵌入到其他学习平台&lt;/p&gt;
&lt;h3&gt;Studio&lt;/h3&gt;
&lt;p&gt;Studio是课程制作系统，课程团队使用它来创建和更新课程。Studio将课程内容写入到Mongo数据库中，之后LMS从中读取课程内容&lt;/p&gt;
&lt;h3&gt;课程浏览&lt;/h3&gt;
&lt;p&gt;Open edX提供了一个简单的前端页面用来浏览课程。edx.org有一个独立的主页和课程搜索页面，不过并没有开源&lt;/p&gt;
&lt;h3&gt;课程结构&lt;/h3&gt;
&lt;p&gt;Open edX的课程由单元构成，这些单元被称为XBlocks。任何人都可以写出新的XBlocks，教育者和技术人员可以利用xblock来扩充他们的课程组件。edX平台仍然包含着一些XModules组件，XModules组件是XBlocks的前一个版本。EdX正在将这部分XModules重写为XBlocks，逐渐将它移除。&lt;/p&gt;
&lt;p&gt;除了XBlocks，还有几种方法也可以拓展课程组件的行为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LMS支持LTI，课程作者可以集成其他LTI工具到Open edX课程中&lt;/li&gt;
&lt;li&gt;问题中，可以嵌入python代码来呈现问题或是评审学生的答案，这些python代码将在CodeJail中执行（隔离的环境）&lt;/li&gt;
&lt;li&gt;JavaScript组件能通过JS Input集成进去&lt;/li&gt;
&lt;li&gt;课件可以导入导出为Open Learning XML (OLX)，这是一种基于XML的格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;讨论&lt;/h3&gt;
&lt;p&gt;课程内的讨论由一个独立的论坛组件来驱动。这是为数不多没有采用Python来写的组件，它选择了Ruby的Sinatra框架，LMS使用了论坛组件提供的API
来与之通信，并将论坛集成到LMS中&lt;/p&gt;
&lt;p&gt;论坛带有一个通知服务，会通知学生有哪些他感兴趣的话题有了更新&lt;/p&gt;
&lt;h3&gt;移动端&lt;/h3&gt;
&lt;p&gt;Open edX也打造了移动端，包括iOS和Android平台，目前只允许学生看视频。edX正在强化他们&lt;/p&gt;
&lt;h3&gt;数据分析&lt;/h3&gt;
&lt;p&gt;记录学生行为的事件由Open edX的数据分析管道捕获。这些事件数据使用json格式存储在S3中。之后可以使用Hadoop来处理，分析聚合完的结果将被发布到MySQL中。这些分析结果将通过REST API传送到Insights中呈现给用户。Insights是一个Django app，课程讲师和网站管理员可以通过它来了解学生正在做什么，以及他们的学习习惯&lt;/p&gt;
&lt;p&gt;示意图中展示了Open edX中数据分析部分的架构:&lt;/p&gt;
&lt;p&gt;&lt;img alt="edX_Architecture_Analytics" src="https://open.edx.org/sites/default/files/wysiwyg/open-edx-pages/edX_Architecture_Analytics.png" /&gt;&lt;/p&gt;
&lt;h3&gt;后台进程&lt;/h3&gt;
&lt;p&gt;一些比较大的任务被丢到后台进程，而不是在请求中执行。这些任务是队列式和分布式的，使用了Celery and RabbitMQ来管理它们。例子如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;课程学习评分（成绩单）&lt;/li&gt;
&lt;li&gt;群发邮件&lt;/li&gt;
&lt;li&gt;生成答案分布报告&lt;/li&gt;
&lt;li&gt;生成结业证书&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Open edX包含了一个叫做XQueue的可定制队列，用来跑自定义评级代码。这些都是独立的进程，用来运行计算密集型评估工作&lt;/p&gt;
&lt;h3&gt;搜索&lt;/h3&gt;
&lt;p&gt;Open edX在以下地方使用了Elasticsearch来搜索：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;课程内容&lt;/li&gt;
&lt;li&gt;讨论区&lt;/li&gt;
&lt;li&gt;学生笔记&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;原文&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://open.edx.org/contributing-to-edx/architecture"&gt;Open edX Architecture&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate><guid>tag:,2015-09-28:Open-edX-Architecture-Translation.html</guid><category>edx</category></item><item><title>在edx中使用新版的django-debug-toolbar来调试edx</title><link>/use-django-debug-toolbar-1.3.2-in-edx.html</link><description>&lt;p&gt;&lt;a href="https://github.com/django-debug-toolbar/django-debug-toolbar"&gt;django-debug-toolbar&lt;/a&gt;是django调试神器,对于edx开发助益极大,当前edx birch中集成的django-debug-toolbar版本是0.1.10，不支持缓存展示。&lt;/p&gt;
&lt;p&gt;为了调试缓存，想升级django-debug-toolbar，其仓库首页说，当前版本是1.3.2，支持django 1.4 到 1.8。于是在edx中安装新的django-debug-toolbar。切换到edxapp，之后uninstall旧的，最后pip install django-debug-toolbar==1.3.2.搞定。&lt;/p&gt;
&lt;p&gt;新旧版的django-debug-toolbar参数有些不同.需要做微调，具体可以参考&lt;a href="http://django-debug-toolbar.readthedocs.org/en/1.3.2/configuration.html"&gt;文档&lt;/a&gt;.其中更多的可选panel可以参考&lt;a href="http://django-debug-toolbar.readthedocs.org/en/1.3.2/panels.html"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我有时候会在夜深人静的时候直接调试真实线上环境（恶劣的习惯！）,我们需要临时对aws.py做些临时修改&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;TEMPLATE_DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="c1"&gt;################################ DEBUG TOOLBAR ################################&lt;/span&gt;

&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;debug_toolbar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;debug_toolbar_mongo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt; &lt;span class="c1"&gt;#&amp;#39;memcache_toolbar&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;MIDDLEWARE_CLASSES&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;django_comment_client.utils.QueryCountDebugMiddleware&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                       &lt;span class="s1"&gt;&amp;#39;debug_toolbar.middleware.DebugToolbarMiddleware&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;span class="n"&gt;INTERNAL_IPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;

&lt;span class="n"&gt;DEBUG_TOOLBAR_PANELS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.version.VersionDebugPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.timer.TimerDebugPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;#&amp;#39;debug_toolbar.panels.settings_vars.SettingsVarsDebugPanel&amp;#39;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.headers.HeaderDebugPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;#&amp;#39;debug_toolbar.panels.request_vars.RequestVarsDebugPanel&amp;#39;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.request.RequestPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.sql.SQLDebugPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.signals.SignalDebugPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.cache.CachePanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;#&amp;#39;debug_toolbar.panels.logger.LoggingPanel&amp;#39;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.logging.LoggingPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;#&amp;#39;debug_toolbar.panels.staticfiles.StaticFilesPanel&amp;#39;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.templates.TemplatesPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar.panels.redirects.RedirectsPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;debug_toolbar_mongo.panel.MongoDebugPanel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;#&amp;#39;memcache_toolbar.panels.memcache.MemcachePanel&amp;#39;,&lt;/span&gt;
    &lt;span class="c1"&gt;#pip install git+https://github.com/ross/memcache-debug-panel.git  (to use memcache_toolbar)&lt;/span&gt;

    &lt;span class="c1"&gt;#  Enabling the profiler has a weird bug as of django-debug-toolbar==0.9.4 and&lt;/span&gt;
    &lt;span class="c1"&gt;#  Django=1.3.1/1.4 where requests to views get duplicated (your method gets&lt;/span&gt;
    &lt;span class="c1"&gt;#  hit twice). So you can uncomment when you need to diagnose performance&lt;/span&gt;
    &lt;span class="c1"&gt;#  problems, but you shouldn&amp;#39;t leave it on.&lt;/span&gt;
    &lt;span class="c1"&gt;#  &amp;#39;debug_toolbar.panels.profiling.ProfilingPanel&amp;#39;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;DEBUG_TOOLBAR_CONFIG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;INTERCEPT_REDIRECTS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;SHOW_TOOLBAR_CALLBACK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动调试环境:&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings aws&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 25 Sep 2015 00:00:00 +0000</pubDate><guid>tag:,2015-09-25:use-django-debug-toolbar-1.3.2-in-edx.html</guid><category>edx</category></item><item><title>appsembler发布edx-lite-cypress</title><link>/appsembler-edx-lite-cypress.html</link><description>&lt;p&gt;appsembler于8天前在docker hub上发布edx-lite-cypress.该版本是为开发者准备的&lt;/p&gt;
&lt;p&gt;我在本地使用一切正常，十分适合用于开发协作&lt;/p&gt;
&lt;p&gt;大家可以拉取试用:&lt;code&gt;docker pull appsembler/edx-lite-cypress&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate><guid>tag:,2015-09-23:appsembler-edx-lite-cypress.html</guid><category>edx</category></item><item><title>edX发布Analytics Developer Stack</title><link>/Installing-the-Open-edX-Analytics-Developer-Stack.html</link><description>&lt;p&gt;Gabe Mulley上周在&lt;a href="https://open.edx.org"&gt;open.edx.org&lt;/a&gt;里公布说Development Environment for Insights已经可用了，原文参考&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/devstack/analytics_devstack.html#install-the-software-prerequisites"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文章说这项成果要大大地感谢Philippe Chiu (来自法国IONISx公司)，以及Braden MacDonald (来自OpenCraft公司),前者在去年的黑客马拉松里贡献了最初的模型（跑在Docker里），我之前好像有拿到这个版本，但似乎略微杂乱。后者给出了vagrant image&lt;/p&gt;
&lt;p&gt;下图是analytics devstack包含的服务流程图&lt;/p&gt;
&lt;p&gt;&lt;img alt="Analyticstack" src="img/edx/analysis/Analyticstack.png" /&gt;&lt;/p&gt;
&lt;p&gt;据我所知，这项工作Gabe Mulley自己是做了很多工作的，我一直有跟进这块，大家在google group里谈论数据可视化这块时，Gabe Mulley一直致力于为大家解答，在edX开发者中，他对数据这部分似乎也最为熟悉&lt;/p&gt;
&lt;p&gt;目前这部分还没有十分成熟，问题包括一些s3的依赖还没有清理干净。但这些问题正在被解决&lt;/p&gt;
&lt;p&gt;可喜的是，之后很可能可以直接将数据分析整合到生产环境里（有望在下个稳定版本），不需要依赖于亚马逊的服务，意味着国内可以直接使用。&lt;/p&gt;
&lt;h1&gt;安装&lt;/h1&gt;
&lt;p&gt;首先和devstack一样，需要安装 VirtualBox &amp;gt;= 4.3.12
和 Vagrant &amp;gt;= 1.6.5,没有安装devstack经验的同学，可以参考&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack#installing-the-edx-developer-stack"&gt;installing-the-edx-developer-stack&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#在宿主机(host)&lt;/span&gt;
sudo apt-get install python-dev
git clone https://github.com/edx/edx-analytics-pipeline
&lt;span class="nb"&gt;cd&lt;/span&gt; edx-analytics-pipeline
virtualenv venv
&lt;span class="nb"&gt;source&lt;/span&gt; venv/bin/activate
make bootstrap

mkdir analyticstack
&lt;span class="nb"&gt;cd&lt;/span&gt; analyticstack
curl -L https://raw.github.com/edx/configuration/master/vagrant/release/analyticstack/Vagrantfile &amp;gt; Vagrantfile
vagrant plugin install vagrant-vbguest
sudo apt-get install nfs-kernel-server nfs-common portmap
vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;使用&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#进入Analytics Devstack&lt;/span&gt;
vagrant ssh

&lt;span class="c1"&gt;#切换到edxapp用户&lt;/span&gt;
sudo su edxapp

&lt;span class="c1"&gt;#启用edX Analytics Data API&lt;/span&gt;
sudo su analytics_api
~/venvs/analytics_api/bin/python ~/analytics_api/manage.py runserver 0.0.0.0:8100 --insecure

&lt;span class="c1"&gt;#运行edX Insights&lt;/span&gt;
sudo su insights
~/venvs/insights/bin/python ~/edx_analytics_dashboard/manage.py switch display_verified_enrollment on --create
~/venvs/insights/bin/python ~/edx_analytics_dashboard/manage.py switch enable_course_api on --create
~/venvs/insights/bin/python ~/edx_analytics_dashboard/manage.py runserver 0.0.0.0:8110 --insecure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用浏览器打开：&lt;code&gt;http://127.0.0.1:8110&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;执行数据分析任务(edX Analytics Pipeline)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;vagrant ssh进入devstack，注册用户，注册课程&lt;/li&gt;
&lt;li&gt;开始学习，回答几道课程中的问题&lt;/li&gt;
&lt;li&gt;退出devstack，回到宿主机，进入edx-analytics-pipeline目录&lt;/li&gt;
&lt;li&gt;执行任务&lt;ul&gt;
&lt;li&gt;统计注册信息：&lt;ul&gt;
&lt;li&gt;export WHEEL_URL=http://edx-wheelhouse.s3-website-us-east-1.amazonaws.com/Ubuntu/precise&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;remote-task --vagrant-path &lt;path to &lt;code&gt;analyticstack&lt;/code&gt;&gt; --remote-name devstack --override-config ${PWD}/config/devstack.cfg --wheel-url $WHEEL_URL --wait \
   ImportEnrollmentsIntoMysql --local-scheduler --interval-end $(date +%Y-%m-%d -d "tomorrow") --n-reduce-tasks 1&lt;/li&gt;
&lt;li&gt;统计答案分布：&lt;ul&gt;
&lt;li&gt;export WHEEL_URL=http://edx-wheelhouse.s3-website-us-east-1.amazonaws.com/Ubuntu/precise&lt;/li&gt;
&lt;li&gt;export UNIQUE_NAME=$(date +%Y-%m-%dT%H_%M_%SZ)&lt;/li&gt;
&lt;li&gt;remote-task --vagrant-path &lt;path to &lt;code&gt;analyticstack&lt;/code&gt;&gt; --remote-name devstack --override-config &lt;span class="math"&gt;\({PWD}/config/devstack.cfg --wheel-url $WHEEL_URL --wait \  
AnswerDistributionWorkflow --local-scheduler \  
  --src hdfs://localhost:9000/data/ \  
  --include '*tracking.log*' \  
  --dest hdfs://localhost:9000/edx-analytics-pipeline/output/answer_distribution_raw/\)&lt;/span&gt;UNIQUE_NAME/data \&lt;br /&gt;
  --name &lt;span class="math"&gt;\(UNIQUE_NAME \  
  --output-root hdfs://localhost:9000/edx-analytics-pipeline/output/answer_distribution/ \  
  --marker hdfs://localhost:9000/edx-analytics-pipeline/output/answer_distribution_raw/\)&lt;/span&gt;UNIQUE_NAME/marker \&lt;br /&gt;
  --n-reduce-tasks 1  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/blog/development-environment-open-edx-insights"&gt;A Development Environment for Open edX Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/devstack/analytics_devstack.html"&gt;Installing the Open edX Analytics Developer Stack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate><guid>tag:,2015-09-22:Installing-the-Open-edX-Analytics-Developer-Stack.html</guid><category>edx</category></item><item><title>在edX Cypress中启用notes功能</title><link>/use-notes-in-cypress.html</link><description>&lt;p&gt;以下内容基于Cypress版本&lt;/p&gt;
&lt;p&gt;根据&lt;a href="http://edx.readthedocs.org/projects/open-edx-building-and-running-a-course/en/named-release-birch/exercises_tools/student_notes.html"&gt;student_notes&lt;/a&gt;的说法，在&lt;code&gt;Advanced Settings&lt;/code&gt;中将&lt;code&gt;Enable Student Note&lt;/code&gt;设置为true,结果并没有像文档说的那样，一点击notes tab就报错。于是查看错误日志发现&lt;code&gt;OAuth2 Client with name 'edx-notes' is not present in the DB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;于是翻看notesserver的配置文件，查看相关参数：&lt;a href="https://github.com/edx/edx-notes-api/blob/master/notesserver/settings/common.py#L19"&gt;common.py&lt;/a&gt;，发现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ID and Secret used for authenticating JWT Auth Tokens&lt;/span&gt;
&lt;span class="c1"&gt;# should match those configured for `edx-notes` Client in EdX&amp;#39;s /admin/oauth2/client/&lt;/span&gt;
&lt;span class="n"&gt;CLIENT_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;edx-notes-id&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CLIENT_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;edx-notes-secret&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;根据提示到/admin中添加client&lt;/p&gt;
&lt;p&gt;&lt;img alt="note1" src="img/edx/notes/note1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;然后笔记功能就可用了&lt;/p&gt;
&lt;p&gt;&lt;img alt="note2" src="img/edx/notes/note2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;这个特性十分强大，可以批注课程内容中的大多数东西，从html到pdf。学生可以用笔记复习，做检索之类的&lt;/p&gt;
&lt;p&gt;不过目前还有个问题笔记无法保存到后端（看了下原因是笔记服务没有被配置到nginx上，insights也是因此无法使用）。对，这的确是个大问题！为何我这么冷静
,见后续.如果最新的文档是坑人的，我们就需要自己配置好nginx了。其实也并不麻烦，安装时，在&lt;a href="https://github.com/edx/configuration/blob/master/playbooks/edx_sandbox.yml"&gt;edx_sandbox.yml&lt;/a&gt;启用notes就好&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;群里有小伙伴反馈说没有找到&lt;code&gt;Enable Student Note&lt;/code&gt;,可以到lms(cms).env.json的FEATURES里加上&lt;code&gt;"ENABLE_EDXNOTES": true,&lt;/code&gt;，之后记得&lt;code&gt;restart edxapp:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在Cypress的lms.env.json里我们看到&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &amp;quot;EDXNOTES_INTERNAL_API&amp;quot;: &amp;quot;http://localhost:18120/api/v1&amp;quot;,
    &amp;quot;EDXNOTES_PUBLIC_API&amp;quot;: &amp;quot;http://localhost:18120/api/v1&amp;quot;,
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这应该就是笔记无法保存到后端的原因。解决方案上边已经给出&lt;/p&gt;
&lt;p&gt;记得将localhost改为你的ip。&lt;/p&gt;
&lt;h1&gt;花絮&lt;/h1&gt;
&lt;p&gt;@mt兄发现，在Advanced Settings中可以启用计算器组件，启用之后会和笔记组件并列在右下角，看去很萌，不过这可是个强大的科学计算器啊：
&lt;img alt="note1" src="img/edx/notes/note3.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;另外根据Advanced Settings的说法，估计不久聊天组件也就可用了&lt;/p&gt;
&lt;h1&gt;后续&lt;/h1&gt;
&lt;p&gt;据官方&lt;a href="http://edx.readthedocs.org/projects/open-edx-building-and-running-a-course/en/latest/exercises_tools/notes.html"&gt;最新文档&lt;/a&gt;说，在latest版本中，这个功能是默认可用的，不过我觉得在admin中申请client的工作还是要做的吧。有试过的同学欢迎发邮件吐槽，我就可以把这篇文章下架了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate><guid>tag:,2015-09-22:use-notes-in-cypress.html</guid><category>edx</category></item><item><title>偷懒,技术与理想</title><link>/lazy-technology-dream.html</link><description>&lt;blockquote&gt;
&lt;p&gt;偷懒是程序员的美德&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;从xblock插件生成器说起&lt;/h1&gt;
&lt;p&gt;这是我最近的一个业余项目。用了两个周末午后的时间&lt;/p&gt;
&lt;p&gt;我对插件机制一直饱含兴趣，这种东西,技术上关系到系统的灵活性，而商业上关系到对需求的适应能力&lt;/p&gt;
&lt;p&gt;对edX的扩展，官方给出了&lt;a href="https://open.edx.org/extending-edx"&gt;四种手段&lt;/a&gt;，最令我激动的是xblock。关于xblock我此前有写过&lt;a href="http://wwj718.github.io/about-XBlocks.html"&gt;介绍文章&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;缘起&lt;/h2&gt;
&lt;p&gt;前前后后，我自己写的xblock加上fork自国外的一些，合计有十几个了。写多了你会发现，xblock是极其强大的扩展机制，它比LTI的扩展性好，又比djangoapp来得简易，以至于大多数教育相关的商业点子，很适合以edX为基础平台，利用xblock作为定制机制，对很多需求就足够了。&lt;/p&gt;
&lt;p&gt;写多了xblock又发现，每个插件的结构是大同小异的，无非是改改存储字段名（字段类型大多都不要动，多是String），改下项目名称，许多其他的命名都以项目名称为前缀，以至于我每回开始写新的xblock，都是先cp旧的，然后使用&lt;code&gt;rename 's/old_repo_name/new_repo_name/'&lt;/code&gt;，&lt;code&gt;grep -rl "old_repo_name" ./ | xargs sed -i 's/old_repo_name/new_repo_name/g'&lt;/code&gt;以及&lt;code&gt;grep -rl "old_field_name" ./ | xargs sed -i 's/old_field_name/new_field_name/g'&lt;/code&gt;来作为新xblock的基本框架，以省去复制粘贴&lt;/p&gt;
&lt;p&gt;这样又写了几个插件后发现依然有不少重复劳动，于是就想为何不写一个xblock插件生成器呢。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;当我们陷入重复劳动的时候，可能就是合适的时机来考虑如何自动化这项工作了，以便能省下时间来喝咖啡。而且我们知道，重复乏味的劳动中，人是容易出错的，而机器不知疲倦，所以偷懒是程序员的美德&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;思路&lt;/h2&gt;
&lt;p&gt;我的设想里，xblock插件生成器做的是这样的工作：开发者将项目名，所需存储字段，字段属性，，项目依赖的外部静态文件等写入config.json配置文件（或者config.yml/config.py），而后自动生成xblock，而后只需要做些微调以及在指定位置加入自己的业务代码,一个插件便可用了。&lt;/p&gt;
&lt;p&gt;这里的主要工作是将琐碎的工作自动化，然后提供一个通用的模板，给出大多的备选功能（属性或函数，默认以注释掉的方式存在于生成的xblock中），尽量按照现有的xblock组件布局方式，现有的xblock组件可以参考&lt;a href="https://github.com/edx/edx-platform/wiki/List-of-XBlocks"&gt;这里&lt;/a&gt;，这样一来，熟练的开发者不需要参考文档，仅需要取消注释，做些微调，就足以快速地完成工作，没错，眼尖的你可能已经看出来了，这是ROR中致力于鼓吹的&lt;code&gt;convention over configuration&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此外，说到设计原则，关于灵活性部分，我喜欢&lt;code&gt;Open Closed Principle&lt;/code&gt;原则（也就是著名开放封闭原则），对扩展开放，对修改关闭。xblock满足这点,我很喜欢&lt;/p&gt;
&lt;h2&gt;设计原则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open Closed Principle（开放封闭原则）&lt;/li&gt;
&lt;li&gt;convention over configuration （约定优于配置）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;技术细节&lt;/h2&gt;
&lt;p&gt;剩下的就是技术细节的工作了。&lt;/p&gt;
&lt;p&gt;我最初想以&lt;a href="https://github.com/mitsuhiko/jinja2"&gt;jinja2&lt;/a&gt;模板为基础,
我们知道ansible之类的大型项目也够选择了jinja2，这的确是个优秀的模板引擎。而后发现了&lt;a href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt;,这个工具进一步简化了工作，于是决定基于它来写xblock插件生成器，这样一来根据配置文件来自动生成文件名的问题都解决了&lt;/p&gt;
&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;p&gt;这里存在一个很有意思的问题，它和正则相关，cookiecutter用的是标准的jinja2模板，jinja2模版的语法和django相似，而xblock中的模板我用的是django而不是mako，这样一来就导致xblock中有一部分&lt;code&gt;{{var}}&lt;/code&gt;，我们是想等xblock来渲染，结果却被cookiecutter先渲染了。这个问题可以通过更改jinja2语法风格来解决，或是通过使用mako模板来解决。我是quick and dirty的方式解决的。用到了正则&lt;/p&gt;
&lt;h1&gt;此类问题&lt;/h1&gt;
&lt;p&gt;此类问题，或者说代码生成器问题(generator),十分吸引人,它本质上是字符处理问题（我觉得&lt;code&gt;宏&lt;/code&gt;的本质也是这个），这类问题的极致形态是写一个parser，而一般形态是使用正则，当然使用模板往往是个捷径。&lt;/p&gt;
&lt;h1&gt;xblock市场的构想&lt;/h1&gt;
&lt;p&gt;个人而言，我很看好edX，我一直相信xblock本身足以形成插件市场，我觉得以此作为出发点，构建一个咨询/定制/服务型的公司是很有意思的，我喜欢《黑客与画家》第六章提到的观点：&lt;code&gt;财富就是创造人们需要的东西&lt;/code&gt;，我们可以看到即便是国内，这个需求也已经越来越膨胀却没有找到出口。我们今天可以看到，edx这个项目本身是很诱人的，许多教育业内人士与公司都跃跃欲试，而edx的技术门槛确实个拦路虎，那么提供edx相关的技术/开发咨询/培训，提供定制化的服务（插件定制），降低开发的门槛等等，是许多企业客户期待的，当然也是对推广edx本身很有价值的，我的兴趣点之一可能在这里吧，&lt;code&gt;让技术变得易于使用，能方便地用来应对现实问题&lt;/code&gt;，我此前折腾docker，折腾云服务，折腾LTI，此次写的xblock生成器，可能都是受此观念的驱动吧&lt;/p&gt;
&lt;p&gt;有了xblock插件生成器，我们尤其适合做一些为课程深度定制的组件，快速完成插件的基础上，又可以据此作为模板生成其他组件。&lt;/p&gt;
&lt;p&gt;前段时间给公司展示了我业余时间折腾的d3组件,&lt;a href="http://jaredforsyth.com/treed/"&gt;treed&lt;/a&gt;,十分适合结合到edx中，作为呈现知识的方式，类似思维导图 ,d3的案例千千万:&lt;a href="http://bl.ocks.org/mbostock"&gt;bl.ocks.org&lt;/a&gt;，如果能将此领域与教育领域结合,首先市场部势必会很兴奋，有了xblock插件生成器，将d3组件移植到xblock就变得十分迅速。而这些还仅仅是d3。类似的组件还有许多，这里的核心想法是，&lt;code&gt;通过xblock这种插件机制，我们可以将其他领域的成果（好比数据可视化），轻易得整合到教育中，所谓学科融合&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如此一来，结合具体学科，快速打造易用性的组件就变得容易，易用性很可能要求高度的定制化，由此带来通用性的损失，而有了插件生成器，大量打造定制化的插件，时间成本也不至于太高，成本一旦降低，作为商业性的服务就容易被接受。&lt;/p&gt;
&lt;p&gt;该组件可能暂时不会开源，想先进一步优化它，可能的话想以此试水xblock市场&lt;/p&gt;
&lt;h1&gt;花絮&lt;/h1&gt;
&lt;p&gt;在写完大体框架的时候，打了个 v0.1 tag，觉得后续的改良还很多，出于谦虚的姿态，版本号慢慢来，而后又花了一个周末的下午，觉得妈蛋好像主要的事都做完了，直接打了个v1.0的tag。而后顺便把将MTV中的T（Template）换成了mako，于是mako/v1.0也出来了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate><guid>tag:,2015-09-15:lazy-technology-dream.html</guid><category>edx</category></item><item><title>从xblock插件生成器说起</title><link>/xblock-generator-and-others.html</link><description>&lt;blockquote&gt;
&lt;p&gt;偷懒是程序员的美德&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是我最近的一个业余项目。用了两个周末午后的时间&lt;/p&gt;
&lt;p&gt;我对插件机制一直饱含兴趣，这种东西,技术上关系到系统的灵活性，而商业上关系到对需求的适应能力&lt;/p&gt;
&lt;p&gt;对edX的扩展，官方给出了&lt;a href="https://open.edx.org/extending-edx"&gt;四种手段&lt;/a&gt;，最令我激动的是xblock。关于xblock我此前有写过&lt;a href="http://wwj718.github.io/about-XBlocks.html"&gt;介绍文章&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;缘起&lt;/h1&gt;
&lt;p&gt;前前后后，我自己写的xblock加上fork自国外的一些，合计有十几个了。写多了你会发现，xblock是极其强大的扩展机制，它比LTI的扩展性好，又比djangoapp来得简易，以至于大多数教育相关的商业点子，很适合以edX为基础平台，利用xblock作为定制机制，对很多需求就足够了。&lt;/p&gt;
&lt;p&gt;写多了xblock又发现，每个插件的结构是大同小异的，无非是改改存储字段名（字段类型大多都不要动，多是String），改下项目名称，许多其他的命名都以项目名称为前缀，以至于我每回开始写新的xblock，都是先cp旧的，然后使用&lt;code&gt;rename 's/old_repo_name/new_repo_name/'&lt;/code&gt;，&lt;code&gt;grep -rl "old_repo_name" ./ | xargs sed -i 's/old_repo_name/new_repo_name/g'&lt;/code&gt;以及&lt;code&gt;grep -rl "old_field_name" ./ | xargs sed -i 's/old_field_name/new_field_name/g'&lt;/code&gt;来作为新xblock的基本框架，以省去复制粘贴&lt;/p&gt;
&lt;p&gt;这样又写了几个插件后发现依然有不少重复劳动，于是就想为何不写一个xblock插件生成器呢。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;当我们陷入重复劳动的时候，可能就是合适的时机来考虑如何自动化这项工作了，以便能省下时间来喝咖啡。而且我们知道，重复乏味的劳动中，人是容易出错的，而机器不知疲倦，所以偷懒是程序员的美德&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;我的设想里，xblock插件生成器做的是这样的工作：开发者将项目名，所需存储字段，字段属性，，项目依赖的外部静态文件等写入config.json配置文件（或者config.yml/config.py），而后自动生成xblock，而后只需要做些微调以及在指定位置加入自己的业务代码,一个插件便可用了。&lt;/p&gt;
&lt;p&gt;这里的主要工作是将琐碎的工作自动化，然后提供一个通用的模板，给出大多的备选功能（属性或函数，默认以注释掉的方式存在于生成的xblock中），尽量按照现有的xblock组件布局方式，现有的xblock组件可以参考&lt;a href="https://github.com/edx/edx-platform/wiki/List-of-XBlocks"&gt;这里&lt;/a&gt;，这样一来，熟练的开发者不需要参考文档，仅需要取消注释，做些微调，就足以快速地完成工作，没错，眼尖的你可能已经看出来了，这是ROR中致力于鼓吹的&lt;code&gt;convention over configuration&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此外，说到设计原则，关于灵活性部分，我喜欢&lt;code&gt;Open Closed Principle&lt;/code&gt;原则（也就是著名开放封闭原则），对扩展开放，对修改关闭。xblock满足这点,我很喜欢&lt;/p&gt;
&lt;h1&gt;设计原则&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Open Closed Principle（开放封闭原则）&lt;/li&gt;
&lt;li&gt;convention over configuration （约定优于配置）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;技术细节&lt;/h1&gt;
&lt;p&gt;剩下的就是技术细节的工作了。&lt;/p&gt;
&lt;p&gt;我最初想以&lt;a href="https://github.com/mitsuhiko/jinja2"&gt;jinja2&lt;/a&gt;模板为基础,
我们知道ansible之类的大型项目也够选择了jinja2，这的确是个优秀的模板引擎。而后发现了&lt;a href="https://github.com/audreyr/cookiecutter"&gt;cookiecutter&lt;/a&gt;,这个工具进一步简化了工作，于是决定基于它来写xblock插件生成器，这样一来根据配置文件来自动生成文件名的问题都解决了&lt;/p&gt;
&lt;h1&gt;遇到的问题&lt;/h1&gt;
&lt;p&gt;这里存在一个很有意思的问题，它和正则相关，cookiecutter用的是标准的jinja2模板，jinja2模版的语法和django相似，而xblock中的模板我用的是django而不是mako，这样一来就导致xblock中有一部分&lt;code&gt;{{var}}&lt;/code&gt;，我们是想等xblock来渲染，结果却被cookiecutter先渲染了。这个问题可以通过更改jinja2语法风格来解决，或是通过使用mako模板来解决。我是quick and dirty的方式解决的。用到了正则&lt;/p&gt;
&lt;h1&gt;此类问题&lt;/h1&gt;
&lt;p&gt;此类问题，或者说代码生成器问题(generator),十分吸引人,它本质上是字符处理问题（我觉得&lt;code&gt;宏&lt;/code&gt;的本质也是这个），这类问题的极致形态是写一个parser，而一般形态是使用正则，当然使用模板往往是个捷径。&lt;/p&gt;
&lt;h1&gt;xblock市场的构想&lt;/h1&gt;
&lt;p&gt;个人而言，我很看好edX，我一直相信xblock本身足以形成插件市场，我觉得以此作为出发点，构建一个咨询/定制/服务型的公司是很有意思的，我喜欢《黑客与画家》第六章提到的观点：&lt;code&gt;财富就是创造人们需要的东西&lt;/code&gt;，我们可以看到即便是国内，这个需求也已经越来越膨胀却没有找到出口。我们今天可以看到，edx这个项目本身是很诱人的，许多教育业内人士与公司都跃跃欲试，而edx的技术门槛确实个拦路虎，那么提供edx相关的技术/开发咨询/培训，提供定制化的服务（插件定制），降低开发的门槛等等，是许多企业客户期待的，当然也是对推广edx本身很有价值的，我的兴趣点之一可能在这里吧，&lt;code&gt;让技术变得易用使用，能方便地用来应对现实问题&lt;/code&gt;，我此前折腾docker，折腾云服务，折腾LTI，此次写的xblock生成器，可能都是受此观念的驱动吧&lt;/p&gt;
&lt;p&gt;有了xblock插件生成器，我们尤其适合做一些为课程深度定制的组件，快速完成插件的基础上，又可以据此作为模板生成其他组件。&lt;/p&gt;
&lt;p&gt;前段时间给公司展示了我业余时间折腾的d3组件,&lt;a href="http://jaredforsyth.com/treed/"&gt;treed&lt;/a&gt;,十分适合结合到edx中，作为呈现知识的方式，类似思维导图 ,d3的案例千千万:&lt;a href="http://bl.ocks.org/mbostock"&gt;bl.ocks.org&lt;/a&gt;，如果能将此领域与教育领域结合,首先市场部势必会很兴奋，有了xblock插件生产器，将d3组件移植到xblock就变得十分迅速。而这些还仅仅是d3。类似的组件还有许多，这里的核心想法是，&lt;code&gt;通过xblock这种插件机制，我们可以将其他领域的成果（好比数据可视化），轻易得整合到教育中，所谓学科融合&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如此一来，结合具体学科，快速打造易用性的组件就变得容易，易用性很可能造成高度的定制化，由此带来通用性的损失，而有了插件生成器，大量打造定制化的插件，时间成本也不至于太高，成本一旦降低，作为商业性的服务就容易被接受。&lt;/p&gt;
&lt;p&gt;该组件可能暂时不会开源，想先进一步优化它，可能的话想以此试水xblock市场&lt;/p&gt;
&lt;h1&gt;花絮&lt;/h1&gt;
&lt;p&gt;在写完大体框架的时候，打了个 v0.1 tag，觉得后续的改良还很多，出于谦虚的姿态，版本号慢慢来，而后又花了一个周末的下午，觉得妈蛋好像主要的事都做完了，直接打了个v1.0的tag。而后顺便把将MTV中的T（Template）换成了mako，于是mako/v1.0也出来了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate><guid>tag:,2015-09-15:xblock-generator-and-others.html</guid><category>edx</category></item><item><title>在edx中使用优酷视频服务</title><link>/edx-use-youku.html</link><description>&lt;h1&gt;edx中视频组件&lt;/h1&gt;
&lt;p&gt;edx中的视频组件和youtube耦合得比较紧密，可惜在国内我们与此无缘。&lt;/p&gt;
&lt;p&gt;edx中原生的视频播放器，会捕捉用户观看行为，写入到track log，而这些数据是edx数据可视化的来源，所以如果我们放弃这个视频组件，转而使用其他视频服务商提供的播放器，那么关于视频行为分析就只能自行移植。这是个不小的工作量。&lt;/p&gt;
&lt;p&gt;当然目前数据可视化这一块，默认还未启用，从看得见的层面来说，弃用默认的视频播放器，并不造成实际影响。&lt;/p&gt;
&lt;p&gt;为了使用国内视频流服务，我们需要为edx编写对应的XBlock，提供本地化的视频组件，这也算是本地化绕不开的一个问题吧。&lt;/p&gt;
&lt;p&gt;当然我们也可以搭建自己的视频流服务器（甚至CDN），考虑到时间和成本预算，以及服务的稳定性，选择专业的服务商往往来的更划算。&lt;/p&gt;
&lt;h1&gt;国内的视频服务商&lt;/h1&gt;
&lt;p&gt;一些比较有名的视频服务商包括：优酷，土豆，腾讯云，&lt;a href="http://www.polyv.net/"&gt;保利威视&lt;/a&gt;,&lt;a href="http://www.bokecc.com/"&gt;CC视频&lt;/a&gt;之类的，此外七牛云，又拍云这类云存储也很适合用来存储视频的。&lt;/p&gt;
&lt;p&gt;个人而言,我很喜欢七牛云,良心企业 ^_^&lt;/p&gt;
&lt;p&gt;就在线教育而言，&lt;a href="http://www.polyv.net/"&gt;保利威视&lt;/a&gt;和&lt;a href="http://www.bokecc.com/"&gt;CC视频&lt;/a&gt;针对教育提供了不少实用的功能,值得关注&lt;/p&gt;
&lt;h1&gt;针对优酷的XBlock（&lt;a href="https://github.com/wwj718/youkuXBLock"&gt;youkuXBlock&lt;/a&gt;）&lt;/h1&gt;
&lt;p&gt;我在此要分享的XBlock是针对优酷的&lt;/p&gt;
&lt;p&gt;当然企业级用户可能会更倾向于腾讯云，腾讯云的XBlock这周末估计可以写完（预计会集成到edx国内社区版中），到时候与edx社区版一起发布&lt;/p&gt;
&lt;p&gt;关于优酷的视频服务可以看&lt;a href="http://open.youku.com/"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;XBlock源代码看这里：&lt;a href="https://github.com/wwj718/youkuXBLock"&gt;youkuXBlock&lt;/a&gt; , 欢迎fork，欢迎pull requests ，欢迎反馈bug&lt;/p&gt;
&lt;p&gt;具体的使用和安装，项目主页有，在此介绍下使用说明&lt;/p&gt;
&lt;h1&gt;使用说明&lt;/h1&gt;
&lt;p&gt;我们假设你已经在edx中装好了相应组件，也做好了相关配置，如果还没有，请参考项目主页:&lt;a href="https://github.com/wwj718/youkuXBLock"&gt;youkuXBlock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先你得有一个优酷账号。&lt;/p&gt;
&lt;p&gt;然后上传视频:&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku1" src="img/edx/youku/youku1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;上传好之后，获得视频id（vid），稍后要填写到youkuXBlock组件里&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku2" src="img/edx/youku/youku2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;接下来去优酷开放平台，注册一个应用（有免广告之类的可选功能(付费)）&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku3" src="img/edx/youku/youku3.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;记下client_id,之后要填写到xblock中&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku4" src="img/edx/youku/youku4.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;去studio里填写参数&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku7" src="img/edx/youku/youku7.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;保存发布，大功告成&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku8" src="img/edx/youku/youku8.jpeg" /&gt;&lt;/p&gt;
&lt;h1&gt;定制性&lt;/h1&gt;
&lt;p&gt;优酷的定制性还挺好的，有时间可以深度定制一下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="youku5" src="img/edx/youku/youku5.jpeg" /&gt;
&lt;img alt="youku6" src="img/edx/youku/youku6.jpeg" /&gt;&lt;/p&gt;
&lt;h1&gt;计划&lt;/h1&gt;
&lt;p&gt;优酷免广告的费用并不便宜，我之后可能会针对&lt;a href="http://www.polyv.net/"&gt;保利威视&lt;/a&gt;做更深度的定制，目前对&lt;a href="http://www.polyv.net/"&gt;保利威视&lt;/a&gt;只做了基础版，计划中的功能包括在课程中插入题目，弹幕，数据可视化之类的功能，尽量做到在一个平台内编辑（一体化，在studio中编辑），而不需要用户反复切换操作界面。技术细节可能主要涉及到token，预计业务逻辑多会用js写&lt;/p&gt;
&lt;p&gt;此外我个人很喜欢七牛云，开发者友好，接口很棒，价格也公道，之后应该会针对七牛云写XBlock，edx中有许多存储机制默认采用了亚马逊的S3服务，其实这块很大部分可以移植到七牛云上&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 29 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-29:edx-use-youku.html</guid><category>edx</category></item><item><title>在ubuntu12.04下安装edx Cypress</title><link>/install-edx-Cypress.html</link><description>&lt;h1&gt;最简易的方式&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;OPENEDX_RELEASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;named-release/cypress
wget https://raw.githubusercontent.com/edx/configuration/&lt;span class="nv"&gt;$OPENEDX_RELEASE&lt;/span&gt;/util/install/sandbox.sh -O - &lt;span class="p"&gt;|&lt;/span&gt; bash
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;分步安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;sudo apt-get update -y&lt;/li&gt;
&lt;li&gt;sudo apt-get upgrade -y&lt;/li&gt;
&lt;li&gt;sudo reboot&lt;/li&gt;
&lt;li&gt;sudo apt-get install -y build-essential software-properties-common python-software-properties curl git-core libxml2-dev libxslt1-dev libfreetype6-dev python-pip python-apt python-dev libxmlsec1-dev swig&lt;/li&gt;
&lt;li&gt;sudo pip install --upgrade pip&lt;/li&gt;
&lt;li&gt;sudo pip install --upgrade virtualenv&lt;/li&gt;
&lt;li&gt;cd /var/tmp&lt;/li&gt;
&lt;li&gt;git clone https://github.com/edx/configuration&lt;/li&gt;
&lt;li&gt;cd /var/tmp/configuration&lt;/li&gt;
&lt;li&gt;git checkout named-release/cypress&lt;/li&gt;
&lt;li&gt;sed  -i "/COMMON_SSH_PASSWORD_AUTH/c COMMON_SSH_PASSWORD_AUTH: \"yes\"" playbooks/roles/common/defaults/main.yml&lt;/li&gt;
&lt;li&gt;sudo pip install -r requirements.txt&lt;/li&gt;
&lt;li&gt;cd /var/tmp/configuration/playbooks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"   -e 'edx_platform_version=named-release/cypress certs_version=named-release/cypress forum_version=named-release/cypress xqueue_version=named-release/cypress'&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;建议&lt;/h1&gt;
&lt;p&gt;不要在edx_sandbox.yml添加insights和ecommerce，否则可能出现nodeenv错误。这两项功能目前还没完善&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 25 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-25:install-edx-Cypress.html</guid><category>edx</category></item><item><title>使用django-rest-swagger为edx api制作文档</title><link>/edx-api-with-django-rest-swagger.html</link><description>&lt;blockquote&gt;
&lt;p&gt;程序员既痛恨写文档，又痛恨别人不写文档 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;edX目前已经有不少可用的api接口了:&lt;a href="http://edx-platform-api.readthedocs.org/en/latest/index.html"&gt;EdX Platform APIs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;edx自带的api都是用&lt;a href="django-rest-framework.org"&gt;django-rest-framework&lt;/a&gt;写的。如果我们需要扩展edx的api，好比为手机端提供额外的接口，建议也使用&lt;a href="django-rest-framework.org"&gt;django-rest-framework&lt;/a&gt;来写api，而不要从django那里开始写&lt;/p&gt;
&lt;p&gt;我去年为edx的论坛模块写过api，供移动端使用，最近为了将edx打造为子系统，需要写站点级别的api&lt;/p&gt;
&lt;p&gt;写api倒挺有趣，可为了将api提供给别人用，我们需要为api写文档，这是件无聊乏味且容易出错的工作（收集参数什么的）。能不能像python doc那样从代码里直接生成文档呢。答案就是&lt;a href="https://github.com/marcgibbons/django-rest-swagger"&gt;django-rest-swagger&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;django-rest-swagger是什么&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;An API documentation generator for Swagger UI and Django REST Framework&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相关文档参考&lt;a href="http://django-rest-swagger.readthedocs.org/en/latest/"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;install django-rest-swagger for edX&lt;/h1&gt;
&lt;p&gt;为了在edx中安装django-rest-swagger，我们需要做以下工作&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#git clone&lt;/span&gt;
git clone https://github.com/marcgibbons/django-rest-swagger.git
&lt;span class="nb"&gt;cd&lt;/span&gt; django-rest-swagger
&lt;span class="c1"&gt;#edx的django版本是1.4,django-rest-swagger要求&amp;gt;1.5，所以我们注释掉依赖&lt;/span&gt;
&lt;span class="c1"&gt;#vim setup.py,注释掉以下内容&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39;django&amp;gt;=1.5&amp;#39;,&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39;djangorestframework&amp;gt;=2.3.8&amp;#39;,&lt;/span&gt;

sudo su edxapp -s /bin/bash
&lt;span class="nb"&gt;source&lt;/span&gt; /edx/app/edxapp/edxapp_env
pip install ./django-rest-swagger
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;配置&lt;/h1&gt;
&lt;p&gt;往&lt;code&gt;/edx/app/edxapp/edx-platform/lms/urls.py&lt;/code&gt;添加:
&lt;code&gt;INSTALLED_APPS += ('rest_framework_swagger',)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;往&lt;code&gt;/edx/app/edxapp/edx-platform/lms/env/aws.py&lt;/code&gt;添加:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;r&amp;#39;^docs/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_framework_swagger.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;使用&lt;/h1&gt;
&lt;p&gt;访问 &lt;code&gt;http://127.0.0.1/docs&lt;/code&gt; 即可&lt;/p&gt;
&lt;h1&gt;效果&lt;/h1&gt;
&lt;p&gt;&lt;img alt="api1" src="img/edx/api/api1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="api2" src="img/edx/api/api2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;展示接口参数，可以直接在这里与接口往来数据&lt;/p&gt;
&lt;p&gt;&lt;img alt="api3" src="img/edx/api/api3.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;下边是我扩展的接口：&lt;/p&gt;
&lt;p&gt;&lt;img alt="api4" src="img/edx/api/api4.jpeg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sun, 16 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-16:edx-api-with-django-rest-swagger.html</guid><category>edx</category></item><item><title>LTI与XBlock</title><link>/LTI-and-XBlock.html</link><description>&lt;p&gt;首先我们知道LTI与XBlock都是扩展edx系统的手段,相关介绍可看考&lt;a href="https://open.edx.org/extending-edx"&gt;extending-edx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在&lt;a href="http://wwj718.github.io/bigbluebutton-integrated-into-edx-with-lti.html"&gt;上一篇文章&lt;/a&gt;的结尾，我提到我试图写一个XBlock来包装外部远程会议系统。这样一来可以做更细粒度的控制。&lt;/p&gt;
&lt;p&gt;这是个很常见且有价值的需求，edx用户如何在edx之外的系统中学习，并且使其看去是个整体，学习进度与成绩都能一体化。&lt;/p&gt;
&lt;h1&gt;想象空间&lt;/h1&gt;
&lt;p&gt;诸如考试系统，仿真系统，问卷系统，我们不必在edx内部构建，完全可以在edx使用LTI来利用外部组件，而许多教育相关的系统都支持LTI。这里列出了许多支持LTI
的组件:&lt;a href="http://www.imsglobal.org/cc/statuschart.cfm"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;为了做到更细粒度的控制，我们需要把LTI和XBlock进行整合，目的在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用LTI与外部系统通信&lt;/li&gt;
&lt;li&gt;使用XBlock来控制个性化的数据(提供存储功能)，用户身份，以及相关的业务逻辑，由于XBlock可以访问edx的所有代码，所以即便整合到成绩系统中也是可以的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么思路就是使用XBlock来包装LTI组件。&lt;/p&gt;
&lt;p&gt;我个人对LTI相关的知识并不熟悉，只知道大致的使用方法，自己来实现估计很困难。所以去edx google group寻找一番，发现@James Tauber 提到Queensland大学（澳大利亚）的@John Zornig已经做出了LTI XBlock原型。@John Zornig本人在帖子中冒出来说:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm the technical lead on the edX team at UQ.  We've been building an LTI XBlock that will allow LTI tools to be integrated into XBlock based courses. The XBlock is at a point where it can configure and launch external tools from the XBlock workbench and we are waiting on XBlock support in the Studio and edX LMS so that we can deal with some of the deeper integration issues. We do intend for it to be opensourced but currently the code is just available in-house. So far we've implemented LTI 1.x with Outcomes and the Memberships and Settings extensions. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看情况似乎是说有打算开源，只是当时XBlock本身有待完善。&lt;/p&gt;
&lt;p&gt;时间一晃过去了两年，XBlock倒是很完善了，似乎没有看到他们开源LTI XBlock项目，不知道是不是中途夭折了。&lt;/p&gt;
&lt;p&gt;邮件组去年就这个问题还有人追问，@John Zornig却没发言，如果小伙伴们有看到这个项目，求发邮件通知一下我。&lt;/p&gt;
&lt;p&gt;本来下午想给@John Zornig发个邮件问下的，最近vpn一直无法连接 orz&lt;/p&gt;
&lt;p&gt;另外如果有小伙伴近期在整合edx和外部系统的也欢迎交流&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 11 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-11:LTI-and-XBlock.html</guid><category>edx</category></item><item><title>integrated bigbluebutton(bbb) to edx</title><link>/bigbluebutton-integrated-into-edx-with-lti.html</link><description>&lt;h1&gt;bigbluebutton是什么鬼&lt;/h1&gt;
&lt;p&gt;这是个远程会议系统，支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多用户在线视频/语音会议&lt;/li&gt;
&lt;li&gt;会议录制&lt;/li&gt;
&lt;li&gt;远程教学&lt;/li&gt;
&lt;li&gt;支持演讲模式（切换主讲人，听众）&lt;/li&gt;
&lt;li&gt;支持在线演讲模式，共享文件，批注，讨论&lt;/li&gt;
&lt;li&gt;支持上传图片，文件（word，pdf，excel），共享，批注&lt;/li&gt;
&lt;li&gt;支持以lti方式集成&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;展示下成果先&lt;/h1&gt;
&lt;p&gt;在lms中&lt;/p&gt;
&lt;p&gt;&lt;img alt="4" src="img/edx/meeting/bigblue4.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="5" src="img/edx/meeting/bigblue5.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="6" src="img/edx/meeting/bigblue6.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;在studio中设置LTI组件参数&lt;/p&gt;
&lt;p&gt;&lt;img alt="7" src="img/edx/meeting/bigblue7.jpeg" /&gt;&lt;/p&gt;
&lt;h1&gt;edx是什么鬼&lt;/h1&gt;
&lt;p&gt;这是个野心勃勃的项目&lt;/p&gt;
&lt;p&gt;话说回来，你都不知道edx是什么鬼的话，你看这个干嘛orz，赶紧关了浏览器，写暑假作业去&lt;/p&gt;
&lt;h1&gt;LTI是什么鬼&lt;/h1&gt;
&lt;p&gt;LTI的全称是Learning Tools Interoperability&lt;/p&gt;
&lt;p&gt;这是一种扩展既有系统的方式&lt;/p&gt;
&lt;p&gt;顺便说一下，edx的LTI基于&lt;a href="http://www.imsglobal.org/LTI/v1p1p1/ltiIMGv1p1p1.html"&gt;IMS Global Learning Tools Interoperability&lt;/a&gt; version 1.1.1 ]&lt;/p&gt;
&lt;p&gt;而bigbluebutton支持的是1.0 , 不过似乎兼容&lt;/p&gt;
&lt;p&gt;更多的组件可参考&lt;a href="http://www.imsglobal.org/cc/statuschart.cfm"&gt;www.imsglobal.org/&lt;/a&gt;,其中就列出了bigbluebutton&lt;/p&gt;
&lt;h1&gt;关键步骤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在studio中，参考：&lt;a href="http://edx-partner-course-staff.readthedocs.org/en/latest/exercises_tools/lti_component.html"&gt;lti_component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在bigbluebutton中，参考&lt;a href="http://docs.bigbluebutton.org/install/lti.html#installation-of-lti-module"&gt;installation-of-lti-module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外google group中也有这个问题的：&lt;a href="https://groups.google.com/forum/#!topic/edx-code/zjbt-tPiJsA"&gt;讨论&lt;/a&gt;，参与者中包括bigbluebutton的项目负责人&lt;/p&gt;
&lt;p&gt;经过以上工作我们就能在edx中使用bigbluebutton来开设在线课堂或是远程会议了，使用起来很像课程组件，可以嵌入到任意单元中，而且互相独立（这个特性在bigbluebutton demo中是做不到的）&lt;/p&gt;
&lt;p&gt;我们在bigbluebutton LTI课件模块中，可以手动设置以下参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;record&lt;/li&gt;
&lt;li&gt;duration&lt;/li&gt;
&lt;li&gt;welcome&lt;/li&gt;
&lt;li&gt;voicebridge&lt;/li&gt;
&lt;li&gt;mode&lt;/li&gt;
&lt;li&gt;all_moderators&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外edx LTI还提供了诸如是集成到页面内还是启用新页面之类的选项，很是周到。甚至外部系统还可以回传学生得分情况&lt;/p&gt;
&lt;h1&gt;下一步计划&lt;/h1&gt;
&lt;p&gt;弄清lti的原理，猜测是get传参。&lt;/p&gt;
&lt;p&gt;据此打造XBlock，这样更够做到基于用户角色更细度的控制，诸如设置学生为viewer，设置课程团队成员为moderator，带来更高灵活性，以及更好的可编程特性&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-10:bigbluebutton-integrated-into-edx-with-lti.html</guid><category>edx</category></item><item><title>使用LTI将bigbluebutton集成到edx中</title><link>/bigbluebutton-integrated-into-edx-with-lti.html</link><description>&lt;h1&gt;bigbluebutton是什么鬼&lt;/h1&gt;
&lt;p&gt;这是个远程会议系统，支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多用户在线视频/语音会议&lt;/li&gt;
&lt;li&gt;会议录制&lt;/li&gt;
&lt;li&gt;远程教学&lt;/li&gt;
&lt;li&gt;支持演讲模式（切换主讲人，听众）&lt;/li&gt;
&lt;li&gt;支持在线演讲模式，共享文件，批注，讨论&lt;/li&gt;
&lt;li&gt;支持上传图片，文件（word，pdf，excel），共享，批注&lt;/li&gt;
&lt;li&gt;支持以lti方式集成&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;展示下成果先&lt;/h1&gt;
&lt;p&gt;在lms中&lt;/p&gt;
&lt;p&gt;&lt;img alt="4" src="img/edx/meeting/bigblue4.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="5" src="img/edx/meeting/bigblue5.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="6" src="img/edx/meeting/bigblue6.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;在studio中设置LTI组件参数&lt;/p&gt;
&lt;p&gt;&lt;img alt="7" src="img/edx/meeting/bigblue7.jpeg" /&gt;&lt;/p&gt;
&lt;h1&gt;edx是什么鬼&lt;/h1&gt;
&lt;p&gt;这是个野心勃勃的项目&lt;/p&gt;
&lt;p&gt;话说回来，你都不知道edx是什么鬼的话，你看这个干嘛orz，赶紧关了浏览器，写暑假作业去&lt;/p&gt;
&lt;h1&gt;LTI是什么鬼&lt;/h1&gt;
&lt;p&gt;LTI的全称是Learning Tools Interoperability&lt;/p&gt;
&lt;p&gt;这是一种扩展既有系统的方式&lt;/p&gt;
&lt;p&gt;顺便说一下，edx的LTI基于&lt;a href="http://www.imsglobal.org/LTI/v1p1p1/ltiIMGv1p1p1.html"&gt;IMS Global Learning Tools Interoperability&lt;/a&gt; version 1.1.1 ]&lt;/p&gt;
&lt;p&gt;而bigbluebutton支持的是1.0 , 不过似乎兼容&lt;/p&gt;
&lt;p&gt;更多的组件可参考&lt;a href="http://www.imsglobal.org/cc/statuschart.cfm"&gt;www.imsglobal.org/&lt;/a&gt;,其中就列出了bigbluebutton&lt;/p&gt;
&lt;h1&gt;关键步骤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在studio中，参考：&lt;a href="http://edx-partner-course-staff.readthedocs.org/en/latest/exercises_tools/lti_component.html"&gt;lti_component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在bigbluebutton中，参考&lt;a href="http://docs.bigbluebutton.org/install/lti.html#installation-of-lti-module"&gt;installation-of-lti-module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外google group中也有这个问题的：&lt;a href="https://groups.google.com/forum/#!topic/edx-code/zjbt-tPiJsA"&gt;讨论&lt;/a&gt;，参与者中包括bigbluebutton的项目负责人&lt;/p&gt;
&lt;p&gt;经过以上工作我们就能在edx中使用bigbluebutton来开设在线课堂或是远程会议了，使用起来很像课程组件，可以嵌入到任意单元中，而且互相独立（这个特性在bigbluebutton demo中是做不到的）&lt;/p&gt;
&lt;p&gt;我们在bigbluebutton LTI课件模块中，可以手动设置以下参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;record&lt;/li&gt;
&lt;li&gt;duration&lt;/li&gt;
&lt;li&gt;welcome&lt;/li&gt;
&lt;li&gt;voicebridge&lt;/li&gt;
&lt;li&gt;mode&lt;/li&gt;
&lt;li&gt;all_moderators&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外edx LTI还提供了诸如是集成到页面内还是启用新页面之类的选项，很是周到。甚至外部系统还可以回传学生得分情况&lt;/p&gt;
&lt;h1&gt;下一步计划&lt;/h1&gt;
&lt;p&gt;弄清lti的原理，猜测是get传参。&lt;/p&gt;
&lt;p&gt;据此打造XBlock，这样更够做到基于用户角色更细度的控制，诸如设置学生为viewer，设置课程团队成员为moderator，带来更高灵活性，以及更好的可编程特性&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-10:bigbluebutton-integrated-into-edx-with-lti.html</guid><category>edx</category></item><item><title>edx数据分析相关的项目</title><link>/edx-analyse-project.html</link><description>&lt;h1&gt;综述&lt;/h1&gt;
&lt;p&gt;edx的数据分析这块，国内几乎全部无法正常使用，不得不说是个遗憾。&lt;/p&gt;
&lt;p&gt;edx在数据分析这块的功能其实极其强大，而且潜力极大，因为数据的开放性以及强大的track log系统。&lt;/p&gt;
&lt;p&gt;目前这这一块相关的项目中，我对以下几个十分关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方的insights&lt;/li&gt;
&lt;li&gt;edX 学习面板挑战赛的获胜作品&lt;/li&gt;
&lt;li&gt;加拿大 麦吉尔大学的edx数据分析报表项目&lt;/li&gt;
&lt;li&gt;西班牙  University Carlos III of Madrid（马德里卡洛斯三世大学)为edx扩充了12项可视化分析结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前三个我此前做过介绍，在此就不赘述了，有兴趣的小伙伴可以翻阅我此前的文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wwj718.github.io/edx-analytics-pipeline-code-analysis.html"&gt;edx-analytics-pipeline源码解读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wwj718.github.io/edX-Learning-Dashboard-Challenge.html"&gt;edX 学习面板挑战赛落幕&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wwj718.github.io/edx-tracking-logs-data-research.html"&gt;基于tracking logs的数据分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;来自University Carlos III of Madrid的数据分析项目&lt;/h1&gt;
&lt;p&gt;今天介绍下University Carlos III of Madrid的工作成果，这是个令人热血沸腾的实验项目。&lt;/p&gt;
&lt;p&gt;项目地址&lt;a href="https://github.com/jruiperezv/ANALYSE"&gt;jruiperezv/ANALYSE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gradient实验室是基于edx-platform hotfix-2014-11-17来开发这个项目的，我前段时间把它迁移到了birch上。目前大部分功能已经可用，存在的问题是效率有待提高.国内使用的话，还需要解决几个youtube接口相关的问题，否则无法使用。&lt;/p&gt;
&lt;h2&gt;技术层面上它是什么&lt;/h2&gt;
&lt;p&gt;它仅是一个django app，所以耦合度控制得很好，易于迁移&lt;/p&gt;
&lt;p&gt;每次数据分析是通过celery在后台执行分析任务（设置时间间隔）&lt;/p&gt;
&lt;h2&gt;它干了什么&lt;/h2&gt;
&lt;p&gt;它首先会在课程面板上添加一个tab,就像这样
&lt;img alt="analysis1" src="img/edx/jruiperezv_analysis/analysis1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;数据分析面板里有以下三类内容
&lt;img alt="analysis2" src="img/edx/jruiperezv_analysis/analysis2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3个习题相关的可视化模块&lt;/li&gt;
&lt;li&gt;4个学生观看视频相关的可视化模块&lt;/li&gt;
&lt;li&gt;5个学生课程活动相关的可视化模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;特性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;课程教员&lt;/code&gt;可以查看选课学生群体的学习状况，也可以单独查看单个学生。既可以看到课程学习概况，也可以追踪每个学生的进度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;选课学生&lt;/code&gt;可以看到自己的学习进度，以此做出反思&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;没图说个xx&lt;/h2&gt;
&lt;p&gt;好的，这就上图&lt;/p&gt;
&lt;p&gt;&lt;img alt="analysis3" src="img/edx/jruiperezv_analysis/analysis3.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="analysis4" src="img/edx/jruiperezv_analysis/analysis4.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="analysis5" src="img/edx/jruiperezv_analysis/analysis5.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="analysis6" src="img/edx/jruiperezv_analysis/analysis6.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="analysis7" src="img/edx/jruiperezv_analysis/analysis7.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="analysis8" src="img/edx/jruiperezv_analysis/analysis8.jpeg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 07 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-07:edx-analyse-project.html</guid><category>edx</category></item><item><title>将edx作为子系统</title><link>/edx-as-subsystem.html</link><description>&lt;h1&gt;需求描述&lt;/h1&gt;
&lt;p&gt;有一种需求可能蛮典型，将edx作为子系统，外部系统需要与edx通信，诸如取得学员的学习状况，学习成绩，个人信息&lt;/p&gt;
&lt;p&gt;又或者需要从企业系统中将用户批量导入edx中&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;尽管我们可以通过写脚本来应对以上需求，但我更喜欢将edx视为一个独立/有应答能力的系统，它能够响应外部网站管理级别的请求，而不仅仅是普通用户级别，它与外部的通信都通过RESTful风格的API来做。如此一来edx就能作为子系统与企业其他系统友好协作&lt;/p&gt;
&lt;h3&gt;流程&lt;/h3&gt;
&lt;p&gt;client携带令牌(access token)去访问edx系统，edx对其进行身份权限验证，通过的话，接受其请求。这些都是透明的,edx所采用的django-rest-framework框架对权限的控制设计得很棒 &lt;/p&gt;
&lt;p&gt;这方面的知识我在&lt;a href="http://wwj718.github.io/edx-api.html"&gt;启用edx的API&lt;/a&gt;里谈到过&lt;/p&gt;
&lt;p&gt;核心概念是oauth2和RESTful风格的API&lt;/p&gt;
&lt;p&gt;edx内部已经有许多现成的api接口：学生相关的，课程内容相关的，注册课程相关的，等等，更多细节可以参考&lt;a href="http://edx-platform-api.readthedocs.org/en/latest/index.html"&gt;edx-platform-api&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;扩展&lt;/h3&gt;
&lt;p&gt;为了实现我们自己的需求，现成的接口肯定是不够用的，我们需要扩展edx的api，我去年为了给手机端提供论坛接口，使用django来写，痛苦不堪，在此推荐大家使用django-rest-framework来为edx扩展接口，至于怎么做可以参考&lt;a href="http://www.django-rest-framework.org/"&gt;django-rest-framework&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;举个栗子&lt;/h1&gt;
&lt;p&gt;我们就拿上头的用户批量导入为例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先建立个自己的django app，我将其起名为siteapi（站点管理级别的api接口）&lt;/li&gt;
&lt;li&gt;确定URI： siteapi/users&lt;/li&gt;
&lt;li&gt;写业务逻辑&lt;/li&gt;
&lt;li&gt;client 携带&lt;code&gt;access token&lt;/code&gt;往siteapi/users post用户数据（推荐使用json）&lt;/li&gt;
&lt;li&gt;edx验证用户身份，导入用户，返回确认信息给client&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-05:edx-as-subsystem.html</guid><category>edx</category></item><item><title>搭建远程会议系统(简单得集成到edx里)</title><link>/bigbluebutton-install.html</link><description>&lt;p&gt;这一周简直就是在客串系统管理员啊，搭建各种服务还是挺有意思的&lt;/p&gt;
&lt;p&gt;公司目前人员比较分散，挺多城市都有，可能需要召开远程会议什么的。&lt;/p&gt;
&lt;p&gt;edx项目中似乎也有远程教学的需求，所以准备搭建一个远程会议系统&lt;/p&gt;
&lt;h1&gt;github&lt;/h1&gt;
&lt;p&gt;首先当然是去github搜索一番，键入conference。按照star降序排列我们看到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/muaz-khan/WebRTC-Experiment"&gt;WebRTC-Experiment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bigbluebutton/bigbluebutton"&gt;bigbluebutton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/plivo/voicechat"&gt;voicechat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;筛选一番觉得bigbluebutton挺靠谱的，就试着搭建它吧&lt;/p&gt;
&lt;h1&gt;install bigbluebutton&lt;/h1&gt;
&lt;p&gt;按照官方文档就好:&lt;a href="htt//docs.bigbluebutton.org/install/install.html"&gt;install&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;LTI相关&lt;/h1&gt;
&lt;p&gt;下一步的计划是使用LTI嵌入到edx中，这样一来在线的演讲/协同作业以及语音/视频讨论就可行了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/learning-tools-interoperability"&gt;learning-tools-interoperability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx-partner-course-staff.readthedocs.org/en/latest/exercises_tools/lti_component.html"&gt;lti_component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.bigbluebutton.org/install/lti.html#installation-of-lti-module"&gt;installation-of-lti-module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;展示一下效果(简单得集成到edx里)&lt;/h1&gt;
&lt;p&gt;目前采用的是使用js将两个系统的用户简易关联&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="img/edx/meeting/bigblue.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;视频模式，支持多人会议，音频设备可用&lt;/p&gt;
&lt;p&gt;&lt;img alt="2" src="img/edx/meeting/bigblue2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;演讲模式下支持图片/pdf/word/ppt/excel 之类的东西，方便大家交流和写写画画&lt;/p&gt;
&lt;p&gt;&lt;img alt="3" src="img/edx/meeting/bigblue3.jpeg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-04:bigbluebutton-install.html</guid><category>edx</category></item><item><title>XBlock的国际化和本地化问题</title><link>/XBlocks-I18N.html</link><description>&lt;p&gt;此前遇到过XBlock中translation相关的问题，解决得很是敷衍，上周末@MT兄也提到这个问题，于是认真解决了下&lt;/p&gt;
&lt;h1&gt;需求场景&lt;/h1&gt;
&lt;p&gt;我们可能在两类场景中需要考虑translation相关的问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用国外的开发者的XBlock,需要考虑汉化&lt;/li&gt;
&lt;li&gt;自己做的XBlock，想贡献给社区&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于第一个问题，直接看下边的解决方案就行。对于第二个问题，需要我们在代码和模板里标注翻译字符串&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#在代码里
from django.utils.translation import ugettext as _
_(&amp;quot;hello world&amp;quot;)
#在模板里,首先将 {% load i18n %} 放在模板最前面
&amp;lt;title&amp;gt;{% trans &amp;quot;hello world&amp;quot; %}&amp;lt;/title&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;解决方案&lt;/h1&gt;
&lt;h3&gt;使用mako模板&lt;/h3&gt;
&lt;p&gt;此前在群里同@Datochen兄讨论过这个话题，他当时的解决方案是使用mako模板，mako模板支持unicode，所以可以直接写中文。这个方案无法解决以上的两个问题，它能做的是允许你在自己开发的XBlock里写中文字符串&lt;/p&gt;
&lt;p&gt;具体的做法可以参考@Datochen兄的&lt;a href="http://icfly.cn/post/18.html"&gt;博客&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;使用django的国际化机制&lt;/h3&gt;
&lt;p&gt;为了解决以上两个问题，我决定采用django的国际化机制&lt;/p&gt;
&lt;p&gt;思路是将XBlock伪装成django app&lt;/p&gt;
&lt;p&gt;具体步骤如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将XBlock软链接到django app目录下&lt;/li&gt;
&lt;li&gt;进入XBlock，mkdir locale&lt;/li&gt;
&lt;li&gt;收集翻译字符串，生成.po文件：django-admin.py makemessages -l zh_CN&lt;/li&gt;
&lt;li&gt;翻译po文件&lt;/li&gt;
&lt;li&gt;在XBlock里编译:django-admin.py compilemessages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，我觉得软链接那一步应该可有可无，只要进入到virtualenv环境里，不过还没做测试&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://www.djangobook.com/en/2.0/chapter19.html"&gt;Internationalization&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate><guid>tag:,2015-08-03:XBlocks-I18N.html</guid><category>edx</category></item><item><title>开源、社区、囚徒困境及其他</title><link>/opensource-community-prisoner-dilemma-and-others.html</link><description>&lt;p&gt;亚当斯密在《国富论》中写下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们期望的晚餐并非来自屠夫、酿酒师和面包师的恩惠，而是来自他们对自身利益的关切。我们不是向他们乞求仁慈，而是诉诸他们的自利心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;开源&lt;/h1&gt;
&lt;p&gt;我是一名开源拥趸，从大学起便热衷于参与开源项目以及相关活动，无论线上还是线下。&lt;/p&gt;
&lt;p&gt;上半年刚读完《大教堂与集市》,这本书被大家视其为开源世界的《圣经》，也的确担得起这个赞誉。&lt;/p&gt;
&lt;p&gt;书中关于开源为何取得如此成功的论述,令人震惊。在作者的观察下，技术社区广泛接受开源几乎是理所当然。即便作为经济学上的理性人，也必然会采取这种做法。&lt;/p&gt;
&lt;h3&gt;个人层面&lt;/h3&gt;
&lt;p&gt;作为个人，愿意参与开源，理由是充足的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从这些优秀项目源码中学习编程技巧&lt;/li&gt;
&lt;li&gt;在这些项目基础上开展自己的工作来节省时间，提高工作效率&lt;/li&gt;
&lt;li&gt;通过github与世界各地优秀程序员协作，学习协作工具的使用以及协作方式本身（这比我通过看书来学习git和其他项目管理工具效率高上数倍）&lt;/li&gt;
&lt;li&gt;享受编程的乐趣，而乐趣预示着效率的峰值&lt;/li&gt;
&lt;li&gt;与世界上最好的程序员一起工作，而不是与那些恰巧为他们的公司所雇佣的少数几个程序员一起工作，是一种无与伦比的享受（《大教堂与集市》）&lt;/li&gt;
&lt;li&gt;个人在团体中声望的提升是志愿者活动背后的基本驱动力（同上）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;公司层面&lt;/h3&gt;
&lt;p&gt;可作为逐利的公司，参与其中（目前正如火如荼），乐意贡献自己的代码，我是十分不解的（读这本书之前），它们不怕竞争者吗？它们不怕搭便车吗？它们出于社会责任感吗？出于情怀吗？&lt;/p&gt;
&lt;p&gt;开源运动取得今天的成就,不是因为"开源是道德正确的"或"软件闭源是错误的"，而仅仅是在不断演化的军备竞赛,闭源世界输给了开源社区，因为后者可以在一个问题上，投入比前者多几个数量级的熟练技术工时&lt;/p&gt;
&lt;p&gt;当更多人试用你们的代码，目光聚集的地方，bug是无处隐藏的。&lt;/p&gt;
&lt;p&gt;对于公司而言，公开源代码是利用外部资源的最佳方式。公司开源出自己代码，引起了社区的兴趣，那么对于公司的产品而言，就等同于获得了整个社区的开发力量&lt;/p&gt;
&lt;p&gt;这个项目将不断茁壮，贡献了这个项目的公司，其内部开发者往往也是社区的核心，那么项目解决的需求/痛点首先是该公司最需要解决的。&lt;/p&gt;
&lt;p&gt;当这种收益大过成本和风险时，诸如该技术不涉及公司业务核心，只是基础性的技术工作，联盟中不存在直接竞争对手，或是即便存在对手，但在这个项目上合作是双赢时，这些时候，公司作为经济学上追求自身利益最大化的“理性人”，便有动机这样做。&lt;/p&gt;
&lt;p&gt;实际上，有趣的是，“你已经上船了”，公司的确可以官方申明说不参与，却无法阻止其员工参与，上边列出了个人参与社区的激励因素。社区能提高员工效率，更少的加班，更多的时间陪妹子（假设程序员是有妹子的！尽管是个弱假设），他自然有动机去求助和协作。公司说你不许参与，这种行政式的限制，除了无效，还容易把员工推向竞争对手。&lt;/p&gt;
&lt;p&gt;拥抱趋势往往比抗拒来得明智。&lt;/p&gt;
&lt;p&gt;参与社区的公司，在共同完善他们使用的开源项目，随着项目的完善，得到行业内的认可，最后这个项目可能成为业界首选平台，这实际上是在拓宽他们的市场，而成果往往由成员公司内部分割。&lt;/p&gt;
&lt;p&gt;同时参与社区的开发者们，对该项目已经熟悉，他们都是公司的潜在的雇员啊，连培训成本都免了，这对于开发者匮乏的领域，尤其有利，目前edx用户便是处于这样的境地&lt;/p&gt;
&lt;p&gt;此外公司乐于开源当然还有其他因素：提高公司对开发者的吸引力，让员工获取外部信息，提高他们的效率之类。我相信，肯定也有道德因素，一些优秀的公司出于社会责任感，与回馈社区的热心（毕竟我们用的都是mit和哈佛开源贡献的东西（edx））&lt;/p&gt;
&lt;p&gt;我们在情感上喜欢这些乐于分享的公司，可能的话，也愿意加入他们，不过，道德是用来律己的而不是律人，我们愿意分享却无法要求别人也这样做，道德不是一种健壮的机制，尤其在商业世界，我们应当做的是让大家意识到开源许多时候在经济上也是一件理性行为。&lt;/p&gt;
&lt;p&gt;我们目前也看到国外确实很多围绕edx的公司在贡献自己的工作成果。诸如appsembler，IONISx等。&lt;/p&gt;
&lt;h3&gt;edx与开源&lt;/h3&gt;
&lt;p&gt;edx本身是个开源项目。&lt;br /&gt;
由mit和哈佛大学于2013年6月开放源代码。&lt;br /&gt;
截止到今天（2015.07.18），edx项目组一共建立了106个相关项目，单单为核心组件edx-platform贡献过代码的就有来自世界各地的231人，仅在主分支上就获得31583次commit，被1191个公司或个人fork。&lt;/p&gt;
&lt;h1&gt;社区&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Community&amp;gt;Code&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是Apache社区的口号，意思是Community Over Code（社区胜于代码）&lt;/p&gt;
&lt;p&gt;一个开源项目的可用性，很大程度依赖于社区的生态环境，这关系到项目的潜力，项目的健壮性，采用这个项目时，遇到问题能否被及时解决，或者是否可能被解决，是否有足够数量和能力的开发者群体，这些都关系到最终用户是否愿意采用这个开源产品，以及采用这个产品的公司在发展壮大过程中，遇到的技术瓶颈能否被快速解决。&lt;/p&gt;
&lt;p&gt;如果社区健康茁壮，参与其中的开发者的日常工作便十分轻松，遇到问题可以随时解决，参与其中的各家公司在使用该开源产品的时候，节约的远远不止是资金成本，更重要的是时间成本，后者对于初创企业的价值是不可用金钱衡量的&lt;/p&gt;
&lt;h3&gt;edx国内社区现状&lt;/h3&gt;
&lt;p&gt;edx国内社区的现状就是没有国内社区。尽管国内edx用户已经不少，而且据我所知还在不断增加，多数是在埋头而做，重新踩一遍前人踩过所有的坑，花个一年半载的时间，才理清最基本的工作流。&lt;/p&gt;
&lt;p&gt;目前我们能看到的热心分享的开发者并不算多，在群里也都是熟脸：热心于edx的推广的&lt;a href="http://edustack.org/"&gt;@MT兄&lt;/a&gt;,热心于分享技术的&lt;a href="https://idefs.com/"&gt;@竹轩兄&lt;/a&gt;,在群里热心于回答新手问题的&lt;a href="http://www.ui66.com/"&gt;@DatoChen兄&lt;/a&gt;，@萧峰兄，等等，在此不一一列举&lt;/p&gt;
&lt;p&gt;我接触edx较迟（14年），在入门edx之初，除去官方社区的帮助，便是在国内的这些博客中受益最大。&lt;/p&gt;
&lt;p&gt;平时与一些采用或决定采用edx的公司/团队闲聊的时候，他们多数期待有一个可以依赖的社区。这样可以极大降低edx用户的风险，这是是否采用这个产品的重要影响因素。&lt;/p&gt;
&lt;h3&gt;edx社区的必要性&lt;/h3&gt;
&lt;p&gt;上边已经提了很多。再补充一些。&lt;br /&gt;
由于国内网络环境的特殊性，我们在国内使用edx的时候。有许多需要自力更生解决的问题。即便是在难度相对不高的安装门槛上，就让许多公司望而却步，而继续往前的小伙伴，也多是跌跌撞撞，头破血流。&lt;/p&gt;
&lt;p&gt;更遑论本地化相关的东西：主题定制，课程拓展，课件打造(xblock)，购物车，开发数据接口，数据分析和可视化...&lt;/p&gt;
&lt;p&gt;一些强大的功能，edx都为我们打造好了，由于依赖于S3，amazon计算组件，目前在国内多数无法正常使用，这些是本地化的难处所在。&lt;/p&gt;
&lt;p&gt;而这些核心组件的本地化，各个公司之间并不涉及直接的竞争（都是edx公开的源码），而是一根绳上的蚂蚱。mooc平台也不只edx，尽管我认为它是最强大的，可是目前在国内，许多强大的特性拿不来用，那么原本打算采用edx的公司，转而采用外表看去更华丽的mooc平台，这是整个edx用户群的损失。&lt;/p&gt;
&lt;p&gt;那么以上这些基础的工作，是每个公司势单力薄地都踩一遍坑呢，还是集大家的力量，一起提高平台的可用性。&lt;/p&gt;
&lt;h3&gt;社区运作&lt;/h3&gt;
&lt;p&gt;关于社区如何运作，我最初的想法十分简单，几乎觉得这是一件不必多想的事呀，就像大多开源社区那样就好啦，集市一般，大家凭兴趣参与，自由松散，在github上，喜欢你就fork我。&lt;/p&gt;
&lt;p&gt;可是《大教堂与集市》里也提到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;显然，你不可能从零开始实施集市模式。可以用集市模式测试、排错和完善项目，但以集市模式从零开始一个项目是非常困难的。Linus没有这么试过，我也没有。开发者社区从成立伊始，就需要一个可以运行和测试的东西&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而目前edx适合国内的生产版本并没有，我此前发布过基于docker的国内开发版本：&lt;a href="http://wwj718.github.io/docker-edx-birch-1.html"&gt;发布基于docker的edx birch-1国内版本&lt;/a&gt;，目前已有数名开发者愿意一起来推进docker版的生产版本&lt;/p&gt;
&lt;p&gt;社区如何起步的问题，其实我们此前都没想好，陆续面对一些质疑，才认真考虑这个问题。&lt;/p&gt;
&lt;p&gt;这些质疑主要集中在：如何保证这样一种松散的组织能高效的运作，尤其在最艰难的初期；如何应对参与各方的利益冲突；如何保证核心开发者在受到利益诱惑的时候，不会中途跑路。&lt;/p&gt;
&lt;p&gt;@yuquan兄大半月前同我说的openstack国内社区核心人员的聚散，令人唏嘘。这些都是不得不面对的问题。&lt;/p&gt;
&lt;p&gt;我们还面临以下问题&lt;/p&gt;
&lt;h1&gt;囚徒困境&lt;/h1&gt;
&lt;p&gt;这里主要谈论参与社区的各家公司之间的博弈。&lt;/p&gt;
&lt;p&gt;我们知道，长期协作对社区参与者群体是有益的，纳什均衡趋于帕累托最优，可是对于参与协作的各方（公司），在寻求自身利益的最大化的时候（无可厚非），存在这样一种激励：获取社区成果的同时，不对外贡献。这样一来在获得到他人成果的同时，还保留了自己的私货。&lt;/p&gt;
&lt;p&gt;这显然是协作中对每个参与公司而言的最佳策略。&lt;/p&gt;
&lt;p&gt;这种行为，最糟糕的地方，不在于自私，而是如此一来会极大打击贡献者的意愿，最后的结果便是社区逐渐萎靡。&lt;/p&gt;
&lt;p&gt;国外的情况有些不同，往往是大公司开源基础组件，社区去完善它，有核心团队支持，有资金支持，有热心且时间充裕的编程爱好者，如此一来激励因素变得多元。&lt;/p&gt;
&lt;p&gt;而目前我们的境地是，edx门槛不低，又不是通用的技术，注定小众，有开发能力的参与者，多数分布在各个以此为产品的公司，纯粹的编程爱好者是十分少见的，如此一来，对公司的激励因素就很容易造成囚徒困境。&lt;/p&gt;
&lt;p&gt;我们知道，囚徒困境的解决方案之一是重复博弈，重复博弈后的结果就是趋于合作。&lt;/p&gt;
&lt;p&gt;那么如何形成重复博弈的局面呢&lt;/p&gt;
&lt;p&gt;对于以上的这些问题，在与一些热心开发者以及部分公司交流中，我们大致理出了以下的框架&lt;/p&gt;
&lt;h1&gt;基金会&lt;/h1&gt;
&lt;p&gt;初期我们需要保证事情的效率，在推出本土化的社区版之前，松散的协作方式并不合适,也许我们需要一个基金会来推动它&lt;/p&gt;
&lt;p&gt;成立基金会的动机有很多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;独立于任何一家公司的控制&lt;/li&gt;
&lt;li&gt;参与社区的公司，通过基金会赞助社区。社区以此做一些基础性的事务，诸如：&lt;ul&gt;
&lt;li&gt;社区购买国外测试服务器，每周定期安装edx-platform，这样各个公司不需要定期安排人员去跟踪新特性，这样节约大量资金和时间&lt;/li&gt;
&lt;li&gt;推进社区发布版，在官方发布新的稳定版的时候（好比最近准备发布的Cypress版），保持跟新，负责将edx社区版update到新版本上，愿意尝试新特性的人，只需要docker pull下来就行，复杂度都移交给了社区&lt;/li&gt;
&lt;li&gt;可以随时建立小分队，利用开发者的业余时间，对一些难啃的基础问题进行攻克，诸如数据分析和可视化，相信这些特性大家都垂涎很久了。&lt;/li&gt;
&lt;li&gt;文档翻译和汉化的问题，也可以由社区赞助来推动，目前@MT号召学生在做这件事，如果社区愿意赞助他们的话，支付的成本并不高，却可以获得实时跟进的汉化版本，而各个公司不必再为此费心&lt;/li&gt;
&lt;li&gt;此类基础性的工作还有许多，通过社区赞助的方式，让大多数公司能够从这些琐事脱身，而专注在各自的业务领域&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对核心贡献者予以激励,防止其中途被拐跑。个人爱好者业余时间的参与若能获得相应激励，其对推动项目的意义可能大于大多全职人员。&lt;/li&gt;
&lt;li&gt;如此一来，在最坏的情况下（开发者们参与热情不高），也至少能通过调整激励机制，使这件事不至于夭折。而一旦初期稳定版本形成，社区很可能就围绕它进入良性循环了&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;公司为何愿意参与基金会&lt;/h3&gt;
&lt;p&gt;实际上是调整对公司的激励因素。&lt;/p&gt;
&lt;p&gt;它们将获得如下收益：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优先获得社区的技术支持。支付不到一名开发者的成本，获得的往往是超过一整支优秀团队的技术回报&lt;/li&gt;
&lt;li&gt;搭建国外代理服务器，用于方便国内服务器安装edx，由于资源有限，各个公司在赞助社区的同时，优先获得这些便利资源，来节约时间成本和降低开发难度&lt;/li&gt;
&lt;li&gt;参与社区日常任务的起草与计划&lt;/li&gt;
&lt;li&gt;作为内测成员，最先取得项目的进展和特性&lt;/li&gt;
&lt;li&gt;方便各方在不涉及业务的前提下，交换经验，各自增强自己的平台，我相信在群里热衷于交流的公司已经体会到这种甜头了&lt;/li&gt;
&lt;li&gt;一些可参考方案（为了克服囚徒困境），诸如每年评估参与公司对社区的贡献（赞助社区的热心已经贡献源码反馈bug的热心）来调整基金会成员&lt;/li&gt;
&lt;li&gt;and so on&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大体先这样，大家觉得需要吐槽的地方,不用顾虑，我心里素质很好哒，发我邮件，或是在群里直接吐槽都好: )&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 18 Jul 2015 00:00:00 +0000</pubDate><guid>tag:,2015-07-18:opensource-community-prisoner-dilemma-and-others.html</guid><category>edx</category></item><item><title>关于XBlocks</title><link>/about-XBlocks.html</link><description>&lt;blockquote&gt;
&lt;p&gt;机制,而不是策略  --《Unix编程艺术》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;偶尔收到一些开发者邮件说，想扩展edx平台本身的功能，其中多数的需求，其实都可以通过&lt;a href="https://github.com/edx/XBlock"&gt;XBlock&lt;/a&gt;来实现，我就建议说你去看看XBlock吧，这种做法很可能也是移植性最好而侵入性最小的。&lt;/p&gt;
&lt;p&gt;我前前后后写了三四个XBlock组件了，对这一块还算熟悉，最近想写&lt;a href="https://github.com/edx/XBlock"&gt;XBlock&lt;/a&gt;相关的文章，将自己的经验进行归纳，也方便给后来者做个参考。如果能帮助到你，就太棒了&lt;/p&gt;
&lt;p&gt;XBlock对这样一些团队/创业项目会特别有益，他们有很明确的业务场景（教育相关），使用edX作为基础平台，他们针对某些教育内容/科目，有一套自己的教学方案，使用这套方案优化了教学流程本身，诸如能对学生进行引导或是让其进入沉浸式学习&lt;/p&gt;
&lt;p&gt;那么这样的团队很多时候其实不需要从零开始打造一个自己的教学平台，而是以edx为基础，使用XBlock，打造自己的学习组件即可。这样一来在免费享用edx平台本身通用而强大特性的同时，又满足自己的定制需求。&lt;/p&gt;
&lt;p&gt;XBlock是个很庞杂的东西，而这个项目又在持续演进中，文档不仅不够完整，还不够稳定。要弄清楚它是个什么东西，可以用来干什么，都有哪些特性，并不容易，下边我们就针对这几个问题入手。文章的最后我会把相关资料整理汇总&lt;/p&gt;
&lt;p&gt;在此之前我先发表下我的观点，不客观，不中立，带有强烈感情色彩 :)&lt;/p&gt;
&lt;h1&gt;我的观点&lt;/h1&gt;
&lt;p&gt;我觉得它是edX最好的设计之一，通过引入一种开放的机制，让课程组件体系保持了扩展性。&lt;/p&gt;
&lt;p&gt;edx不像大多数平台，假设自己完全知道用户的需求，据此打造一个“完备”而封闭的平台，宣称为你准备好了“你一定喜欢的东西”，这种封闭而愚蠢的做法，苹果和微软似乎都很偏好，国内公司更不必说。当他们说你能这样做的时候，多数情况是说你只能这样做。&lt;/p&gt;
&lt;p&gt;开放不只是一种品味，它本身是一种聪明的策略。&lt;/p&gt;
&lt;h1&gt;那么它是什么东西&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/edx/XBlock"&gt;XBlock&lt;/a&gt;的自我描述是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;XBlock courseware component architecture&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说它是课程组件体系。课程组件是edx中很核心的一部分，这个不难理解，edx平台的学习内容都由课程组件来呈现，如果你在edx中制作过课程，应该知道我在说什么。&lt;/p&gt;
&lt;p&gt;而Xblock是用于建造课件的东西&lt;/p&gt;
&lt;p&gt;我们在edx中创建一门课程的时候，往往是叠加课程组件的过程，诸如播放控件，问题控件，论坛控件。先前的这些既有控件，叫做xmodule，后来课程团队觉得需要重构这部分，于是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are developing a second-generation API for these components called XBlocks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;和LTI的区别&lt;/h3&gt;
&lt;p&gt;那么有人可能要问，他和LTI(Learning Tools Interoperability)的区别是什么。毕竟LTI也能对LMS进行扩展呀&lt;/p&gt;
&lt;p&gt;先介绍下LTI，LTI标准可以让远程的工具和内容被嵌入LMS学习管理系统中，edx也支持LTI。&lt;/p&gt;
&lt;p&gt;两者的区别主要由以下几点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XBlocks是Python语言层级的API，他是一个具体可用的实现，而不是标准，诸如你可以轻易的使用XBlocks来为你的课程组件提供存储功能&lt;/li&gt;
&lt;li&gt;XBlocks可以用来包装LTI，你可以打造一个LTI XBlock&lt;/li&gt;
&lt;li&gt;最后，XBlocks是可直接部署在edx中的，作为一个python库的形式，而不像LTI需要跑起整个镜像来提供服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;XBlock与djangpapp的区别&lt;/h3&gt;
&lt;p&gt;关于这一点官方在xblock的介绍中说的很清楚了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;XBlocks are like miniature web applications: they maintain state in a storage layer, render themselves through views, and process user actions through handlers.&lt;/p&gt;
&lt;p&gt;XBlocks differ from web applications in that they render only a small piece of a complete web page.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;可以用来干什么&lt;/h1&gt;
&lt;p&gt;当然是用来打造你自己的课程组件啦。至于都可以做出那些花样，可以参考既有的组件，又或是wiki里列出的第三方组件:&lt;a href="https://github.com/edx/edx-platform/wiki/List-of-XBlocks"&gt;List of XBlocks&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;有哪些特性&lt;/h1&gt;
&lt;p&gt;在此主要说说在技术层面上的特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供数据存储功能，数据存在Mysql&lt;/li&gt;
&lt;li&gt;有很好的权限控制机制&lt;/li&gt;
&lt;li&gt;xblock中允许调用平台既有组件（这样一来你可以想象有多强大了）&lt;/li&gt;
&lt;li&gt;xblock之间可以通信&lt;/li&gt;
&lt;li&gt;xblock可以作为django app安装，来提供更强大的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;相关资料&lt;/h1&gt;
&lt;h2&gt;相关源码库&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/XBlock"&gt;XBlock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/xblock-utils"&gt;xblock-utils&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/xblock-sdk"&gt;xblock-sdk&lt;/a&gt; 用于开发XBlock&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xblock.readthedocs.org/"&gt;xblock.readthedocs.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/xblock-tutorial/en/latest/index.html"&gt;xblock-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;案例引导&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://opencraft.com/doc/edx/xblock/tutorial.html"&gt;tutorial&lt;/a&gt; 版本有些旧&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;XBlock第三方组件汇总&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/List-of-XBlocks"&gt;List of XBlocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;安装与配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/Installing-a-new-XBlock"&gt;Installing a new XBlock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;至于开发相关的东西，放在之后的文章里介绍&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 13 Jul 2015 00:00:00 +0000</pubDate><guid>tag:,2015-07-13:about-XBlocks.html</guid><category>edx</category></item><item><title>发布基于docker的edx birch-1国内版本</title><link>/docker-edx-birch-1.html</link><description>&lt;p&gt;北京时间，公元2015年7月3号7点49分，我一边舔着酸奶盖，一边在国内服务器上拉取下午发布到&lt;a href="https://hub.docker.com/"&gt;docker hub&lt;/a&gt;上的wwj718/edx-lite:birch-1镜像，在不需要vpn的情况下依然可行 :)&lt;/p&gt;
&lt;p&gt;那么第一版的发布工作就宣告完成啦.欢迎大家试用与反馈(我的邮箱 : wuwenjie718@gmail.com)&lt;/p&gt;
&lt;p&gt;以“北京时间xxx”开头感觉好装X，有木有！&lt;/p&gt;
&lt;p&gt;谢谢你们没有朝我扔白菜鸡蛋&lt;/p&gt;
&lt;p&gt;基础工作归功于&lt;a href="http://appsembler.com/"&gt;appsembler&lt;/a&gt;,我的版本基于他们此前的工作, 那么给人家打个广告也是应该的，appsembler这样介绍自己&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Appsembler has worked with both corporations and institutions of higher education to help them successfully implement their online learning initiatives with the Open edX™ platform.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;公司位于英国剑桥&lt;/p&gt;
&lt;p&gt;他们热衷于开源，积极回馈社区，良心企业简直是，此前我给他们写过一封邮件，询问何时发布birch版本，他们很热心回了邮件，说近来忙碌，暂时没有时间发布，因为发布前有不少清理工作，所以我自行开始这项工作。此后准备持续推进这个版本，也欢迎国内用户给与反馈，如果国内社区成形，此后将交由社区维护&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;特性&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;开箱可用fullstack&lt;/li&gt;
&lt;li&gt;增强开发环境&lt;/li&gt;
&lt;li&gt;给出一些常见定制开发的案例和脚手架：主题，xblock 等&lt;/li&gt;
&lt;li&gt;将参数设置得适合国内使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;使用&lt;/h1&gt;
&lt;h2&gt;Quick Start&lt;/h2&gt;
&lt;h4&gt;安装docker(我用的是docker1.7)&lt;/h4&gt;
&lt;p&gt;国内用户优先考虑使用：&lt;code&gt;curl -sSL https://get.daocloud.io/docker | sh&lt;/code&gt;,如果你这样做，就不必看官方推荐做法了，直接跳到&lt;code&gt;国内加速&lt;/code&gt;部分&lt;/p&gt;
&lt;p&gt;官方推荐做法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ubuntu12.04:&lt;code&gt;sudo apt-get install linux-image-generic-lts-trusty&lt;/code&gt; , &lt;code&gt;sudo reboot&lt;/code&gt; , &lt;code&gt;curl -sSL https://get.docker.com/ | sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ubuntu14.04:&lt;code&gt;curl -sSL https://get.docker.com/ | sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mac:&lt;a href="https://github.com/boot2docker/osx-installer/releases/tag/v1.7.0"&gt;boot2docker osx-installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Windows:&lt;a href="https://github.com/boot2docker/windows-installer/releases/tag/v1.7.0"&gt;boot2docker windows-installer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他操作系统可参考:&lt;a href="https://docs.docker.com/installation"&gt;docker installation&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;国内加速&lt;/h4&gt;
&lt;p&gt;https://dashboard.daocloud.io/mirror&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;echo "DOCKER_OPTS=\"\$DOCKER_OPTS --registry-mirror=http://your-id.m.daocloud.io\"" | sudo tee -a /etc/default/docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo service docker restart&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意为了获得&lt;code&gt;your-id&lt;/code&gt;，你需要注册https://dashboard.daocloud.io/mirror&lt;/p&gt;
&lt;h4&gt;拉取镜像&lt;/h4&gt;
&lt;p&gt;sudo docker pull wwj718/edx-lite:birch-1&lt;/p&gt;
&lt;h4&gt;run it&lt;/h4&gt;
&lt;p&gt;sudo docker run -itd -p 8001:80 -p 8002:18010  wwj718/edx-lite:birch-1&lt;/p&gt;
&lt;p&gt;ok！好啦！就这么简单，打开&lt;code&gt;&amp;lt;ip&amp;gt;:8001&lt;/code&gt;就可以看到lms，&lt;code&gt;&amp;lt;ip&amp;gt;:8002&lt;/code&gt;对应cms&lt;/p&gt;
&lt;h2&gt;wwj718/edx-lite:birch-1特性&lt;/h2&gt;
&lt;h3&gt;Done&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以同时作为&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack"&gt;devstack&lt;/a&gt;和&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Full-Stack"&gt;fullstack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;devstack加入了mongo调试面板&lt;/li&gt;
&lt;li&gt;devstack加入了&lt;a href="https://github.com/django-extensions/django-extensions"&gt;django-extensions&lt;/a&gt;，可以极大地方便django的开发调试工作，包括debug神器&lt;a href="https://github.com/mitsuhiko/werkzeug"&gt;Werkzeug&lt;/a&gt;都默认装好了&lt;/li&gt;
&lt;li&gt;简单优化了系统环境：中文支持，性能查看工具，编辑环境&lt;/li&gt;
&lt;li&gt;推荐使用sudo账号(edxcn:edxcn),默认的shell是fish &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Todo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;汉化&lt;/li&gt;
&lt;li&gt;theme&lt;/li&gt;
&lt;li&gt;email&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;将其作为开发环境(devstack)&lt;/h2&gt;
&lt;h3&gt;why docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;轻量化，docker比virtualbox要节约内存得多，跑edx的速度也快得多&lt;/li&gt;
&lt;li&gt;协作变得容易，团队成员之间的协作开发模式，变得与git相似，环境和开发成果的同步变得容易&lt;/li&gt;
&lt;li&gt;开发成果很容易直接部署到生产环境，几乎就是一键式的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以参考我的这篇文章:&lt;a href="http://wwj718.github.io/edx-popularize-community-docker.html"&gt;edx推广，国内社区与docker&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;use it&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker run -itd -p 8001:80 -p 8002:18010 -p 8005:5000  -p 8022:22 wwj718/edx-lite:birch-1

sudo docker ps #获取&amp;lt;container_id&amp;gt;

sudo docker exec -it &amp;lt;container_id&amp;gt; bash #进入到容器里

sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:5000 --settings devstack  #开发状态

sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms runserver_plus 0.0.0.0:5000 --settings devstack  #增强调试功能

sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms show_urls --settings devstack #show_urls

#更过增强功能可以参考[django-extensions](https://github.com/django-extensions/django-extensions)

#做相应的定制开发

#保存提交定制开发的成果，可以类比git commit
docker commit -a &amp;quot;Author&amp;quot; -m &amp;quot;commit message&amp;quot; &amp;lt;container_id&amp;gt; [REPOSITORY[:TAG]]

#push，可以类比git push
docker push [REPOSITORY[:TAG]]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;push 之后，团队成员就可以通过docker pull [REPOSITORY[:TAG]]来共享你的工作成果了&lt;/p&gt;
&lt;p&gt;代码用git管理，尽量减少docker commit&lt;/p&gt;
&lt;h3&gt;当前状态&lt;/h3&gt;
&lt;p&gt;当前的版本主要功能是为开发准备的，秀一下效果：
&lt;img alt="docker_birch1_1" src="img/edx/docker/docker_birch1_1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="docker_birch1_2" src="img/edx/docker/docker_birch1_2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="docker_birch1_3" src="img/edx/docker/docker_birch1_3.jpeg" /&gt;&lt;/p&gt;
&lt;h2&gt;将其作为生产环境(fullstack)&lt;/h2&gt;
&lt;p&gt;性能高于虚拟机，与在实体机上部署相当&lt;/p&gt;
&lt;p&gt;默认情况下，该镜像run起来后，80，18010端口对应lms，cms&lt;/p&gt;
&lt;p&gt;如果需要用作fullstack，需要使用docker -v挂载数据卷，防止数据丢失&lt;/p&gt;
&lt;p&gt;当前版本未做充足测试，只推荐小规模测试使用。&lt;/p&gt;
&lt;h3&gt;挂载数据卷&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#首先要把数据库的数据复制到宿主机器
##在容器内
/etc/init.d/mysql stop
/etc/init.d/mongodb stop
cp /var/lib/mysql /tmp -r
cp /var/lib/mongodb /tmp -r
chmod -R 777 /tmp
##在宿主机
scp -P 18022 -rp edxcn@127.0.0.1:/tmp/mongodb /opt/mongodb
scp -P 18022 -rp edxcn@127.0.0.1:/tmp/mysql /opt/mysql

sudo docker run -itd  -v  /opt/mysql:/var/lib/mysql  -v /opt/mongodb:/var/lib/mongodb -p 8001:80 -p 8002:18010 -p 8005:5000  -p 18022:22 wwj718/edx-lite:birch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上方式并不好，最好的在build的时候就处理好数据卷的问题&lt;/p&gt;
&lt;p&gt;如果不挂载数据卷的话，每次docker commit 数据都会被提交，造成image很大&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 03 Jul 2015 00:00:00 +0000</pubDate><guid>tag:,2015-07-03:docker-edx-birch-1.html</guid><category>edx</category></item><item><title>edx-analytics-pipeline源码解读</title><link>/edx-analytics-pipeline-code-analysis.html</link><description>&lt;blockquote&gt;
&lt;p&gt;提供机制，而不是策略  --《Unix编程艺术》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a href="https://github.com/edx/edx-analytics-pipeline"&gt;edx-analytics-pipeline&lt;/a&gt;是什么鬼&lt;/h1&gt;
&lt;p&gt;它这样自我介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Hadoop-based data pipeline.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/edx/edx-analytics-pipeline"&gt;edx-analytics-pipeline&lt;/a&gt;是edx数据分析和可视化的成员组件之一，主要的功能是从track log中挖掘信息。数据挖掘的业务逻辑，都在这个源码库里，接受track log作为输入,（关于track log，可以参看我此前的&lt;a href="http://wwj718.github.io/edx-tracking-logs-data-research.html"&gt;这篇文章&lt;/a&gt;）,从中提取信息，输出结果到mysql中。至于数据的呈现，主要是&lt;a href="https://github.com/edx/edx-analytics-dashboard"&gt;edx-analytics-dashboard&lt;/a&gt;的职责。&lt;/p&gt;
&lt;p&gt;我在&lt;a href="http://wwj718.github.io/edx-data-analysis-on-docker.html"&gt;基于docker的edx数据分析&lt;/a&gt; 提到，我用docker打包了&lt;a href="https://github.com/edx/edx-analytics-pipeline"&gt;edx-analytics-pipeline&lt;/a&gt;相关的依赖，利用它可以从track log中提取信息，可以分析出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每周课程活跃情况&lt;/li&gt;
&lt;li&gt;各项答案分布情况&lt;/li&gt;
&lt;li&gt;课程注册情况报表&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你同时安装好了insights，那么将看到以下效果&lt;/p&gt;
&lt;p&gt;&lt;img alt="enrollment_chart" src="img/edx/analysis/enrollment_chart.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="engagement_chart_SPOC" src="img/edx/analysis/engagement_chart_SPOC.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="problem_display_name" src="img/edx/analysis/problem_display_name.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="video_frequent_replays" src="img/edx/analysis/video_frequent_replays.png" /&gt;&lt;/p&gt;
&lt;p&gt;更多可视化呈现结果请看&lt;a href="http://edx.readthedocs.org/projects/edx-insights/en/latest/engagement/Engagement_Video.html"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1&gt;为何需要深入源码&lt;/h1&gt;
&lt;p&gt;我们看到对学生观看视频之类的行为，虽然track log里有记录原始数据(&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html"&gt;tracking_logs&lt;/a&gt;)，可目前的官方进度还没走到这里，尚未对此做出分析,就是说这些数据需要我们自己去挖掘，那么有兴趣的小伙伴们，就需要理解&lt;a href="https://github.com/edx/edx-analytics-pipeline"&gt;edx-analytics-pipeline&lt;/a&gt;的源码，从而能够自己去挖掘track log里丰富的信息。可以玩出的花样，取决于你的想象力&lt;/p&gt;
&lt;p&gt;其实，不少课程团队都会有各种动机去分析课程所产生的数据。而且这些数据的用途，和产生的价值很可能超出平台设计者的想象，那么edx在此做的很棒的工作便是，不去自作聪明地假定了解用户的需求，而是开放了数据，把分析的工作交由平台的使用者&lt;/p&gt;
&lt;h1&gt;切入点&lt;/h1&gt;
&lt;p&gt;我们从一个案例开始。&lt;/p&gt;
&lt;p&gt;在安装好依赖后，我的第一个分析工作是从tracking log中提取出学生答案的分布情况&lt;/p&gt;
&lt;p&gt;也就是这条指令：&lt;code&gt;launch-task AnswerDistributionToMySQLTaskWorkflow [options]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;跟踪这条指令，弄懂它是如何被执行的，我们就能对edx-analytics-pipeline的设计和逻辑流有个大体上的认识，之后的hack和定制就会容易许多。&lt;/p&gt;
&lt;h2&gt;launch-task&lt;/h2&gt;
&lt;p&gt;首先关注&lt;code&gt;launch-task&lt;/code&gt;,如果你有写过python库，很容易看出&lt;code&gt;launch-task&lt;/code&gt;是一个&lt;code&gt;command-line tool&lt;/code&gt;，可以在setup.py的&lt;code&gt;entry point&lt;/code&gt;里找到它。&lt;/p&gt;
&lt;p&gt;于是我们找到&lt;code&gt;launch-task = edx.analytics.tasks.launchers.local:main&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;于是顺藤摸瓜，找到了入口函数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# In order to see errors during extension loading, you can uncomment the next line.&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Load tasks configured using entry_points&lt;/span&gt;
    &lt;span class="c1"&gt;# TODO: launch tasks by their entry_point name&lt;/span&gt;
    &lt;span class="n"&gt;stevedore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExtensionManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;edx.analytics.tasks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;configuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;luigi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_config&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OVERRIDE_CONFIGURATION_FILE&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Using override.cfg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OVERRIDE_CONFIGURATION_FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;override_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;override_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_config_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OVERRIDE_CONFIGURATION_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;override.cfg does not exist&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Tell luigi what dependencies to pass to the Hadoop nodes&lt;/span&gt;
    &lt;span class="c1"&gt;# - boto is used for all direct interactions with s3.&lt;/span&gt;
    &lt;span class="c1"&gt;# - cjson is used for all parsing event logs.&lt;/span&gt;
    &lt;span class="c1"&gt;# - filechunkio is used for multipart uploads of large files to s3.&lt;/span&gt;
    &lt;span class="c1"&gt;# - opaque_keys is used to interpret serialized course_ids&lt;/span&gt;
    &lt;span class="c1"&gt;#   - dependencies of opaque_keys:  bson, stevedore&lt;/span&gt;
    &lt;span class="n"&gt;luigi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hadoop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;boto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cjson&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filechunkio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opaque_keys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stevedore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ciso8601&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# TODO: setup logging for tasks or configured logging mechanism&lt;/span&gt;

    &lt;span class="c1"&gt;# Launch Luigi using the default builder&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;profile_if_necessary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WORKFLOW_PROFILER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WORKFLOW_PROFILER_PATH&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;luigi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;啊哈，从中我们发现&lt;code&gt;launch-task&lt;/code&gt;无非是对&lt;a href="https://github.com/spotify/luigi"&gt;luigi&lt;/a&gt;的封装，主要加入了日志记录和配置文件。&lt;/p&gt;
&lt;p&gt;之后我们会发现，对&lt;a href="https://github.com/spotify/luigi"&gt;luigi&lt;/a&gt;的熟悉程度根本上决定了我们能做的定制深度。&lt;/p&gt;
&lt;p&gt;而业务逻辑，便是写在luigi的task类中run函数里（多数时候是 JobTask 里的mapper和reducer函数）&lt;/p&gt;
&lt;p&gt;这个过程颇像rpg，一边前进一边获得新的线索，而每条新的线索又构成你前进的路标。&lt;/p&gt;
&lt;p&gt;希望你最后能从锁妖塔救出灵儿 ：）&lt;/p&gt;
&lt;p&gt;好啦游戏现在有了支线剧情，我们要了解下&lt;a href="https://github.com/spotify/luigi"&gt;luigi&lt;/a&gt;是什么鬼。&lt;/p&gt;
&lt;p&gt;在我了解了&lt;a href="https://github.com/spotify/luigi"&gt;luigi&lt;/a&gt;是什么鬼后，战斗力简直+1000（此处应该有动态闪光效果），在不熟悉luigi之前，launch-task的许多怪癖我根本无从理解，好比任务的幂等性，他喵的，我在这个问题上纳闷了许久，对着不能理解的任务产出无从下手。&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/spotify/luigi"&gt;luigi&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;什么鬼&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization etc. It also comes with Hadoop support built in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;luigi的目的是解决所有管道问题，通常与长时间运行的批处理任务相关。像Hadoop作业啦，dumping数据到数据库啦，运行机器学习算法啦，数据分析啦之类的&lt;/p&gt;
&lt;p&gt;edx-analytics-pipeline将luigi用于数据分析。当数据量很大，任务复杂的时候，luigi就显示出优越性了。luigi的几个特性此时很有帮助，诸如处理task依赖问题，保证所有关于文件系统的操作的原子性，后者意味着流程不会因为包含不完整数据而导致运行时崩溃。&lt;/p&gt;
&lt;p&gt;它还带有web界面，可以看出任务的执行状态，和依赖关系&lt;/p&gt;
&lt;h3&gt;Quick Start&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;luigi&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;luigi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;luigi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntParameter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;luigi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;luigi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;python my_task.py MyTask --local-scheduler --x 123 --y 456&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;核心概念&lt;/h3&gt;
&lt;p&gt;luigi有三个核心概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Task:抽象类，任务逻辑运行的地方，提供了一些方法来定义任务的逻辑行为。主要有run, output, requires&lt;/li&gt;
&lt;li&gt;Target:抽象类，我把它理解为类文件句柄。一般对应为磁盘上的文件，HDFS上文件或数据库等.一般开箱可用的LocalTarget和hdfs.HdfsTarget就够用了，很少需要自己写&lt;/li&gt;
&lt;li&gt;Parameter：用于控制job的运行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下边这幅图很好地说明了三者的关系
&lt;img alt="luigi_concept" src="img/edx/analysis/luigi_concept.jpeg" /&gt;&lt;/p&gt;
&lt;h3&gt;注意事项&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;luigi需要依赖于外部的调度器来触发工作流，如crontab等&lt;/li&gt;
&lt;li&gt;配置：当前工作目录下的client.cfg优先级高于 /etc/luigi &lt;/li&gt;
&lt;li&gt;luigi任务的输出都将被无限期地保存。这点的好处就是当后面的任务失败时，在重跑失败任务时可以重用前面任务的输出，而不需要重跑前面的任务。不好的地方在于，将会有大量的中间结果保存在系统上，一个比较有用的建议就是把这些输出保存在一个特定的目录中，并进行定期地清除。&lt;ul&gt;
&lt;li&gt;一个常见的用例是每晚要运行一个Hadoop任务，但有时因为各种原因该任务会失败。一个有用的模式就是在最后建立一个虚拟任务，仅需声明依赖于最近一天实际真正的任务。  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;更多细节&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://luigi.readthedocs.org/en/stable/workflows.html"&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vincentzhwg.iteye.com/blog/2063388"&gt;Luigi--基于Python语言的流式任务调度框架教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;AnswerDistributionToMySQLTaskWorkflow&lt;/h2&gt;
&lt;p&gt;UML类图如下（使用Understand分析的结果）&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_pipeline_uml" src="img/edx/analysis/edx_pipeline_uml.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;顺着UML类图走一遍，容易发现AnswerDistributionToMySQLTaskWorkflow从父类中继承的多是一些我们不关心的特性。&lt;/p&gt;
&lt;p&gt;我们的兴趣在于统计答案分布的的task，业务代码是那里实现的呢？找到业务逻辑的实现的话，我们就能够自己定制了&lt;/p&gt;
&lt;p&gt;容易发现AnswerDistributionToMySQLTaskWorkflow类中的唯一方法&lt;code&gt;insert_source_task&lt;/code&gt;中的&lt;code&gt;AnswerDistributionPerCourse&lt;/code&gt;便是关键&lt;/p&gt;
&lt;p&gt;&lt;code&gt;insert_source_task&lt;/code&gt;的doc string写的很清楚了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Write to answer_distribution table from AnswerDistributionTSVTask.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AnswerDistributionPerCourse 便是产生 answer_distribution的地方。&lt;/p&gt;
&lt;p&gt;我们接着去看下的AnswerDistributionPerCourse UML类图&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_pipeline_uml" src="img/edx/analysis/edx_pipeline_uml2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;根据我们先前学习luigi的知识，知道继承JobTask的类往往会自己实现业务逻辑，关键方法就是&lt;code&gt;mapper&lt;/code&gt;和&lt;code&gt;reducer&lt;/code&gt;，通过观察UML类图发现，具体的实现被移到AnswerDistributionPerCourseMixin中，至于为何这样做，如果你熟悉Python的话，会发现使用Mixin来实现多态是Python社区的惯用做法&lt;/p&gt;
&lt;p&gt;至此，我们已经知道怎么编写自己定制的业务逻辑了，重写一个Mixin类去实现业务逻辑就好了呀！&lt;/p&gt;
&lt;h2&gt;options&lt;/h2&gt;
&lt;p&gt;最后扫尾一下，关于在文档不足的情况下，如何了解函数的用法，好比，我们怎么知道&lt;code&gt;launch-task AnswerDistributionToMySQLTaskWorkflow [options]&lt;/code&gt;中的&lt;code&gt;[options]&lt;/code&gt;有哪些可用的选项。看测试用例呀&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_answer_distribution_mysql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;AnswerDistributionToMySQLTaskWorkflow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--src&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test_src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--dest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url_path_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test_root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dst&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--include&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;quot;*&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--manifest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url_path_join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test_root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;manifest.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--base-input-format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INPUT_FORMAT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--lib-jar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oddjob_jar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--n-reduce-tasks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NUM_REDUCERS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;--credentials&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;export_db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;credentials_file_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就酱吧&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-30:edx-analytics-pipeline-code-analysis.html</guid><category>edx</category></item><item><title>enable Open edX REST APIs(work with mobile)</title><link>/edx-api.html</link><description>&lt;p&gt;当时处理这部分的动机是将edx与微信对接&lt;/p&gt;
&lt;p&gt;如果你在处理与edx API相关的工作，这篇文章可能对你也有帮助。好比你在编译edx移动端（android和iOS）, 这部分工作应该也是最主要的工作之一&lt;/p&gt;
&lt;h2&gt;思路&lt;/h2&gt;
&lt;p&gt;我们首先简要做一下任务陈述：允许edx用户通过微信公众平台访问edX，登录以及请求相关的数据&lt;/p&gt;
&lt;p&gt;这里假设读者们已经基本了解了&lt;a href="https://tools.ietf.org/html/draft-ietf-oauth-v2-31"&gt;OAuth2&lt;/a&gt;,包括它的一些基本概念和通信流程，如果还不了解，请先阅读OAuth2相关的材料。&lt;/p&gt;
&lt;p&gt;在我们的任务中，我们先识别出OAuth中的参与实体，RO(resource owner)，RS (resource server)和Client，至于AS(authorization server)在edx中和RS可以认为一体。&lt;/p&gt;
&lt;p&gt;很显然我们的任务中，edx平台作为RS，而edx user是RO，而我们自己写的微信公众号后台便是Client。&lt;/p&gt;
&lt;p&gt;由于微信后端和平台拥有者是相同的，所以我就不采用redirect的方式了。而假设Client是受信任的。&lt;/p&gt;
&lt;p&gt;那么通信的流程是这样的，edx user在微信给微信公众号中给Client发送账号和密码，而后Client携带用户账号和密码去换取授权令牌(Access Token)，且存下授权令牌，如此一来，概念上，用户在微信中便已经保持登录edX的状态了。&lt;/p&gt;
&lt;p&gt;而后Client根据用户请求，携带Access Token去服务器请求资源返回给微信用户。&lt;/p&gt;
&lt;p&gt;这里不应当混淆的是，&lt;code&gt;使用微信账户登录edx&lt;/code&gt;，和&lt;code&gt;在微信中以edx user身份访问edx&lt;/code&gt;，是两个完全不同的过程，&lt;code&gt;使用微信账户登录edx&lt;/code&gt;本质上是个第三方社交账号登录edx的问题，RS是微信，而edx user在微信中访问edx，RS是edX。&lt;/p&gt;
&lt;p&gt;好了，思路基本清晰了。&lt;/p&gt;
&lt;h2&gt;先前的经验&lt;/h2&gt;
&lt;p&gt;之前写过一篇博客：&lt;a href="http://wwj718.github.io/edx-mobile-api.html"&gt;让edx为手机端提供接口&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本打算按照之前的经验，却发现，采用TokenAuthentication的解决方案除了侵入性太强，不够优雅之外，安全性也得不到保证&lt;/p&gt;
&lt;p&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-platform-api/en/latest/authentication.html?highlight=secure"&gt;EdX API Authentication&lt;/a&gt;中有一句话，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OAuth 2.0 is an open standard used by many systems that require secure user authentication&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我开始以为，secure只是个建议，稍后我们会发现，这是个强制要求。&lt;/p&gt;
&lt;p&gt;无论是OAuth2Authentication, SessionAuthentication还是TokenAuthentication，本质都是个认证问题，而认证过程在django中间件里实现，对关注业务逻辑的开发者而言是透明的，而edx的api使用的统一是OAuth2Authentication和SessionAuthentication。&lt;/p&gt;
&lt;p&gt;可选的路线只有一条，开始折腾OAuth2.&lt;/p&gt;
&lt;h2&gt;目标定位&lt;/h2&gt;
&lt;p&gt;经过一番跟踪和分析，我们发现了&lt;a href="https://github.com/edx/edx-oauth2-provider"&gt;edx/edx-oauth2-provider&lt;/a&gt;和&lt;a href="https://github.com/edx/django-oauth2-provider"&gt;django-oauth2-provider&lt;/a&gt;与OAuth关系最大&lt;/p&gt;
&lt;p&gt;而他们的关系是&lt;a href="https://github.com/edx/edx-oauth2-provider"&gt;edx/edx-oauth2-provider&lt;/a&gt;依赖于&lt;a href="https://github.com/edx/django-oauth2-provider"&gt;edx/django-oauth2-provider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而&lt;a href="https://github.com/edx/django-oauth2-provider"&gt;edx/django-oauth2-provider&lt;/a&gt;fork自&lt;a href="https://github.com/caffeinehit/django-oauth2-provider"&gt;caffeinehit/django-oauth2-provider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/caffeinehit/django-oauth2-provider"&gt;caffeinehit/django-oauth2-provider&lt;/a&gt;的&lt;a href="https://django-oauth2-provider.readthedocs.org/en/latest/"&gt;文档&lt;/a&gt;对我们很有助益，&lt;/p&gt;
&lt;h2&gt;实验&lt;/h2&gt;
&lt;p&gt;定位到这两个关键库，其实接下来的工作就轻松多了。&lt;br /&gt;
首先做些试探性的实验。&lt;br /&gt;
先去&lt;code&gt;/edx/app/edxapp/lms.env.json&lt;/code&gt;，在FEATURES里加上&lt;code&gt;"ENABLE_OAUTH2_PROVIDER": true,&lt;/code&gt;以及&lt;code&gt;"ENABLE_MOBILE_REST_API":true,&lt;/code&gt;,而后去admin里获取一个受信任的Client和Access Token，对应的地址分别是是&lt;code&gt;/admin/oauth2_provider/trustedclient/&lt;/code&gt;和&lt;code&gt;/admin/oauth2/accesstoken/add/&lt;/code&gt;,过期时间（Expires）可以设得远些，使其不易生效，你也通过设置&lt;code&gt;OAUTH_ID_TOKEN_EXPIRATION&lt;/code&gt;来控制失效时间，这个数值衡量的是用户两次登录的时间间隔，好比你要求用户每七天需要登录一次。&lt;/p&gt;
&lt;p&gt;那么激动人心的时刻来啦,我们开始请求接口&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -k -H "Authorization: Bearer Your_Access_Token” http://example.com/api/user/v1/accounts/wwj&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{&amp;quot;username&amp;quot;: &amp;quot;wwj&amp;quot;, &amp;quot;bio&amp;quot;: null, &amp;quot;requires_parental_consent&amp;quot;: true, &amp;quot;name&amp;quot;: &amp;quot;wwj&amp;quot;, &amp;quot;country&amp;quot;: null, &amp;quot;is_active&amp;quot;: true, &amp;quot;profile_image&amp;quot;: {&amp;quot;image_url_full&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_500.de2c6854f1eb.png&amp;quot;, &amp;quot;image_url_large&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_120.33ad4f755071.png&amp;quot;, &amp;quot;image_url_medium&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_50.5fb006f96a15.png&amp;quot;, &amp;quot;image_url_small&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_30.ae6a9ca9b390.png&amp;quot;, &amp;quot;has_image&amp;quot;: false}, &amp;quot;year_of_birth&amp;quot;: null, &amp;quot;level_of_education&amp;quot;: null, &amp;quot;goals&amp;quot;: null, &amp;quot;language_proficiencies&amp;quot;: [], &amp;quot;gender&amp;quot;: null, &amp;quot;mailing_address&amp;quot;: null, &amp;quot;email&amp;quot;: &amp;quot;wwj@example.com&amp;quot;, &amp;quot;date_joined&amp;quot;: &amp;quot;2015-05-13T09:42:45Z&amp;quot;}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果你使用&lt;a href="https://github.com/jakubroztocil/httpie"&gt;httpie&lt;/a&gt;(推荐)，那么返回的内容将以更易于阅读的形式(缩进高亮)，返回给你.之后我们都只要httpie&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http http://example.com/api/user/v1/accounts/wwj   "Authorization: Bearer 1a17079824f66bfa5116bd8780b5a119e603a79c"&lt;/code&gt; (实际上是header参数)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;bio&amp;quot;: null,
    &amp;quot;country&amp;quot;: null,
    &amp;quot;date_joined&amp;quot;: &amp;quot;2015-05-13T09:42:45Z&amp;quot;,
    &amp;quot;email&amp;quot;: &amp;quot;wwj@qq.com&amp;quot;,
    &amp;quot;gender&amp;quot;: null,
    &amp;quot;goals&amp;quot;: null,
    &amp;quot;is_active&amp;quot;: true,
    &amp;quot;language_proficiencies&amp;quot;: [],
    &amp;quot;level_of_education&amp;quot;: null,
    &amp;quot;mailing_address&amp;quot;: null,
    &amp;quot;name&amp;quot;: &amp;quot;wwj&amp;quot;,
    &amp;quot;profile_image&amp;quot;: {
        &amp;quot;has_image&amp;quot;: false,
        &amp;quot;image_url_full&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_500.de2c6854f1eb.png&amp;quot;,
        &amp;quot;image_url_large&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_120.33ad4f755071.png&amp;quot;,
        &amp;quot;image_url_medium&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_50.5fb006f96a15.png&amp;quot;,
        &amp;quot;image_url_small&amp;quot;: &amp;quot;http://example.com/static/images/default-theme/default-profile_30.ae6a9ca9b390.png&amp;quot;
    },
    &amp;quot;requires_parental_consent&amp;quot;: true,
    &amp;quot;username&amp;quot;: &amp;quot;wwj&amp;quot;,
    &amp;quot;year_of_birth&amp;quot;: null
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再演示一个使用requests的做法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authorization&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bearer 1a17079824f66bfa5116bd8780b5a119e603a79c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;User-Agent&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ChangeMeClient/0.1 by YourUsername&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://127.0.0.1/api/user/v1/accounts/wwj&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{u&amp;#39;bio&amp;#39;: None,
 u&amp;#39;country&amp;#39;: None,
 u&amp;#39;date_joined&amp;#39;: u&amp;#39;2015-05-13T09:42:45Z&amp;#39;,
 u&amp;#39;email&amp;#39;: u&amp;#39;wwj@qq.com&amp;#39;,
 u&amp;#39;gender&amp;#39;: None,
 u&amp;#39;goals&amp;#39;: None,
 u&amp;#39;is_active&amp;#39;: True,
 u&amp;#39;language_proficiencies&amp;#39;: [],
 u&amp;#39;level_of_education&amp;#39;: None,
 u&amp;#39;mailing_address&amp;#39;: None,
 u&amp;#39;name&amp;#39;: u&amp;#39;wwj&amp;#39;,
 u&amp;#39;profile_image&amp;#39;: {u&amp;#39;has_image&amp;#39;: False,
  u&amp;#39;image_url_full&amp;#39;: u&amp;#39;http://127.0.0.1/static/images/default-theme/default-profile_500.de2c6854f1eb.png&amp;#39;,
  u&amp;#39;image_url_large&amp;#39;: u&amp;#39;http://127.0.0.1/static/images/default-theme/default-profile_120.33ad4f755071.png&amp;#39;,
  u&amp;#39;image_url_medium&amp;#39;: u&amp;#39;http://127.0.0.1/static/images/default-theme/default-profile_50.5fb006f96a15.png&amp;#39;,
  u&amp;#39;image_url_small&amp;#39;: u&amp;#39;http://127.0.0.1/static/images/default-theme/default-profile_30.ae6a9ca9b390.png&amp;#39;},
 u&amp;#39;requires_parental_consent&amp;#39;: True,
 u&amp;#39;username&amp;#39;: u&amp;#39;wwj&amp;#39;,
 u&amp;#39;year_of_birth&amp;#39;: None}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;下边演示请求Access Token的过程&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;requests&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests.auth&lt;/span&gt;
&lt;span class="n"&gt;client_auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPBasicAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dc107056a5335b3a7c74&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4e3f1fad6e0583fc80d78541f2ca6cfad8a93bed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;post_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grant_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwjtest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://127.0.0.1/oauth2/access_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client_auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;post_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;得到&lt;code&gt;{u'error': u'invalid_request',
 u'error_description': u'A secure connection is required.'}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;网站需要使用https，nmap查看443端口是close状态。&lt;/p&gt;
&lt;p&gt;配置nginx。&lt;/p&gt;
&lt;h2&gt;启用https&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember that you should always use HTTPS for all your OAuth 2 requests otherwise you won’t be secured.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OAuth2要求使用https。所以我们为edx做https支持&lt;/p&gt;
&lt;h3&gt;生成证书&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /edx/app/nginx/
mkdir conf
chown -R 777 conf #好像不大好
cd conf
#创建服务器私钥，命令会让你输入一个口令
openssl genrsa -des3 -out server.key 1024
#创建签名请求的证书（CSR）
openssl req -new -key server.key -out server.csr
#在加载SSL支持的Nginx并使用上述私钥时除去必须的口令：
cp server.key server.key.org
openssl rsa -in server.key.org -out server.key
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;配置nginx&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/edx/app/nginx/sites-enabled&lt;/code&gt;里，将lms复制为lms_https&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo diff lms lms_https
1,3c1
&amp;lt; upstream lms-backend {
&amp;lt;             server 127.0.0.1:8000 fail_timeout=0;
&amp;lt;     }server {
---
&amp;gt; server {
12,13c10,13
&amp;lt;
&amp;lt;     listen 80 default;
---
&amp;gt;     listen 443;
&amp;gt;     ssl on;
&amp;gt;     ssl_certificate /edx/app/nginx/conf/server.crt;
&amp;gt;     ssl_certificate_key /edx/app/nginx/conf/server.key;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;/edx/app/nginx/sites-enabled/lms&lt;/code&gt;的server结尾里加上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  # Forward to HTTPS if we&amp;#39;re an HTTP request...
  if ($http_x_forwarded_proto = &amp;quot;http&amp;quot;) {
    set $do_redirect &amp;quot;true&amp;quot;;
  }

  # Run our actual redirect...
  if ($do_redirect = &amp;quot;true&amp;quot;) {
    rewrite ^ https://$host$request_uri? permanent;
  }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启nginx，https方面的设置就好了，你可以访问，https://example.com 啦&lt;/p&gt;
&lt;h2&gt;https下请求Access Token&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests.auth&lt;/span&gt;
&lt;span class="n"&gt;client_auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPBasicAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dc107056a5335b3a7c74&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4e3f1fad6e0583fc80d78541f2ca6cfad8a93bed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;post_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grant_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwjtest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://127.0.0.1/oauth2/access_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;client_auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;post_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;``&lt;/p&gt;
&lt;p&gt;ok&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{u&amp;#39;access_token&amp;#39;: u&amp;#39;e751c317435986b2a00425ed7a93a789fbcbeccd&amp;#39;,
 u&amp;#39;expires_in&amp;#39;: 2591999,
 u&amp;#39;scope&amp;#39;: u&amp;#39;&amp;#39;,
 u&amp;#39;token_type&amp;#39;: u&amp;#39;Bearer&amp;#39;}
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;微信后端&lt;/h1&gt;
&lt;p&gt;暂不方便公开源码&lt;/p&gt;
&lt;h1&gt;todo&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;将mobile api相关的请求全部redirect倒https&lt;/li&gt;
&lt;li&gt;https证书相关&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;2015.07.15更新&lt;/h1&gt;
&lt;p&gt;开发群里有小伙伴提到在用android客户端去访问服务器时，会出现这样的错误。javax.net.ssl.SSLPeerUnverifiedException: No peer certificate
(文后评论中也有人提到)&lt;/p&gt;
&lt;p&gt;这是ssl证书的问题，我此前的做法是不验证。这只是绕过了问题，而没有解决它，在此正面解决它，分以下步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;申请ssl证书，我用的是免费的startssl。可参考&lt;a href="http://www.startssl.com/?app=42"&gt;www.startssl.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;将申请来的证书加入到lms_https里:  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssl on;
ssl_certificate /etc/nginx/conf/your-ssl-unified.crt;
ssl_certificate_key /etc/nginx/conf/your-ssl.key;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;sudo killall -HUP nginx&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1&gt;2015.09.23更新&lt;/h1&gt;
&lt;p&gt;Cypress中的&lt;code&gt;/edx/app/nginx&lt;/code&gt;目录有微调，移除了&lt;code&gt;/edx/app/nginx/sites-enabled&lt;/code&gt;,所以我们需要把&lt;code&gt;/edx/app/nginx/sites-available/&lt;/code&gt;中新建的文件软链接到&lt;code&gt;/etc/nginx/sites-enabled/&lt;/code&gt;里&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-30:edx-api.html</guid><category>edx</category></item><item><title>基于docker的edx数据分析</title><link>/edx-data-analysis-on-docker.html</link><description>&lt;p&gt;此前写过这篇：&lt;a href="http://wwj718.github.io/edx-insight.html"&gt;edx中数据可视化相关&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;edx的数据/行为分析和可视化这一块我觊觎很久了。一直以来进展不大，这一块的依赖关系和数据流我此前一直没大理清。&lt;/p&gt;
&lt;p&gt;这段时间又重新认真地看了一遍这一块的架构/数据流和依赖关系，茅塞顿开，一经试验，居然成功了。其实文档中的这幅图说的很清晰了&lt;/p&gt;
&lt;p&gt;&lt;img alt="Analytics_AWS_Deployment" src="img/edx/docker/Analytics_AWS_Deployment.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;目前的做法，斯坦福还是edx官方，似乎都将数据分析的工作跑在amazon上&lt;/p&gt;
&lt;p&gt;国内的情况你懂的,依赖于国外的服务会很蛋疼，所以我想让数据分析的模块跑在docker上，像插件一样，随时可插拔。在理清了依赖关系后，发现数据分析的模块，与外部只有input和output的依赖（也本该如此^_^），前者是track log，后者存入mysql。那么问题就简单多啦，只要在docker里配置好环境和依赖。一试之下居然成功了。先上效果&lt;/p&gt;
&lt;p&gt;&lt;img alt="hadoop1.jpeg" src="img/edx/docker/hadoop1.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="hadoop2.jpeg" src="img/edx/docker/hadoop2.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;目前可用的task有&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{AnswerDistributionOneFilePerCourseTask,AnswerDistributionPerCourse,AnswerDistributionToMySQLTaskWorkflow,AnswerDistributionWorkflow,BaseAnswerDistributionTask,BaseHadoopJobTask,CalendarTableTask,CalendarTask,CompositionTask,CourseActivityDailyTask,CourseActivityMonthlyTask,CourseActivityTask,CourseActivityWeeklyTask,CourseEnrollmentChangesPerDay,CourseEnrollmentEventsPerDay,CourseEnrollmentTableTask,CourseEnrollmentTask,CourseEnrollmentValidationPerDateTask,CourseEnrollmentValidationTask,CreateAllEnrollmentValidationEventsTask,CreateEnrollmentValidationEventsForTodayTask,CreateEnrollmentValidationEventsTask,DailyRegistrationsEnrollmentsAndCourses,EnrollmentByBirthYearTask,EnrollmentByEducationLevelTask,EnrollmentByGenderTask,EnrollmentByModeTask,EnrollmentDailyTask,EnrollmentTask,EnrollmentValidationWorkflow,EnrollmentsByWeek,EnrollmentsandRegistrationsWorkflow,EnvironmentParamsContainer,EventExportTask,EventLogSelectionTask,GradeDistFromSqoopToMySQLWorkflow,GradeDistFromSqoopToTSVWorkflow,HistogramFromSqoopToMySQLWorkflowBase,HistogramFromStudentModuleSqoopWorkflowBase,HiveQueryTask,HiveQueryToMysqlTask,HiveTableFromQueryTask,HiveTableTask,ImportAllDatabaseTablesTask,ImportAuthUserProfileTask,ImportAuthUserTask,ImportEnrollmentsIntoMysql,ImportIntoHiveTableTask,ImportLastCountryOfUserToHiveTask,ImportMysqlToHiveTableTask,ImportStudentCourseEnrollmentTask,InsertToMysqlAnswerDistributionTableBase,InsertToMysqlCourseEnrollByCountryTask,InsertToMysqlCourseEnrollByCountryTaskBase,InsertToMysqlCourseEnrollByCountryWorkflow,InsertToMysqlLastCountryOfUserTask,JobTask,LastCountryForEachUser,LastCountryOfUser,LastProblemCheckEvent,MapReduceJobTask,MultiOutputMapReduceJobTask,MysqlInsertTask,MysqlSelectTask,ParseEventLogPerformanceTask,PathSetTask,QueryLastCountryPerCourseTask,QueryLastCountryPerCourseWorkflow,SeqOpenDistFromSqoopToMySQLWorkflow,SeqOpenDistFromSqoopToTSVWorkflow,SqoopImportFromMysql,SqoopImportTask,StudentModulePerCourseAfterImportWorkflow,StudentModulePerCourseTask,Task,TotalEventsDailyTask,TotalEventsReport,TotalEventsReportWorkflow,URLManifestTask,UserActivityTableTask,UserActivityTask,UserRegistrationsPerDay,UsersPerCountry,UsersPerCountryReport,UsersPerCountryReportWorkflow,WeeklyAllUsersAndEnrollments,WeeklyIncrementalUsersAndEnrollments,WrapperTask}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;更多细节可以参考&lt;a href="https://github.com/edx/edx-analytics-pipeline/wiki/Tasks-to-Run-to-Update-Insights"&gt;Tasks-to-Run-to-Update-Insights&lt;/a&gt;，以及&lt;a href="https://github.com/edx/edx-analytics-pipeline/wiki/Stanford-analytics-task-scheduler"&gt;Stanford analytics task scheduler&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来的工作就是将分析出来的结果呈现到insights里，那么数据可视化的的工作就完成了。insights是个独立的server，分析结果存在result store(mysql)中&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 26 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-26:edx-data-analysis-on-docker.html</guid><category>edx</category></item><item><title>基于docker容器的edx分布式</title><link>/edx-birch-distributed-on-docker.html</link><description>&lt;p&gt;将edx组件分离到多个docker container的实验，build成功，可正常使用。&lt;/p&gt;
&lt;p&gt;目前分离的组件包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edxapp   &lt;/li&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;li&gt;forum&lt;/li&gt;
&lt;li&gt;elasticsearch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;build成功后的images分布&lt;/p&gt;
&lt;p&gt;&lt;img alt="images" src="img/edx/docker/images.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;sudo docker ps 如下&lt;/p&gt;
&lt;p&gt;&lt;img alt="docker_ps" src="img/edx/docker/docker_ps.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;每个组件在一个单独的docker container里，如果需要采取分布式，只需要将组件分发到不同的机器上，在这些机器上将容器跑起来，而后在edxapp容器里将其他容器link进来就可以了。&lt;/p&gt;
&lt;p&gt;建议将mongo和mysql的数据挂载到宿主机上（出于安全考虑）&lt;/p&gt;
&lt;p&gt;之后有时间给出build的过程&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-24:edx-birch-distributed-on-docker.html</guid><category>edx</category></item><item><title>edx(birch) on docker</title><link>/edx-birch-on-docker.html</link><description>&lt;p&gt;上一篇文章提到我build出了edx（birch）的docker版。&lt;/p&gt;
&lt;p&gt;此前appsembler（国外提供edx服务的一家公司）在docker hub上发布过edx-lite和edx-full，不过一直停留在aspen版本。而birch版本修复了不少重大bug，并加入了分组之类的实用特性，我几个月前写邮件问他们是否有发布birch版本的打算，他们回复说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We do already have some birch images that we use for our clients, but those are currently only for internal use as they contain our API keys and other private stuff. I think we plan on releasing the birch images publicly at some point, but I can’t tell you when exactly as we have more urgent work to do at the moment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回信的末尾说发布出来后会通知我，我也等不及了，就自己去build了。&lt;/p&gt;
&lt;p&gt;在此记录build的过程&lt;/p&gt;
&lt;h1&gt;环境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu14.04&lt;/li&gt;
&lt;li&gt;docker1.7&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;安装最新版docker&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;wget -qO- https://get.docker.com/ | sh&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;开始安装&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#base image
sudo docker pull phusion/baseimage
git clone https://github.com/appsembler/configuration.git -b docker_release ~/configuration
sudo docker run -i -t -p :80 -p :18010 -p :18020 -d -v ~/configuration:/configuration phusion/baseimage /sbin/my_init --enable-insecure-key
sudo docker ps #获取&amp;lt;container_id&amp;gt;

#进入到容器里开始安装，此后的过程和在ubuntu12.04上部署相似
sudo docker exec -it &amp;lt;container_id&amp;gt; bash

#处理elasticsearch相关的两个问题
1.vim playbooks/roles/elasticsearch/tasks/main.yml
     force=no
+    validate_certs=no
   register: elasticsearch_reinstall

2.vim playbooks/roles/elasticsearch/tasks/main.yml
+- name: Disable dynamic scripting
+  lineinfile: &amp;quot;dest=/etc/elasticsearch/elasticsearch.yml line=&amp;#39;script.disable_dynamic: true&amp;#39;&amp;quot;
+  sudo: True
+  when: not ELASTICSEARCH_CLUSTERED

 - name: create directories
   file: &amp;gt;

#安装依赖
apt-get update &amp;amp;&amp;amp; apt-get install -y python-dev python-setuptools python-apt gcc &amp;amp;&amp;amp; easy_install pip
cd /configuration &amp;amp;&amp;amp; pip install -r requirements.txt

#安装edx-lite，里边只跑着cms，lms和forum
cd playbooks &amp;amp;&amp;amp; ansible-playbook -vv -c local -i &amp;quot;127.0.0.1,&amp;quot; docker_lite.yml  #中途失败后可以用 --start-at-task=&amp;quot;xx&amp;quot;继续

#成功后，记得commit,移除&amp;quot;/sbin/my_init&amp;quot;,
docker commit -a &amp;quot;wwj718&amp;lt;wuwenjie718@gmail.com&amp;gt;&amp;quot; -run &amp;#39;{&amp;quot;Cmd&amp;quot;:[&amp;quot;--enable-insecure-key&amp;quot;], &amp;quot;PortSpecs&amp;quot;:[&amp;quot;22&amp;quot;,&amp;quot;80&amp;quot;,&amp;quot;5000&amp;quot;, &amp;quot;18010&amp;quot;, &amp;quot;18020&amp;quot;]}&amp;#39; &amp;lt;container_id&amp;gt; wwj718/edx-lite:birch

#push到docker hub
docker push wwj718/edx-lite:birch

#导出(export)
sudo docker export &amp;lt;container_id&amp;gt; &amp;gt; edx-lite_birch_export.tar

#也可以这样导出(save)
sudo docker save wwj718/edx-lite:birch &amp;gt; edx-lite_birch_save.tar
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于docker中export和save的区别,stackoverflow上的&lt;a href="http://stackoverflow.com/questions/22655867/what-is-the-difference-between-save-and-export-in-docker"&gt;这个回答&lt;/a&gt;说的很好：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The exported image will not have any layer or history information saved, so it will be smaller and you will not be able to rollback&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-24:edx-birch-on-docker.html</guid><category>edx</category></item><item><title>edx推广，国内社区与docker</title><link>/edx-popularize-community-docker.html</link><description>&lt;blockquote&gt;
&lt;p&gt;当开始建设社区的时候，你需要拿出一个像样的承诺。程序此时并不需要特别好，它可以简陋、有错、不完整，文档可以少得可怜。但它至少要做到：(a)能运行，(b)让潜在的合作开发者相信，这个软件在可预见的未来，能演变成一个非常棒的东西          --《大教堂与集市》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前edx的复杂度很大程度影响了它在国内的使用和推广。&lt;/p&gt;
&lt;p&gt;我平时收到的国内折腾edX的团队发来的邮件中，大多都对此存在抱怨。&lt;/p&gt;
&lt;p&gt;国内开发者聚集之处，每天翻来覆去的谈论的，也都是安装啦部署啦协作啦代码管理啦这些问题，的确每一个问题都让人头疼。而每一个入门者，在最初阶段又都得面对它们。&lt;/p&gt;
&lt;p&gt;这道烦人的门槛并不低。&lt;/p&gt;
&lt;p&gt;上上周，去北京讨论了一下关于组织国内开发者会议的事。（初步定在暑期）&lt;/p&gt;
&lt;p&gt;同@MT聊到建立国内社区的可能性，以及社区一旦形成，致力于去解决哪些问题，本土化自然是核心，这里指广义的本土化，而不仅仅是汉化这种初步的，我们希望通过开发者会议（会邀请教育界的人士），收集国内用户都有哪些需求和痛点，然后将其作为之后社区努力的方向之一&lt;/p&gt;
&lt;p&gt;目前已在&lt;a href="https://github.com/edx/edx-platform"&gt;edx-platform&lt;/a&gt;的wiki里列出了中国区Open edX使用者及开发者关注的一些问题，并整理开发相关中文资源：&lt;a href="https://github.com/edx/edx-platform/wiki/localization-and-development-in-china"&gt;localization and development in china&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;edx的复杂度，开发者们有目共睹。我相信docker是推广edx和驯服这些复杂度的利器。&lt;/p&gt;
&lt;p&gt;我最近在使用docker做实验，目前已经build出了birch版本，已提交到docker hub，完善后（汉化，自适应主题，可用性优化等），准备发布出来。接下来将尝试基于docker的多容器以及分布式，此后将尝试使用docker容器做数据分析，而不打算采用amazon。&lt;/p&gt;
&lt;p&gt;也建议采用docker来构建社区维护的基础版 ：）&lt;/p&gt;
&lt;p&gt;我相信用docker折腾edx能简化以下问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发：使用docker将获得以下好处&lt;ul&gt;
&lt;li&gt;轻量化，docker比virtualbox要节约内存得多，跑edx的速度也快得多&lt;/li&gt;
&lt;li&gt;协作变得容易，团队成员之间的协作开发模式，变得与git相似，环境和开发成果的同步变得容易&lt;/li&gt;
&lt;li&gt;开发成果很容易直接部署到生产环境，几乎就是一键式的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;部署：部署变得一键式，docker pull下来就可以run了。甚至可以据此可以构建云平台，提供云服务&lt;/li&gt;
&lt;li&gt;社区构建：有一个可用的版本可以被社区环绕&lt;/li&gt;
&lt;li&gt;升级：集中化管理。将复杂度转移给社区，只要针对一个image进行升级，社区成员可以共享成果，各自去pull新版本就行。需要单独处理的，只有自己的数据，大大降低了升级难度。一些烦人的问题，诸如国外网络之类的，只需要被解决一次就行&lt;/li&gt;
&lt;li&gt;insights ：分析平台成为单独的组件，封装在docker中,只对外暴露出接口（端口）&lt;/li&gt;
&lt;li&gt;分布式：采用多容器部署，分离出数据库之类的组件，之后这些组件可以轻易地分布到不同机器上&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-24:edx-popularize-community-docker.html</guid><category>edx</category></item><item><title>edX开发相关</title><link>/edx-development.html</link><description>&lt;blockquote&gt;
&lt;p&gt;如果纠错是消除软件bug的过程，那编程一定是把它们放进去的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近收到几封邮件，来自国内的几个edX团队，问些edX开发相关的问题，问题大同小异，一并列到博客上，下回开发者中再有人问。我就把链接一甩,然后在沙发上继续翘着二郎腿看《冰与火之歌》&lt;/p&gt;
&lt;p&gt;本文将谈论几个方面的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发环境&lt;/li&gt;
&lt;li&gt;IDE&lt;/li&gt;
&lt;li&gt;代码管理&lt;/li&gt;
&lt;li&gt;部署到生产环境&lt;/li&gt;
&lt;li&gt;协同开发&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;我常用的工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;开发环境&lt;/h2&gt;
&lt;p&gt;理论上可以在任何系统下开发，Linux/Mac/Windows都行。无论你在哪个系统下开发，你都应该熟悉linux（Ubuntu）。edX的开发者版本实际是个虚拟机，跑在Virtualbox里的Ubuntu12.04，采用Vagrant管理。&lt;/p&gt;
&lt;p&gt;所以只要你的机器装有Vagrant和Virtualbox，无论Linux/Mac/Windows，你都可以开发edX&lt;/p&gt;
&lt;p&gt;无论你在哪个系统下开发，大多时间你都在和Ubuntu打交道，更多细节可以参考&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack"&gt;edX-Developer-Stack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开发环境的搭建参考官方wiki就好，在此不赘述，参考这边：&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack#installing-the-edx-developer-stack"&gt;installing-the-edx-developer-stack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;重点提醒一下，保证你的开发环境和生产环境参与的&lt;code&gt;configuration&lt;/code&gt;版本一致，其中&lt;code&gt;edx-platform&lt;/code&gt;的一致是最重要的。&lt;/p&gt;
&lt;h2&gt;IDE&lt;/h2&gt;
&lt;p&gt;我是Vim党，偏好Unix工具箱，基本不用IDE。&lt;/p&gt;
&lt;p&gt;Python社区比较鼓励Editor+IPython，我在折腾edX时,用的一直是Vim+IPython的组合，用地很顺手。据我所知，edX官方团队里，用IDE的人也是不多的，如果你偏好IDE，那么wiki里已经为你准备好文档了，关于如何配置PyCharm来开发edX：&lt;a href="https://github.com/edx/edx-platform/wiki/Setting-up-PyCharm-for-edX-development"&gt;Setting-up-PyCharm-for-edX-development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PyCharm是Python社区比较流行的IDE，说实话，给edX配置PyCharm还蛮繁琐的，我在三个平台下(Linux/Mac/Windows)都帮人配置过，需要注意的是，Windows平台下无法把代码放到本地目录开发，其中有个软链接的坑（没记错的话，是xmodule目录，Windows下没有软链接），所以跑代码的时候会报错，你需要单独处理下这个软链接的问题。解决方案可以参考这里:&lt;a href="https://github.com/edx/configuration/wiki/Vagrant-troubleshooting#dealing-with-line-endings-and-symlinks-under-windows"&gt;dealing-with-line-endings-and-symlinks-under-windows&lt;/a&gt;,实际上我觉得官方的解决方案很烦，我的解决方案是采取的是PyCharm的远程编辑功能，如此一来，代码其实在本地虚拟机里，这样就不存在这个软链接的问题了&lt;/p&gt;
&lt;h2&gt;代码管理&lt;/h2&gt;
&lt;p&gt;最恶劣的情况是，安装完毕后，就撸起袖子开始侵入式地定制开发了。连分支都不新建。  &lt;/p&gt;
&lt;p&gt;稍好一些的情况是， 知道先&lt;code&gt;git checkout -b mybranch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那么最佳实践是什么呢，在我们谈论最佳实践的之前，必须熟悉Git，而后，选一种适合你们使用场景的，包括分支管理及workflow。这和恋爱相似，适合你的才是好的。之后我会分享下我们的做法&lt;/p&gt;
&lt;p&gt;项目的技术负责人必须考虑到这样的事实，我们的开发版本基于上游代码库（官方版本）的某个release，在此基础上做自己的定制开发。而上游库一直在演进中，一边增加新特性，一边修复旧bug。越到后来，上游版本越健壮和强大，但我们不能一直等它变强再定制对不对，时机不等人，我们得着手开发自己的定制需求。同时我们又期望能够升级跟进到新的上游版本，如此一来，免费获得新特性的同时，又不丢失定制功能。这便很好地在商业中利用了开源技术，这个过程就是商业公司使用开源项目都要面临的问题。如果你不考虑升级和迁移，那么对公司，等同于损失了整个开源社区的力量。我想不出技术层面上比这更大的损失。&lt;/p&gt;
&lt;p&gt;项目的技术负责人，在项目初期对这块投入多大的重视都不为过，之后会有丰厚的回报，如果草率开始，到时候必然面临手动迁移的局面，那么项目升级很可能不是件艰难的事，而是根本不可能。而那时官方出了杀手级的功能，你跟进还是不跟呢，你只好推倒重来&lt;/p&gt;
&lt;h3&gt;定制开发&lt;/h3&gt;
&lt;p&gt;《代码大全》里说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;软件工程的本质即是管理复杂度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在这里，我只能提一些泛泛的建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把代码尽量的模块化，定制的功能，可以的话，尽量整个丢到django app里&lt;/li&gt;
&lt;li&gt;尽量不要去入侵edx-platform源代码，尽可能采用非侵入式插件风格的定制&lt;/li&gt;
&lt;li&gt;诸如主题的定制，你应当使用theme，而不是去改templates&lt;/li&gt;
&lt;li&gt;诸如要课程分类，添加属性，尽量不要去动课程模型，而是自建model，采用course_id关联到原有课程。而后整个功能模块丢到django app里。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你采用了以上做法，你会发现迁移起来是并不麻烦的，至少是可能的。这也是我目前采用的做法，我们的系统截止到目前迁移了几次，前段时间又从release-2014-09-17升级到Birch，过程都还算顺利。&lt;/p&gt;
&lt;p&gt;迁移的工作无非git rebase到上游新的release上，而后解决冲突/migrate数据就好。&lt;/p&gt;
&lt;p&gt;关于数据迁移，可以参考我的另一篇文章:&lt;a href="http://wwj718.github.io/edx-data-migrate.html"&gt;edx数据迁移&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;部署到生产环境&lt;/h2&gt;
&lt;p&gt;现在假设你已经定制开发完毕，代码也都git push到远程仓库。&lt;/p&gt;
&lt;p&gt;这块要细说的话，涉及到一系列Workflow相关的问题，所以不打算在此细说，况且一时半会儿也没法说清。这些更细致的内容我可能会放在edX国内开发者会议上作为主题发言来说：）&lt;/p&gt;
&lt;p&gt;简单说来，就是用好Git，在你的开发环境和生产环境之间只需要同步代码就够了。最简单的做法是只修改了行为相关的代码，没有动系统环境和数据模型。那么只需要在开发环境下&lt;code&gt;git push&lt;/code&gt;，然后到生产环境下&lt;code&gt;git pull&lt;/code&gt;，之后&lt;code&gt;sudo /edx/bin/supervisorctl restart edxapp:&lt;/code&gt;一下，生产环境就同步生效了&lt;/p&gt;
&lt;p&gt;此外，如果想让让发布迭代过程更流畅。推荐采用&lt;a href="http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html"&gt;Gitflow工作流&lt;/a&gt;，这种工作流示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx_development.png" src="img/edx/edx_development/git-workflow.png" /&gt;&lt;/p&gt;
&lt;h2&gt;协同开发&lt;/h2&gt;
&lt;p&gt;只要是一个开发团队，就得面对这个问题，如何协同开发。&lt;/p&gt;
&lt;p&gt;其实熟悉Vagrant和Git，（团队里至少应当有一人熟练Git，不然会很麻烦），遵循一些社区的建议，基本协同开发就不成问题了。&lt;/p&gt;
&lt;p&gt;Vagrant用来保证成员之间系统环境的一致性，而Git用来管理代码。&lt;/p&gt;
&lt;p&gt;根据协作情景的不同，我们需要选择不同的Git工作流&lt;/p&gt;
&lt;p&gt;如果只是1，2个人，那么&lt;code&gt;集中式工作流&lt;/code&gt;就够用了，以中央仓库作为项目所有修改的单点实体。SVN用户应该很熟悉&lt;/p&gt;
&lt;p&gt;针对小团队而言（多数情况）。&lt;code&gt;功能分支工作流&lt;/code&gt;，可能是不错的选择，简单清晰。核心想法是所有的功能开发应该在一个专门的分支上，而不是在master分支上。 这样一来，开发者在各自的功能上开发而不会弄乱主干代码&lt;/p&gt;
&lt;p&gt;针对社区协作而言，&lt;code&gt;Forking工作流&lt;/code&gt;最合适，如果暑期国内开发者会议顺利，应该国内社区也会成型，到时候，社区便采用这种方式，在github上协作，目前edX官方采用的也是这种工作流，采用&lt;code&gt;Forking工作流&lt;/code&gt;的好处是开发者只需把定制代码push到自己的服务端仓库，而只有项目维护者才能push到正式仓库。 这样项目维护者可以接受任何开发者的提交，但无需给他正式代码库的写权限。&lt;br /&gt;
如此一来社区与各个公司之间也容易协作&lt;/p&gt;
&lt;h2&gt;Pull Request&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Pull Request&lt;/code&gt;作为补充，可在以上三种工作流中应用,github的Pull Request提供了一个用户友好的Web界面，在提交变更到项目之前可以对变更进行讨论。&lt;br /&gt;
如此一来，每次提交的都有了专门的谈论区。团队成员间的协作变得更轻松方便&lt;/p&gt;
&lt;h2&gt;测试&lt;/h2&gt;
&lt;p&gt;这一块没啥特别好说的，官方的wiki和文档都写得很清楚了，参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack#running-lmsstudio-tests"&gt;running-lmsstudio-tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-platform/blob/master/docs/en_us/internal/testing.rst"&gt;testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;我常用的工具&lt;/h2&gt;
&lt;p&gt;前边说了 我是Vim党，偏好Unix工具箱，基本不用IDE，以下是我折腾edX常用的工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编辑器：Vim&lt;/li&gt;
&lt;li&gt;debug&lt;ul&gt;
&lt;li&gt;IPython&lt;ul&gt;
&lt;li&gt;切换到edxapp环境下，安装IPython，之后&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings aws shell&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo -u www-data /edx/bin/python.edxapp ./manage.py {lms|cms} runserver 8000 --settings aws&lt;/code&gt; 使用django的django-debug-toolbar来调试，用于调试生产环境&lt;/li&gt;
&lt;li&gt;如果你熟悉django，你一定知道&lt;a href="https://github.com/django-extensions/django-extensions"&gt;django-extensions&lt;/a&gt;。安装完django-extensions，你就可以使用&lt;a href="http://django-extensions-zh.readthedocs.org/zh_CN/latest/runserver_plus.html"&gt;runserver_plus&lt;/a&gt;，runserver_plus 命令启动测试服务,并用 Werkzeug 作为调试后台，Werkzeug的强大无需赘言&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据库相关:mongodump,mysqldump，图形化工具可以使用:Robomongo,MySQLWorkbench&lt;/li&gt;
&lt;li&gt;网络相关：httpie，nethogs，iftop&lt;/li&gt;
&lt;li&gt;源码阅读：understand，Souce Insight&lt;/li&gt;
&lt;li&gt;Unix工具箱：git，tail，tmux，htop，ack，diff，grep，tar，scp,crontab...&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-19:edx-development.html</guid><category>edx</category></item><item><title>edX微信公众号</title><link>/wechat_edx2.html</link><description>&lt;p&gt;前段时间在博客里提到，我把oauth2的流程走通了，已经做到可以启用edx-platform中所有的API，以此为基础，利用业余时间在做edX与微信公众平台结合的工作，我在这篇文章中有提到大概思路：&lt;a href="http://wwj718.github.io/wechat_edx.html"&gt;在微信中使用edX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;截止到今天，核心的工作基本都已经完成了，包括架构/数据解析/前端展示&lt;/p&gt;
&lt;p&gt;在此展示下成果&lt;/p&gt;
&lt;p&gt;&lt;img alt="img/edx/wechat/all.jpg" src="img/edx/wechat/all.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 10 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-10:wechat_edx2.html</guid><category>edx</category></item><item><title>使用backup异地备份edX数据</title><link>/use-backup-for-edx.html</link><description>&lt;blockquote&gt;
&lt;p&gt;Don't put all your eggs in one basket&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了提升逼格，我决定使用英文版的的这句作为开头，尽管我最初想到的是中文版orz&lt;/p&gt;
&lt;p&gt;天灾人祸这种事，总归是有的。尽管服务器的灾难性故障不常发生，概率也比遇到鬼或是遇到爱情来得高些，将风险考虑在内总归是好的，所谓有备无患。如果你已经在自己的架构中将单点故障考虑进去了，就不必往下拉啦，继续舔酸奶盖去吧~如果你的云服务商已经考虑了单点故障，你也没啥好做啦。&lt;/p&gt;
&lt;p&gt;如果两者都没有，你应该请我喝杯星冰乐再往下拉。&lt;/p&gt;
&lt;p&gt;ps：我最近多是在处理性能优化，数据迁移，安全策略，系统稳定性这类事，简直是伪装成开发的运维orz&lt;/p&gt;
&lt;h1&gt;策略&lt;/h1&gt;
&lt;p&gt;采用异地备份来应对单点故障导致的数据丢失&lt;/p&gt;
&lt;h1&gt;最初的思路&lt;/h1&gt;
&lt;p&gt;首先明确我们需要备份哪些数据,关于edX数据，可以参考我此前的&lt;a href="http://wwj718.github.io/edx-data-migrate.html"&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一番深(hu)思(si)熟(luan)虑(xiang)之后，你会发现，我们关心的数据无非是数据库(mongodb/mysql)里存的，以及静态文件(/edx/var/edxapp/staticfiles)&lt;/p&gt;
&lt;p&gt;思路很简单，每天定时备份数据库和静态文件，将其同步到远程服务器。只保存最近3，5天的备份文件，逾期的删除&lt;/p&gt;
&lt;p&gt;这里需要注意的问题可能有三点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要影响到用户使用，备份是消耗服务器资源的，会造成服务器压力，写个定时任务，让其在凌晨做&lt;/li&gt;
&lt;li&gt;采用增量同步的方式节省带宽&lt;/li&gt;
&lt;li&gt;任务完成后，给自己发个邮件，确定成功执行了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么写个shell脚本基本就完事啦，主要可能涉及的工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mongodump&lt;/li&gt;
&lt;li&gt;mysqldump&lt;/li&gt;
&lt;li&gt;tar  &lt;/li&gt;
&lt;li&gt;scp/rsync&lt;/li&gt;
&lt;li&gt;crontab&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;backup闪亮登场&lt;/h1&gt;
&lt;p&gt;就在我shell脚本快写完的时候，在github上发现了这个东西：&lt;a href="https://github.com/backup/backup"&gt;backup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一言话概括就是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Easy full stack backup operations on UNIX-like systems&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;稍微扫一眼&lt;a href="http://backup.github.io/backup/v4/"&gt;Overview&lt;/a&gt;,分分钟爱不释手啊。&lt;/p&gt;
&lt;p&gt;从文档中不难发现，backup本质上是对以上我们提到的工具做了封装。&lt;/p&gt;
&lt;p&gt;能不写shell，我是尽量不写shell的。&lt;/p&gt;
&lt;p&gt;先读下&lt;a href="http://backup.github.io/backup/v4/getting-started/"&gt;文档&lt;/a&gt;吧。&lt;/p&gt;
&lt;h2&gt;install backup&lt;/h2&gt;
&lt;p&gt;backup是ruby写的，使用gem安装。不得不说ruby的DSL能力真强啊&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo gem install backup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;哦，顺便说下，我在ruby1.8.7和ruby1.9.3下都没成功，之后在ubuntu12.04上手动编译了ruby2.0.0才安装好backup。也是蛮诡异的，可能是我机器的问题，文档里说ruby1.8.7和ruby1.9.3应该都是没有问题的&lt;/p&gt;
&lt;h2&gt;backup demo&lt;/h2&gt;
&lt;p&gt;从一个简单的案例开始。  &lt;/p&gt;
&lt;p&gt;任务描述：备份我的home目录下的所有文件，同步到远程服务器的&lt;code&gt;~/backup_my_home&lt;/code&gt;目录，只保留最近的5个备份&lt;/p&gt;
&lt;p&gt;在shell里执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;backup generate:model --trigger backup_my_home \
  --archives --storages=&amp;#39;scp&amp;#39;  --compressor=&amp;#39;gzip&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;会生成:&lt;code&gt;Generated model file: '/home/USERNAME/Backup/models/backup_my_home.rb'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;编辑以上文件就行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class="no"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:backup_my_home&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Description for backup_my_home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;

  &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="ss"&gt;:my_archive&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# Run the `tar` command using `sudo`&lt;/span&gt;
    &lt;span class="c1"&gt;# archive.use_sudo&lt;/span&gt;
    &lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/USERNAME&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# SCP (Secure Copy) [Storage]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;store_with&lt;/span&gt; &lt;span class="no"&gt;SCP&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_username&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_password&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;123.45.678.90&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/backup_my_home/&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keep&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Gzip [Compressor]&lt;/span&gt;
  &lt;span class="n"&gt;compress_with&lt;/span&gt; &lt;span class="no"&gt;Gzip&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;几乎无需解释对吧:)&lt;/p&gt;
&lt;p&gt;开始备份:&lt;code&gt;backup perform -t backup_my_home&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;开始备份edX&lt;/h1&gt;
&lt;h2&gt;静态文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;backup generate:model --trigger edx_staticfile_backup \
  --archives --storages=&amp;#39;scp&amp;#39;  --compressor=&amp;#39;gzip&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class="no"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:edx_staticfile_backup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Description for edx_staticfile_backup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;


  &lt;span class="c1"&gt;#   archive.root &amp;#39;/path/to/archive/root&amp;#39;&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;archive&lt;/span&gt; &lt;span class="ss"&gt;:my_archive&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# Run the `tar` command using `sudo`&lt;/span&gt;
    &lt;span class="c1"&gt;# archive.use_sudo&lt;/span&gt;
    &lt;span class="c1"&gt;#archive.add &amp;quot;/path/to/a/file.rb&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;archive&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/edx/var/edxapp/staticfiles&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;#archive.exclude &amp;quot;/path/to/a/excluded_file.rb&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;#archive.exclude &amp;quot;/path/to/a/excluded_folder&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;


  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# SCP (Secure Copy) [Storage]&lt;/span&gt;
  &lt;span class="c1"&gt;#你需要先去目标服务器建立~/edx_backups/staticfile目录&lt;/span&gt;
  &lt;span class="n"&gt;store_with&lt;/span&gt; &lt;span class="no"&gt;SCP&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_username&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_password&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;123.45.678.90&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/edx_backups/staticfile&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keep&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

    &lt;span class="c1"&gt;# Additional options for the SSH connection.&lt;/span&gt;
    &lt;span class="c1"&gt;# server.ssh_options = {}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# Gzip [Compressor]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;compress_with&lt;/span&gt; &lt;span class="no"&gt;Gzip&lt;/span&gt; 

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;备份mongo&lt;/h2&gt;
&lt;h2&gt;databases&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;mongo
&amp;gt;show dbs
admin                            
cs_comments_service_development  
edxapp                           
local                            
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;为mongo添加用户&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;mongo
&amp;gt;use edxapp
&amp;gt;db.addUser(“wwj”, “xxx”)
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;backup generate:model --trigger edx_mongodb_backup \
  --databases=&amp;quot;mongodb&amp;quot; --storages=&amp;#39;scp&amp;#39;  --compressor=&amp;#39;gzip&amp;#39; --notifiers=&amp;#39;mail&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class="no"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:edx_mongodb_backup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Description for edx_mongodb_backup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;

  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# MongoDB [Database]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;database&lt;/span&gt; &lt;span class="no"&gt;MongoDB&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;              &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edxapp&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;#db.name                        = :all&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xxx&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;27017&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ipv6&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
    &lt;span class="c1"&gt;#db.only_collections   = [&amp;quot;only&amp;quot;, &amp;quot;these&amp;quot;, &amp;quot;collections&amp;quot;]&lt;/span&gt;
    &lt;span class="c1"&gt;#db.additional_options = []&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lock&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oplog&lt;/span&gt;              &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# SCP (Secure Copy) [Storage]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;store_with&lt;/span&gt; &lt;span class="no"&gt;SCP&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_username&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_password&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;123.45.678.90&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/edx_backups/mongo&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keep&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

    &lt;span class="c1"&gt;# Additional options for the SSH connection.&lt;/span&gt;
    &lt;span class="c1"&gt;# server.ssh_options = {}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# Gzip [Compressor]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;compress_with&lt;/span&gt; &lt;span class="no"&gt;Gzip&lt;/span&gt;

  &lt;span class="n"&gt;notify_by&lt;/span&gt; &lt;span class="no"&gt;Mail&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_success&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_warning&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_failure&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;

    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;                 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sender@email.com&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;receiver@email.com&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;              &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;smtp.gmail.com&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;                 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;587&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;domain&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;your.host.name&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_name&lt;/span&gt;            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sender@email.com&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;             &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_password&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authentication&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;plain&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encryption&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:starttls&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;备份mysql&lt;/h2&gt;
&lt;h3&gt;databases&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;text
&amp;gt;mysql -u root
&amp;gt;show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| edxapp             |
| mysql              |
| ora                |
| performance_schema |
| test               |
| xqueue             |
+--------------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;backup generate:model --trigger edx_mysql_backup \
  --databases=&amp;quot;mysql&amp;quot; --storages=&amp;#39;scp&amp;#39;  --compressor=&amp;#39;gzip&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;

&lt;span class="no"&gt;Model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:edx_mysql_backup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Description for edx_mysql_backup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;

  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# MySQL [Database]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;database&lt;/span&gt; &lt;span class="no"&gt;MySQL&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# To dump all databases, set `db.name = :all` (or leave blank)&lt;/span&gt;
    &lt;span class="c1"&gt;#db.name              = &amp;quot;my_database_name&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edxapp&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3306&lt;/span&gt;
    &lt;span class="c1"&gt;#mysql.sock  位置有变&lt;/span&gt;
    &lt;span class="c1"&gt;#db.socket             = &amp;quot;/tmp/mysql.sock&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;# Note: when using `skip_tables` with the `db.name = :all` option,&lt;/span&gt;
    &lt;span class="c1"&gt;# table names should be prefixed with a database name.&lt;/span&gt;
    &lt;span class="c1"&gt;# e.g. [&amp;quot;db_name.table_to_skip&amp;quot;, ...]&lt;/span&gt;
    &lt;span class="c1"&gt;#db.skip_tables        = [&amp;quot;skip&amp;quot;, &amp;quot;these&amp;quot;, &amp;quot;tables&amp;quot;]&lt;/span&gt;
    &lt;span class="c1"&gt;#db.only_tables        = [&amp;quot;only&amp;quot;, &amp;quot;these&amp;quot;, &amp;quot;tables&amp;quot;]&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;additional_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--quick&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--single-transaction&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# SCP (Secure Copy) [Storage]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;store_with&lt;/span&gt; &lt;span class="no"&gt;SCP&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_username&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_password&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;123.45.678.90&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/edx_backups/mysql&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keep&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

    &lt;span class="c1"&gt;# Additional options for the SSH connection.&lt;/span&gt;
    &lt;span class="c1"&gt;# server.ssh_options = {}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;##&lt;/span&gt;
  &lt;span class="c1"&gt;# Gzip [Compressor]&lt;/span&gt;
  &lt;span class="c1"&gt;#&lt;/span&gt;
  &lt;span class="n"&gt;compress_with&lt;/span&gt; &lt;span class="no"&gt;Gzip&lt;/span&gt; 
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;开始备份&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;backup perform -t edx_staticfile_backup
backup perform -t edx_mongodb_backup
backup perform -t edx_mysql_backup
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;定时任务&lt;/h2&gt;
&lt;p&gt;每天凌晨3:00&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo crontab -e&lt;/code&gt;写入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;00 03 * * * /usr/local/bin/backup perform -t edx_staticfile_backup
00 03 * * * /usr/local/bin/backup perform -t edx_mongodb_backup
00 03 * * * /usr/local/bin/backup perform -t edx_mysql_backup
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;后续&lt;/h1&gt;
&lt;p&gt;之后我们还是采用&lt;a href="http://backup.github.io/backup/v4/storage-rsync/"&gt;rsync&lt;/a&gt;的做法吧，不然数据大到一定程度，太浪费带宽了&lt;/p&gt;
&lt;p&gt;只要更改store_with就行&lt;/p&gt;
&lt;p&gt;注意：数据服务器到备份服务器应当配置好ssh免登陆&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="n"&gt;compress_with&lt;/span&gt; &lt;span class="no"&gt;Gzip&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rsyncable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;store_with&lt;/span&gt; &lt;span class="no"&gt;RSync&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;
    &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:ssh&lt;/span&gt;
    &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;123.45.67.89&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
    &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;#免密码ssh&lt;/span&gt;
    &lt;span class="c1"&gt;#每周为一轮，使用的是同名覆盖&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%A&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~/edx_backups/staticfile/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;注意&lt;/h1&gt;
&lt;p&gt;~/Backup/log/backup.log 中的时间是ruby的时间，与本地差（晚）8个小时。时区的问题&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 04 Jun 2015 00:00:00 +0000</pubDate><guid>tag:,2015-06-04:use-backup-for-edx.html</guid><category>edx</category></item><item><title>在微信中使用edX</title><link>/wechat_edx.html</link><description>&lt;p&gt;启用edX的所有API，可能是折腾edX以来遇到的最为艰难的问题之一（另一个是data analytics），前后利用晚上和周末的时间，折腾了好几周。&lt;/p&gt;
&lt;p&gt;困难主要因为文档不全或是没有，甚至有些措辞含糊，几次把我带入歧途，而社区里几乎找不到任何这方面的资料，有人提过此类问题，无一得到解决方案，无论是google group还是github。&lt;/p&gt;
&lt;p&gt;而这一块大家又都很关心（无论是社区还是国内edX开发者），因为edX的开放平台本质上就是开放的API,而edX的安卓和iOS与后端平台的通信，本质也都是基于oauth的API调用。&lt;/p&gt;
&lt;p&gt;上个月末收到一份邮件说，他们近期的工作主要集中在支付宝接口和微信端，问我是否有兴趣同他们协作（我此前有处理过&lt;a href="http://wwj718.github.io/edx-mobile-api.html"&gt;这方面的经验&lt;/a&gt;），他们应该是国内edx方面最具实力的团队之一了吧，我自然是很乐意的。业余时间（晚上和周末）同他们协作。&lt;/p&gt;
&lt;p&gt;暂时为内部项目，也尚有些样式的工作未完成，不方便公开，在此给大家提供大致的方向。&lt;/p&gt;
&lt;h1&gt;just do it&lt;/h1&gt;
&lt;h2&gt;思路&lt;/h2&gt;
&lt;p&gt;我们首先做任务陈述：允许edx用户通过微信公众平台访问edX，登录以及请求相关的数据&lt;/p&gt;
&lt;p&gt;这里假设读者们已经基本了解了&lt;a href="https://tools.ietf.org/html/draft-ietf-oauth-v2-31"&gt;OAuth2&lt;/a&gt;,包括它的一些基本概念和通信流程，如果还不了解，请先阅读OAuth2相关的材料。&lt;/p&gt;
&lt;p&gt;在我们的任务中，我们先识别出OAuth中的参与实体，RO(resource owner)，RS (resource server)和Client，至于AS(authorization server)在edx中和RS可以认为一体。&lt;/p&gt;
&lt;p&gt;很显然我们的任务中，edx平台作为RS，而edx user是RO，而我们自己写的微信公众号后台便是Client。&lt;/p&gt;
&lt;p&gt;由于edX微信后端和edX平台拥有者是相同的，所以我就不采用redirect的方式了。而假设Client是受信任的。&lt;/p&gt;
&lt;p&gt;那么通信的流程是这样的：edx user通过微信公众号中给Client发送账号和密码，而后Client携带用户账号和密码去换取授权令牌(Access Token)，且存下授权令牌，如此一来，概念上，用户在微信中便已经保持登录edX的状态了。&lt;/p&gt;
&lt;p&gt;而后Client根据用户请求，携带Access Token去服务器请求资源返回给微信用户。&lt;/p&gt;
&lt;p&gt;这里不应当混淆的是，&lt;code&gt;使用微信账户登录edx&lt;/code&gt;，和&lt;code&gt;在微信中以edx user身份访问edx&lt;/code&gt;，是两个完全不同的过程，&lt;code&gt;使用微信账户登录edx&lt;/code&gt;本质上是个第三方社交账号登录edx的问题，RS是微信，而&lt;code&gt;edx user在微信中访问edx&lt;/code&gt;，RS是edX。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;ps：当然最后为了使用网页来呈现edX api返回的用户相关数据（美化），我最后把&lt;code&gt;使用微信账户登录edx&lt;/code&gt;也做了。注意：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这不是必须的&lt;/li&gt;
&lt;li&gt;这会造成有两个oauth的问题&lt;/li&gt;
&lt;li&gt;这是为了样式上的美观&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你只用文本或是图文与用户交互，实际上不需要这步&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;好了，思路基本清晰了。&lt;/p&gt;
&lt;h2&gt;先前的经验&lt;/h2&gt;
&lt;p&gt;之前写过一篇博客：&lt;a href="http://wwj718.github.io/edx-mobile-api.html"&gt;让edx为手机端提供接口&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本打算按照之前的经验，却发现，采用TokenAuthentication的解决方案除了侵入性太强，不够优雅之外，安全性也得不到保证&lt;/p&gt;
&lt;p&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-platform-api/en/latest/authentication.html?highlight=secure"&gt;EdX API Authentication&lt;/a&gt;中有一句话，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OAuth 2.0 is an open standard used by many systems that require secure user authentication&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我开始以为，secure只是个建议，稍后我们会发现，这是个强制要求。&lt;/p&gt;
&lt;p&gt;我顺着&lt;a href="http://edx.readthedocs.org/projects/edx-platform-api/en/latest/"&gt;API接口&lt;/a&gt;，从url一路跟踪到view里，看到，所有的api都是基于OAuth2Authentication, SessionAuthentication认证的。虽说使用我前一篇博客提到的TokenAuthentication认证方法，理论上也是可行的，可是却要为每个接口代码注入TokenAuthentication认证方式，很不友好，另一方面，安全性上也不如OAuth2。&lt;/p&gt;
&lt;p&gt;顺带提一下，无论是OAuth2Authentication, SessionAuthentication还是TokenAuthentication，本质都是个认证问题，而认证过程在django中间件里实现，对关注业务逻辑的开发者而言是透明的，而edx的api使用的统一是OAuth2Authentication和SessionAuthentication。&lt;/p&gt;
&lt;p&gt;那么思路基本就清晰了，可选的路线只有一条，绕不过OAuth2.&lt;/p&gt;
&lt;p&gt;在文档跟不上源码，社区反馈寥寥的情况下，阅读源码，根据语义和通常的习惯做法，猜测，实验，验证，基本就是我的摸索方案了&lt;/p&gt;
&lt;h2&gt;接下来你要做的&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;走通OAuth2的流程（安全链接是个强制前提！）&lt;ul&gt;
&lt;li&gt;推荐使用&lt;a href="https://github.com/jakubroztocil/httpie"&gt;httpie&lt;/a&gt;替代curl做实验。而在微信后端的Python脚本中，用来请求API的工具推荐用requests&lt;/li&gt;
&lt;li&gt;福利：如果你走通了edX OAuth2的流程，实际上手机端编译使用的问题也解决了！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;开启所有API接口，并阅读文档&lt;a href="http://edx.readthedocs.org/projects/edx-platform-api/en/latest/"&gt;EdX Platform APIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate><guid>tag:,2015-05-30:wechat_edx.html</guid><category>edx</category></item><item><title>edx中数据可视化相关</title><link>/edx-insight.html</link><description>&lt;p&gt;对edX数据这部分关注已久，也耗费了我大量时间。&lt;/p&gt;
&lt;p&gt;五月以来，利用晚上和周末时间，走通了edX oauth2这块的流程，目前edX平台相关的数据理论上可以在微信/手机移动端以及第三方平台使用和呈现。我最近试图通过微信和edX两边的oauth，将两者相连，目前进展还算顺利，不过复杂度比我预期的要高。即将完成edX微信服务号的beta版本。此后会将这部分的思路丢到博客上。&lt;/p&gt;
&lt;p&gt;我本计划在工作的一年期内，理清edX的架构和逻辑/数据流，如今应该还剩下最后一块难啃的骨头，就是可视化数据展示了&lt;/p&gt;
&lt;p&gt;这部分的价值和意义不需多说，数据分析和可视化这也是edX最吸引我的地方之一，其中的行为分析和数据挖掘的潜力，令很多教育从业者青眼有加。&lt;/p&gt;
&lt;p&gt;在此分享这部分我所了解的资料和进展，有兴趣的小伙伴可以在此基础上继续挖掘。如果你对这块也了解的话，可以发email给我：&lt;a href="mailto:wuwenjie718@gmail.com"&gt;wuwenjie718@gmail.com&lt;/a&gt;
，我们一起折腾&lt;/p&gt;
&lt;h1&gt;insights&lt;/h1&gt;
&lt;p&gt;谈到edx中数据可视化，必然提起的是insights。&lt;br /&gt;
我们先来看下insights是什么&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Course teams use edX Insights to access to data gathered from active courses. Course teams use edX Insights to display charts, summary statistics, and data tables......&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;架构&lt;/h1&gt;
&lt;p&gt;&lt;img alt="insight_architecture" src="img/edx/Analytics_Pipeline.png" /&gt;&lt;/p&gt;
&lt;h1&gt;组件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;LMS. LMS产生学生与平台交互时产生的信息，记录到tracking log中，tracking log是此后分析的数据来源，关于tracking log可以参考我的&lt;a href="http://wwj718.github.io/edx-tracking-logs-data-research.html"&gt;这篇文章&lt;/a&gt;.LMS也在MySQL中产生大量学生相关的信息&lt;/li&gt;
&lt;li&gt;edX Analytics Pipeline.这一块就是数据处理的核心所在了。有以下依赖&lt;ul&gt;
&lt;li&gt;Hadoop&lt;/li&gt;
&lt;li&gt;Hive&lt;/li&gt;
&lt;li&gt;Sqoop&lt;/li&gt;
&lt;li&gt;&gt;=MySQL5.6&lt;/li&gt;
&lt;li&gt;Python 2.7&lt;/li&gt;
&lt;li&gt;&gt;=ubuntu12.04&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scheduler  任务调度&lt;/li&gt;
&lt;li&gt;edX Insights  可以将其视为web表现层，向用户呈现分析的结果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各个组件的协作可在架构图中看出&lt;/p&gt;
&lt;h1&gt;相关的库&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-pipeline"&gt;edx-analytics-pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-data-api"&gt;edx-analytics-data-api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-dashboard"&gt;edx-analytics-dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此前有个更早的原型库&lt;a href="https://github.com/edx/insights"&gt;insights&lt;/a&gt;.后来将其功能拆解到以上三个库中&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;综上我们发现，要使这部分可用，最困难的地方来自edx-analytics-pipeline，其依赖了亚马逊的服务，在国内使用很不方便。至于insights这些模块其实在configuration/master中已经是默认安装的（内部端口是8110），要做的不过是做些配置&lt;/p&gt;
&lt;p&gt;目前想到两个方案：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用一台单独的服务器来跑数据分析相关的计算，并保证其能稳定连接亚马逊服务（你懂的）&lt;/li&gt;
&lt;li&gt;使用docker来跑analytics相关的任务，可参考这个分支：&lt;a href="https://github.com/edx/configuration/tree/gabe/analytics-docker"&gt;analytics-docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;题外：我相信跑在docker上的edX是普及edX（企业级内部培训系统）的方向，edX系统的复杂度，已经影响到其可用性了。作为教育从业者，我想要一个可用的系统。最好是简单稳定的黑盒就好，你特么丢给我一堆零件是什么鬼&lt;/p&gt;
&lt;h1&gt;将analytics跑起来的相关资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-pipeline/wiki/Running-the-analytics-backend-locally"&gt;Running the analytics backend locally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-pipeline/wiki/How-Stanford-Online-runs-the-analytics-stack"&gt;How Stanford Online runs the analytics stack
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;edX的其他数据可视化&lt;/h1&gt;
&lt;p&gt;可以看下我此前的&lt;a href="http://wwj718.github.io/edX-Learning-Dashboard-Challenge.html"&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx-installing-configuring-and-running.readthedocs.org/en/latest/analytics/install_analytics.html"&gt;Installing edX Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-analytics-pipeline/wiki"&gt;edx-analytics-pipeline/wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 28 May 2015 00:00:00 +0000</pubDate><guid>tag:,2015-05-28:edx-insight.html</guid><category>edx</category></item><item><title>edx数据迁移</title><link>/edx-data-migrate.html</link><description>&lt;p&gt;此前处理过几次edx数据迁移方面的工作，包括&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;更换服务器，整个平台的迁移（迁移前后edx版本相同&lt;code&gt;release-2014-09-17&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;部署birch版的edX，将既有数据(来自&lt;code&gt;release-2014-09-17&lt;/code&gt;)迁移到birch中&lt;/li&gt;
&lt;li&gt;将平台数据迁移给docker中的edx使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1,3本质上是数据导出与导入问题，2涉及到新旧版edx数据结构的变化，下边分别说明。&lt;/p&gt;
&lt;h1&gt;几点建议&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;一定记得备份！！&lt;/li&gt;
&lt;li&gt;弄清你关心的数据是什么，最坏的情况下，需要手动迁移，明确自己关心的数据，将减少大量工作，以下几类数据可能是你在意的（如有遗漏，欢迎补充）：  &lt;ul&gt;
&lt;li&gt;用户注册表（mysql edxapp库中auth_user表）&lt;/li&gt;
&lt;li&gt;用户信息表（mysql edxapp库中auth_userprofile）&lt;/li&gt;
&lt;li&gt;用户/课程关系表（mysql edxapp库中student_courseenrollment表）&lt;/li&gt;
&lt;li&gt;学生答题记录（mysql edxapp库中courseware_studentmodule）（可能会比较大）&lt;/li&gt;
&lt;li&gt;论坛里的帖子和评论（mongo/cs_comments_service_development/contents）&lt;/li&gt;
&lt;li&gt;论坛里的用户（mongo/cs_comments_service_development/users）&lt;/li&gt;
&lt;li&gt;用户订阅帖子的关系（mongo/cs_comments_service_development/subscriptions）&lt;/li&gt;
&lt;li&gt;课程内容，这个当然也在mongo中，不过直接使用studio提供的export和import就好。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果是整个系统的迁移，除了考虑数据库中的数据之外，还应该考虑静态文件，静态文件基本分布在&lt;code&gt;/edx/var/edxapp/staticfiles&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;just do it&lt;/h1&gt;
&lt;p&gt;分三部分来说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同版本的edx迁移时的数据迁移（本质是数据导出和导入）&lt;/li&gt;
&lt;li&gt;edx升级后的数据迁移&lt;/li&gt;
&lt;li&gt;将数据迁移给docker中的edx使用（版本相同）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;同版本的edx迁移时的数据迁移（本质是数据导出和导入）&lt;/h2&gt;
&lt;p&gt;之所以要在同版本中迁移数据，是因为服务器发生了变更，需要迁移整个平台。尝试过打包整个系统的做法（tar备份还原），也试过使用Remastersys做整个系统的镜像，两种方法造成的结果都是数据库罢工。基于dd指令的方法还没用过 :)。以上其实是个运维的问题，我对此并不很熟悉。&lt;/p&gt;
&lt;p&gt;所以最终采用的是重新在一个新的平台上部署，之后将数据迁移过去。这样做确实挺烦的，edx的每次国内安装过程都很蛋疼（你懂的），所以才一直想使用docker来跑edx，这样迁移什么的都酸爽极了，更不用说开发。&lt;/p&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#导出，mysqldump -u 用户名 数据库名 &amp;gt; 导出的文件名 ，ansible安装mysql时，没设密码，所以不需要-p
mysqldump -u root edxapp &amp;gt; /path/to/edxapp.sql

#使用scp将导出文件复制到目标服务器上

#在目标服务器上导入
mysql -u root edxapp &amp;lt; /path/to/edxapp.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一般来说主要数据都在edxapp里，如果你要备份所有数据的话，使用这条&lt;code&gt;mysqldump  -u root --all-databases&amp;gt; alldb.sql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对应的还原&lt;code&gt;mysql -u root -p &amp;lt; alldb.sql&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;mongo&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#导出mongo中所有数据
mongodump -h 127.0.0.1 -o /path/to/mongodb/

#将其用tar打包，scp复制到目标服务器上，解压

#在目标服务器导入数据
mongodump -h 127.0.0.1 -o /path/to/mongodb/
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;edx升级后的数据迁移&lt;/h2&gt;
&lt;p&gt;首先让人想到的是&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Full-Stack#updating-versions-using-edx-repos"&gt;update&lt;/a&gt;,但据我所知很少有人能一次性update成功的，这归结于edx的依赖错综复杂。&lt;/p&gt;
&lt;p&gt;update究竟干了啥，look &lt;a href="https://github.com/edx/configuration/blob/master/playbooks/roles/edx_ansible/templates/update.j2"&gt;here&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;如果使用update，中途遇到的问题，只好手动处理了&lt;/p&gt;
&lt;p&gt;如果是从aspen升级到birch，参考&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/birch.html#upgrading-from-aspen-to-birch"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;手动迁移&lt;/h3&gt;
&lt;p&gt;我当时面对的场景是，在一台新的服务器上部署birch，然后要将release-2014-09-17版上的数据迁移过去。&lt;br /&gt;
当时的做法比较简单，因为我们只对文章开头提到几类数据感兴趣，所以对比了这些数据表结构基本没变化后，我直接导出旧有数据，覆盖新的，至于mongo部分也是如此，推荐使用diff做比较。手动的方案虽然繁琐，但足够灵活。&lt;br /&gt;
至于定制的代码，都限制在独立的django application里，所以定制代码的迁移也并不麻烦。复制整个application目录便是，之后syncdb/migrate一下。&lt;/p&gt;
&lt;h4&gt;mysql&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#导出数据表：mysqldump -u 用户名 -p 数据库名 表名&amp;gt; 导出的文件名
mysqldump -u root edxapp auth_user&amp;gt; /path/to/auth_user.sql
mysqldump -u root edxapp auth_userprofile&amp;gt; /path/to/auth_userprofile.sql
mysqldump -u root edxapp student_courseenrollment&amp;gt; /path/to/student_courseenrollment.sql

#导入数据表,先备份/删除同名表 
#备份可用上边的方法
mysql -u root
use edxapp
drop table &amp;lt;表名&amp;gt;;
source /path/to/auth_user.sql
source /path/to/auth_userprofile.sql
source /path/to/student_courseenrollment.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;mongo&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#在旧版服务器导出所需的collections。参数含义： -d database_name -c collection_name
mongoexport -d cs_comments_service_development -c contents -o /path/to/contents.dat
mongoexport -d cs_comments_service_development -c users -o /path/to/users.dat
mongoexport -d cs_comments_service_development -c  subscriptions -o /path/to/subscriptions.dat
#modulestore
mongoexport -d edxapp -c  modulestore -o /path/to/modulestore.dat


#使用scp将以上dat文件复制到目标服务器

#在目标服务器上先删除同名collectons，删除前记得备份
mongo
use cs_comments_service_development
db.contents.drop()
db.users.drop()
db.subscriptions.drop()
#导入所需的collections
mongoimport -d cs_comments_service_development -c contents  /path/to/contents.dat
mongoimport -d cs_comments_service_development -c users path/to/users.dat
mongoimport -d cs_comments_service_development -c subscriptions path/to/subscriptions.dat
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;自动迁移&lt;/h3&gt;
&lt;p&gt;后来想到更好的方案&lt;br /&gt;
当初在release-2014-09-17上做二次开发时有考虑到之后要升级的问题，所以二次开发的代码除了限制在一个application里之外，还都在wwj_master分支上。&lt;br /&gt;
首先在旧版服务器上工作:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拉取所需的远程新版分支到本地: &lt;code&gt;git checkout -b new_branch origin/new_branch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将wwj_master分支衍合(rebase)到新版分支上：&lt;code&gt;git rebase new_branch wwj_master&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于衍合的知识可以看&lt;a href="http://git-scm.com/book/zh/v1/Git-%E5%88%86%E6%94%AF-%E5%88%86%E6%94%AF%E7%9A%84%E8%A1%8D%E5%90%88#有趣的衍合"&gt;这里&lt;/a&gt;&lt;br /&gt;
rebase完之后，同步数据库，执行syncdb和migrate。这里有&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Full-Stack"&gt;相关命令&lt;/a&gt;&lt;br /&gt;
如此一来，就完成了edx-platform源码的升级，定制的内容也都在，同时旧版的数据库也和新版一致了。&lt;br /&gt;
此后直接将旧版上整套edx-platform源码和数据库备份文件，移到新版服务器中进行替换就行。&lt;br /&gt;
很像1中&lt;code&gt;同版本的迁移时的数据迁移&lt;/code&gt;的情况了。&lt;/p&gt;
&lt;h2&gt;将数据迁移给docker中的edx使用（edx版本相同）&lt;/h2&gt;
&lt;p&gt;这里其实和&lt;code&gt;同版本的edx迁移时的数据迁移（本质是数据导出和导入）&lt;/code&gt;没啥区别，需要注意的是，记得将数据库文件目录挂载出来，使用&lt;code&gt;-v&lt;/code&gt;参数，这样数据的安全性得到保证，数据不会因为docker进程的挂掉而丢失。  &lt;br /&gt;
顺便提一下，把静态文件目录&lt;code&gt;/edx/var/edxapp/staticfiles&lt;/code&gt;也挂载出去.&lt;br /&gt;
总之，使用docker的核心观念之一是容器无状态。把你认为需要状态的数据都挂载出去&lt;/p&gt;
&lt;h1&gt;附录&lt;/h1&gt;
&lt;p&gt;我在升级&lt;code&gt;release-2014-09-17&lt;/code&gt;到&lt;code&gt;named-release/birch&lt;/code&gt;时，对比过mysql中所有表结构的差异。&lt;/p&gt;
&lt;h2&gt;用到的相关指令&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#在旧版服务器上
mysqldump -u root  -d edxapp &amp;gt; /path/to/old_edx.sql
#在新版服务器上
mysqldump -u root  -d edxapp &amp;gt; /path/to/new_edx.sql
vimdiff /path/to/old_edx.sql /path/to/new_edx.sql 
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;2016.04.07更新&lt;/p&gt;
&lt;p&gt;如果从birch迁移到dogwood，那么数据表有以下差异&lt;/p&gt;
&lt;h3&gt;mongodb&lt;/h3&gt;
&lt;p&gt;cs_comments_service_development数据库中contents表新版比老版多一个key:context,value:string&lt;/p&gt;
&lt;p&gt;cat contents.dat | jq -c '. + { "context": "course" }' &amp;gt; contents_ok.dat&lt;/p&gt;
&lt;p&gt;-c：不改变单行模式&lt;/p&gt;
&lt;p&gt;另一个问题是course_id发生了变化你可以使用vi逐个替代&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:%s,edX/DemoX/Demo_Course,course-v1:edX+DemoX+Demo_Course,g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;课程多的话使用，vi显然效率太低，也可以使用sed和jq来做流式编辑&lt;/p&gt;
&lt;p&gt;（思路：1.使用正则首先需要定位，course_id之后，然后分组捕获元素，使用环顾，或者逐行装换为json）&lt;/p&gt;
&lt;p&gt;我对python的正则熟悉一些还是用python好了，往&lt;code&gt;format_course_id.py&lt;/code&gt;写入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;
&lt;span class="c1"&gt;#使用流&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;#print line&lt;/span&gt;
  &lt;span class="n"&gt;json_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;old_course_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json_line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;course_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_course_id&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;old_course_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;old_course_id_items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;old_course_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#print old_course_id_items&lt;/span&gt;
    &lt;span class="n"&gt;new_course_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;course-v1:{}+{}+{}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;old_course_id_items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;old_course_id_items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;old_course_id_items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;json_line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;course_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_course_id&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cat contents.dat | python format_course_id.py &amp;gt;/tmp/contents.dat&lt;/p&gt;
&lt;h3&gt;mysql&lt;/h3&gt;
&lt;p&gt;auth_userprofile表dogwood比brich多了两个字段:bio和profile_image_uploaded_at;&lt;/p&gt;
&lt;p&gt;迁移方法为先&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SET FOREIGN_KEY_CHECKS=0;  //取出依赖检查&lt;/li&gt;
&lt;li&gt;DROP TABLE auth_user;  &lt;/li&gt;
&lt;li&gt;DROP TABLE auth_userprofile;  //删除旧表&lt;/li&gt;
&lt;li&gt;导入新表&lt;/li&gt;
&lt;li&gt;修改表结构&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;auth_userprofile&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="n"&gt;bio&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;auth_userprofile&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="n"&gt;profile_image_uploaded_at&lt;/span&gt;  &lt;span class="n"&gt;DATETIME&lt;/span&gt;  &lt;span class="k"&gt;NULL&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后SET FOREIGN_KEY_CHECKS=1&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 07 May 2015 00:00:00 +0000</pubDate><guid>tag:,2015-05-07:edx-data-migrate.html</guid><category>edx</category></item><item><title>基于tracking logs的数据分析</title><link>/edx-tracking-logs-data-research.html</link><description>&lt;p&gt;最近打算写edX数据相关的文章，这一块庞大繁杂，资料分散，近来在这块花了大量时间，收集了大量资料源码以及阅读了基本所有可读的文档，决定将其整理出来，目的有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整理一下自己的资料，不至于让数据成为坟墓，为下次深入留下线索，不至于重头开始&lt;/li&gt;
&lt;li&gt;也希望能帮助到后来的人，不会像我此前一般毫无头绪，备受煎熬&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还没想好怎么组织这些文档资料和心得，先从一个具体的需求入手好了。&lt;/p&gt;
&lt;h1&gt;任务描述&lt;/h1&gt;
&lt;p&gt;统计每个学生在每门课上的花费的学习时间&lt;/p&gt;
&lt;h1&gt;Tracking Logs&lt;/h1&gt;
&lt;p&gt;为了完成以上任务，首先想到了&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html"&gt;Tracking Logs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是个什么东西呢，文档中是这样介绍的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Events are emitted by the server, the browser, or the mobile device to capture information about interactions with the courseware and the Instructor Dashboard in the LMS, and are stored in JSON documents. In the data package, event data is delivered in a log file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就是说这是个日志文件，内容为json格式，记录着用户与平台交互时发生的特定事件，事件可能由浏览器/后台系统或是手机端触发。&lt;/p&gt;
&lt;p&gt;那么都有哪些行为会被记录呢？&lt;/p&gt;
&lt;p&gt;这是所有的&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/event_list.html"&gt;事件列表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中比较有趣的是学生观看视频的许多行为都被记录，比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edx.video.loaded&lt;/li&gt;
&lt;li&gt;edx.video.paused&lt;/li&gt;
&lt;li&gt;edx.video.played&lt;/li&gt;
&lt;li&gt;edx.video.position.changed&lt;/li&gt;
&lt;li&gt;edx.video.stopped&lt;/li&gt;
&lt;li&gt;edx.video.transcript.hidden&lt;/li&gt;
&lt;li&gt;edx.video.transcript.shown&lt;/li&gt;
&lt;li&gt;and so on...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从这里可能挖掘出大量对改良教学本身有所助益的数据，好比学生反复回看某个视频段，那么团队可能发现这里也许讲解的不够清晰，更多有趣的行为分析，大家可以发挥想象，我觉得这也是edX最有趣的地方之一&lt;/p&gt;
&lt;p&gt;最后给一个日志例子，我们就结束对Tracking Logs的介绍&lt;/p&gt;
&lt;pre&gt;
{
    "username": "AAAAAAAAAA",
    "event_source": "server",
    "name": "edx.course.enrollment.deactivated",
    "referer": "http:\/\/localhost:8001\/container\/i4x:\/\/edX\/DemoX\/vertical\/69dedd38233a46fc89e4d7b5e8da1bf4?action=new",
    "accept_language": "en-US,en;q=0.8",
    "time": "2014-01-26T00:28:28.388782+00:00",
    "agent": "Mozilla\/5.0 (Windows NT 6.1; WOW64; Trident\/7.0; rv:11.0) like Gecko",
    "page": null
    "host": "courses.edx.org",
    "session": "a14j3ifhskngw0gfgn230g",
    "context": {
      "user_id": 9999999,
      "org_id": "edX",
      "course_id": "edX\/DemoX\/Demo_Course",
      "path": "\/change_enrollment",
    },
    "ip": "NN.NN.NNN.NNN",
    "event": {
      "course_id": "edX\/DemoX\/Demo_Course",
      "user_id": 9999999,
      "mode": "honor"
    },
    "event_type": "edx.course.enrollment.deactivated"
  }
&lt;/pre&gt;

&lt;p&gt;更多的信息大家可自行去看日志文件,在&lt;code&gt;/edx/var/log/tracking&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对tracking log结构有兴趣的同学可以查看edx admin中的&lt;code&gt;/admin/track/trackinglog/add/&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;既然&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html"&gt;tracking_logs&lt;/a&gt;跟踪记录了学生的所有行为数据，那么我们就从这里入手。看看能否从中挖掘出每个学生在每一门课所花的时间。&lt;br /&gt;
那么接下去的工作自然就变成对日志文本的解读，了解每个数据项的含义，这部分的文档也都在&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html#video-interaction-events"&gt;这里&lt;/a&gt;。此外我们知道，了解用户是否在线，sessions往往是关键。 &lt;br /&gt;
而后设计计算用户在线时长的算法，再往后使用splunk或是hadoop来计算。&lt;br /&gt;
此后我去edx社区发了个求助帖，看看社区的建议，大家回复也基本是从sessions入手，@Alexander的回复让我很是开心，他说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The million dollar question&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;哈哈，我也觉得这是件很有价值的数据挖掘工作，此外@Kristin女神提到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;and as far as I know there is no hearbeat event...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;她还提到些session的细节，诸如粒度只到半小时（没有心跳检测），她似乎对这块很了解，还提出记录鼠标移动点击页面之类的事件，以此作为心跳检测，这是个很有趣的思路，这种思路也可以用来防作弊用。有兴趣的同学可以进一步挖掘，或是自定义事件来观察用户行为。&lt;/p&gt;
&lt;h1&gt;just do it&lt;/h1&gt;
&lt;p&gt;而后我就开始阅读理解这些数据，和思考算法。&lt;br /&gt;
这个过程中，我也在github上搜索相关的项目，发现McGill大学也在做了&lt;a href="https://github.com/McGillX/edx_data_research"&gt;这方面的工作&lt;/a&gt;，McGill是edX用户，这是加拿大的一所顶级名校，被誉为“加拿大的哈佛”。&lt;br /&gt;
随后翻了他们的源码库，发现他们在数据分析这块，可能是除了edx核心源码库之外走的最远的了，而且更棒的是，他们的分析多是以脚本形式，耦合度很低。读了几个脚本，发现和我此前的思路基本一致，很容易理解，那么我们就跟着McGill做好啦！！&lt;br /&gt;
所有功劳归McGill！&lt;/p&gt;
&lt;h1&gt;步骤细节&lt;/h1&gt;
&lt;p&gt;建议数据分析在单独的机器上做，避免影响服务器性能&lt;/p&gt;
&lt;h2&gt;导出tracking logs&lt;/h2&gt;
&lt;p&gt;tracking Logs位于&lt;code&gt;/edx/var/log/tracking&lt;/code&gt;&lt;br /&gt;
使用rsync同步这些文件，好处是rsync效率很高，每次只同步新增的部分。&lt;/p&gt;
&lt;h2&gt;导入到mongo&lt;/h2&gt;
&lt;p&gt;使用以下脚本：&lt;a href="https://raw.githubusercontent.com/wwj718/edx_data_research/master/parsing/tracking_logs/load_tracking_logs_to_mongo.py"&gt;load_tracking_logs_to_mongo&lt;/a&gt;  将log加载到mongo里&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python load_tracking_logs_to_mongo.py db_name collection_name &amp;lt;path_to_directory&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然也可以选择性地处理日志文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python load_tracking_logs_to_mongo.py db_name collection_name &amp;lt;path_to_file_1&amp;gt; &amp;lt;path_to_file_2&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此外还可以选择性地加载课程相关的日志，并且指定时间段。可参考&lt;a href="https://github.com/wwj718/edx_data_research/tree/master/parsing/tracking_logs"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上是我从Mcgill大学fork的仓库，他们的&lt;a href="https://github.com/wwj718/edx_data_research/tree/master/reporting_scripts"&gt;reporting_scripts&lt;/a&gt;里有一个小bug,我修复了，顺便提了个pull request,好像上游仓库还没处理，所以大家可以先用我的&lt;/p&gt;
&lt;h2&gt;查看课程&lt;/h2&gt;
&lt;p&gt;现在可以在mongo里查下都有哪些课程&lt;br /&gt;
&lt;code&gt;db.tracking.distinct('context.course_id')&lt;/code&gt;&lt;br /&gt;
通过以上command可以得到log里的所有course_id&lt;/p&gt;
&lt;h2&gt;归并文档&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;db.tracking.aggregate([{$match :{ 'context.course_id' : 'your_course_id' }}, {$out : 'your_course_id'}])&lt;/code&gt;&lt;br /&gt;
以上指令根据你指定的course_id，归并文档成为一个collection。&lt;/p&gt;
&lt;h2&gt;统计用户在线时间&lt;/h2&gt;
&lt;p&gt;下载&lt;a href="https://raw.githubusercontent.com/wwj718/edx_data_research/master/reporting_scripts/session_info.py"&gt;session_info&lt;/a&gt;脚本，修改里边的参数（DATABASE_NAME和collection_name）&lt;br /&gt;
执行&lt;code&gt;python session_info.py&lt;/code&gt;，就可以得到所有用户这门课中每个session期间的在线时长，结果以一份csv报表(session_info.csv)呈现，
报表内容为&lt;code&gt;['Username', 'Session ID', 'Number of Events', 'Start Time', 'End Time', 'Time Spent']&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;如果需要统计同个用户在该课程下的花费的所有时长，只需要做个累加就行。使用pandas可能很方便~&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;p&gt;以上只是一个可行方案，并没考虑效率，今天我翻了下我在5月4号发的帖子，@Alexander回复说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;we created that script to get an initial idea but found it a very poor proxy and not helpful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我这才得知他便是McGill大学&lt;a href="https://github.com/McGillX/edx_data_research"&gt;edx_data_research&lt;/a&gt;项目的开发者。的确这只是个零时的不够优雅的解决方案。&lt;/p&gt;
&lt;p&gt;如果要生产环境使用，必须考虑效率问题，可能以下几个内容会被考虑到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用单独的计算资源，不要影响主服务器&lt;/li&gt;
&lt;li&gt;定时计划任务(cron)&lt;/li&gt;
&lt;li&gt;考虑并发&lt;/li&gt;
&lt;li&gt;使用hadoop或者spark&lt;/li&gt;
&lt;li&gt;将计算结果存回数据库&lt;/li&gt;
&lt;li&gt;新建一个页面向课程团队展示分析结果&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 06 May 2015 00:00:00 +0000</pubDate><guid>tag:,2015-05-06:edx-tracking-logs-data-research.html</guid><category>edx</category></item><item><title>基于tracking logs的数据分析</title><link>/edx-tracking-logs-data-research.html</link><description>&lt;p&gt;最近打算写edX数据相关的文章，这一块庞大繁杂，资料分散，近来在这块花了大量时间，收集了大量资料源码以及阅读了基本所有可读的文档，决定将其整理出来，目的有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整理一下自己的资料，不至于让数据成为坟墓，为下次深入留下线索，不至于重头开始&lt;/li&gt;
&lt;li&gt;也希望能帮助到后来的人，不会像我此前一般毫无头绪，备受煎熬&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还没想好怎么组织这些文档资料和心得，先从一个具体的需求入手好了。&lt;/p&gt;
&lt;h1&gt;任务描述&lt;/h1&gt;
&lt;p&gt;统计每个学生在每门课上的花费的学习时间&lt;/p&gt;
&lt;h1&gt;Tracking Logs&lt;/h1&gt;
&lt;p&gt;为了完成以上任务，首先想到了&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html"&gt;Tracking Logs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是个什么东西呢，文档中是这样介绍的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Events are emitted by the server, the browser, or the mobile device to capture information about interactions with the courseware and the Instructor Dashboard in the LMS, and are stored in JSON documents. In the data package, event data is delivered in a log file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就是说这是个日志文件，内容为json格式，记录着用户与平台交互时发生的特定事件，事件可能由浏览器/后台系统或是手机端触发。&lt;/p&gt;
&lt;p&gt;那么都有哪些行为会被记录呢？&lt;/p&gt;
&lt;p&gt;这是所有的&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/event_list.html"&gt;事件列表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中比较有趣的是学生观看视频的许多行为都被记录，比如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edx.video.loaded&lt;/li&gt;
&lt;li&gt;edx.video.paused&lt;/li&gt;
&lt;li&gt;edx.video.played&lt;/li&gt;
&lt;li&gt;edx.video.position.changed&lt;/li&gt;
&lt;li&gt;edx.video.stopped&lt;/li&gt;
&lt;li&gt;edx.video.transcript.hidden&lt;/li&gt;
&lt;li&gt;edx.video.transcript.shown&lt;/li&gt;
&lt;li&gt;and so on...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从这里可能挖掘出大量对改良教学本身有所助益的数据，好比学生反复回看某个视频段，那么团队可能发现这里也许讲解的不够清晰，更多有趣的行为分析，大家可以发挥想象，我觉得这也是edX最有趣的地方之一&lt;/p&gt;
&lt;p&gt;最后给一个日志例子，我们就结束对Tracking Logs的介绍&lt;/p&gt;
&lt;pre&gt;
{
    "username": "AAAAAAAAAA",
    "event_source": "server",
    "name": "edx.course.enrollment.deactivated",
    "referer": "http:\/\/localhost:8001\/container\/i4x:\/\/edX\/DemoX\/vertical\/69dedd38233a46fc89e4d7b5e8da1bf4?action=new",
    "accept_language": "en-US,en;q=0.8",
    "time": "2014-01-26T00:28:28.388782+00:00",
    "agent": "Mozilla\/5.0 (Windows NT 6.1; WOW64; Trident\/7.0; rv:11.0) like Gecko",
    "page": null
    "host": "courses.edx.org",
    "session": "a14j3ifhskngw0gfgn230g",
    "context": {
      "user_id": 9999999,
      "org_id": "edX",
      "course_id": "edX\/DemoX\/Demo_Course",
      "path": "\/change_enrollment",
    },
    "ip": "NN.NN.NNN.NNN",
    "event": {
      "course_id": "edX\/DemoX\/Demo_Course",
      "user_id": 9999999,
      "mode": "honor"
    },
    "event_type": "edx.course.enrollment.deactivated"
  }
&lt;/pre&gt;

&lt;p&gt;更多的信息大家可自行去看日志文件,在&lt;code&gt;/edx/var/log/tracking&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对tracking log结构有兴趣的同学可以查看edx admin中的&lt;code&gt;/admin/track/trackinglog/add/&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;既然&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html"&gt;tracking_logs&lt;/a&gt;跟踪记录了学生的所有行为数据，那么我们就从这里入手。看看能否从中挖掘出每个学生在每一门课所花的时间。&lt;br /&gt;
那么接下去的工作自然就变成对日志文本的解读，了解每个数据项的含义，这部分的文档也都在&lt;a href="http://edx.readthedocs.org/projects/devdata/en/latest/internal_data_formats/tracking_logs.html#video-interaction-events"&gt;这里&lt;/a&gt;。此外我们知道，了解用户是否在线，sessions往往是关键。 &lt;br /&gt;
而后设计计算用户在线时长的算法，再往后使用splunk或是hadoop来计算。&lt;br /&gt;
此后我去edx社区发了个求助帖，看看社区的建议，大家回复也基本是从sessions入手，@Alexander的回复让我很是开心，他说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The million dollar question&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;哈哈，我也觉得这是件很有价值的数据挖掘工作，此外@Kristin女神提到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;and as far as I know there is no hearbeat event...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;她还提到些session的细节，诸如粒度只到半小时（没有心跳检测），她似乎对这块很了解，还提出记录鼠标移动点击页面之类的事件，以此作为心跳检测，这是个很有趣的思路，这种思路也可以用来防作弊用。有兴趣的同学可以进一步挖掘，或是自定义事件来观察用户行为。&lt;/p&gt;
&lt;h1&gt;just do it&lt;/h1&gt;
&lt;p&gt;而后我就开始阅读理解这些数据，和思考算法。&lt;br /&gt;
这个过程中，我也在github上搜索相关的项目，发现McGill大学也在做了&lt;a href="https://github.com/McGillX/edx_data_research"&gt;这方面的工作&lt;/a&gt;，McGill是edX用户，这是加拿大的一所顶级名校，被誉为“加拿大的哈佛”。&lt;br /&gt;
随后翻了他们的源码库，发现他们在数据分析这块，可能是除了edx核心源码库之外走的最远的了，而且更棒的是，他们的分析多是以脚本形式，耦合度很低。读了几个脚本，发现和我此前的思路基本一致，很容易理解，那么我们就跟着McGill做好啦！！&lt;br /&gt;
所有功劳归McGill！&lt;/p&gt;
&lt;h1&gt;步骤细节&lt;/h1&gt;
&lt;p&gt;建议数据分析在单独的机器上做，避免影响服务器性能&lt;/p&gt;
&lt;h2&gt;导出tracking logs&lt;/h2&gt;
&lt;p&gt;tracking Logs位于&lt;code&gt;/edx/var/log/tracking&lt;/code&gt;&lt;br /&gt;
使用rsync同步这些文件，好处是rsync效率很高，每次只同步新增的部分。&lt;/p&gt;
&lt;h2&gt;导入到mongo&lt;/h2&gt;
&lt;p&gt;使用以下脚本：&lt;a href="https://raw.githubusercontent.com/wwj718/edx_data_research/master/parsing/tracking_logs/load_tracking_logs_to_mongo.py"&gt;load_tracking_logs_to_mongo&lt;/a&gt;  将log加载到mongo里&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python load_tracking_logs_to_mongo.py db_name collection_name &amp;lt;path_to_directory&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然也可以选择性地处理日志文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python load_tracking_logs_to_mongo.py db_name collection_name &amp;lt;path_to_file_1&amp;gt; &amp;lt;path_to_file_2&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此外还可以选择性地加载课程相关的日志，并且指定时间段。可参考&lt;a href="https://github.com/wwj718/edx_data_research/tree/master/parsing/tracking_logs"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上是我从Mcgill大学fork的仓库，他们的&lt;a href="https://github.com/wwj718/edx_data_research/tree/master/reporting_scripts"&gt;reporting_scripts&lt;/a&gt;里有一个小bug,我修复了，顺便提了个pull request,好像上游仓库还没处理，所以大家可以先用我的&lt;/p&gt;
&lt;h2&gt;查看课程&lt;/h2&gt;
&lt;p&gt;现在可以在mongo里查下都有哪些课程&lt;br /&gt;
&lt;code&gt;db.tracking.distinct('context.course_id')&lt;/code&gt;&lt;br /&gt;
通过以上command可以得到log里的所有course_id&lt;/p&gt;
&lt;h2&gt;归并文档&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;db.tracking.aggregate([{$match :{ 'context.course_id' : 'your_course_id' }}, {$out : 'your_course_id'}])&lt;/code&gt;&lt;br /&gt;
以上指令根据你指定的course_id，归并文档成为一个collection。&lt;/p&gt;
&lt;h2&gt;统计用户在线时间&lt;/h2&gt;
&lt;p&gt;下载&lt;a href="https://raw.githubusercontent.com/wwj718/edx_data_research/master/reporting_scripts/session_info.py"&gt;session_info&lt;/a&gt;脚本，修改里边的参数（DATABASE_NAME和collection_name）&lt;br /&gt;
执行&lt;code&gt;python session_info.py&lt;/code&gt;，就可以得到所有用户这门课中每个session期间的在线时长，结果以一份csv报表(session_info.csv)呈现，
报表内容为&lt;code&gt;['Username', 'Session ID', 'Number of Events', 'Start Time', 'End Time', 'Time Spent']&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;如果需要统计同个用户在该课程下的花费的所有时长，只需要做个累加就行。使用pandas可能很方便~&lt;/p&gt;
&lt;h1&gt;后记&lt;/h1&gt;
&lt;p&gt;以上只是一个可行方案，并没考虑效率，今天我翻了下我在5月4号发的帖子，@Alexander回复说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;we created that script to get an initial idea but found it a very poor proxy and not helpful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我这才得知他便是McGill大学&lt;a href="https://github.com/McGillX/edx_data_research"&gt;edx_data_research&lt;/a&gt;项目的开发者。的确这只是个零时的不够优雅的解决方案。&lt;/p&gt;
&lt;p&gt;如果要生产环境使用，必须考虑效率问题，可能以下几个内容会被考虑到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用单独的计算资源，不要影响主服务器&lt;/li&gt;
&lt;li&gt;定时计划任务(cron)&lt;/li&gt;
&lt;li&gt;考虑并发&lt;/li&gt;
&lt;li&gt;使用hadoop或者spark&lt;/li&gt;
&lt;li&gt;将计算结果存回数据库&lt;/li&gt;
&lt;li&gt;新建一个页面向课程团队展示分析结果&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 06 May 2015 00:00:00 +0000</pubDate><guid>tag:,2015-05-06:edx-tracking-logs-data-research.html</guid><category>edx</category></item><item><title>edX课程创建权限</title><link>/edx-ontrolling-course-creation-rights.html</link><description>&lt;p&gt;时常有人给我发邮件或是qq问如何控制课程创建权限。&lt;/p&gt;
&lt;p&gt;的确是个常见的需求。&lt;/p&gt;
&lt;h1&gt;起因&lt;/h1&gt;
&lt;p&gt;默认情况下，Studio的注册用户都可以创建课程，这种默认行为似乎并不是通常的使用场景，平台拥有者更倾向于做个审核，才允许用户发布课程&lt;/p&gt;
&lt;h1&gt;思路&lt;/h1&gt;
&lt;p&gt;读wiki啊！！  &lt;/p&gt;
&lt;p&gt;对于折腾edX的新手而言，我觉得首要的工作就两点：&lt;br /&gt;
1.  让平台跑起来&lt;br /&gt;
2.  通读wiki(&lt;a href="https://github.com/edx/configuration/wiki"&gt;configuration wiki&lt;/a&gt;和&lt;a href="https://github.com/edx/edx-platform/wiki"&gt;edx-platform wiki&lt;/a&gt;) &lt;/p&gt;
&lt;p&gt;如果你通读了wiki，起步阶段的多数的问题其实都不成问题。&lt;/p&gt;
&lt;h1&gt;解决方案&lt;/h1&gt;
&lt;p&gt;据说现在流行送鸡汤必须赠勺，我就写下可操作的解决方案好了。&lt;br /&gt;
跟官方的教程基本一样，官方wiki里有几处不够清晰，我加了自己的理解，没有直接翻译，没有完全按照它们的做法，在本地测试可用，你想按照wiki里的做法，可以自行阅读文后英文wiki。或者跟我往下做也行，有问题给我发邮件 : ）&lt;/p&gt;
&lt;h1&gt;方法一&lt;/h1&gt;
&lt;h2&gt;一些概念&lt;/h2&gt;
&lt;p&gt;首先得区分django站点级别的is_staff和课程级别的course staff的区别，前者拥有站点内容编辑权限(好比登录admin)，而后者只是作为课程团队成员，拥有的编辑课程内容的权限，是application级别的   (不理解也没啥关系)&lt;/p&gt;
&lt;h2&gt;只允许被标记为is_staff的用户创建课程&lt;/h2&gt;
&lt;p&gt;经过以下设置，课程团队成员(course staff)依然可以编辑课程内容，而创建课程则需要被审核为is_staff的用户才可.这在逻辑上也好理解，只要平台认可的内部成员才有创建课程的权限&lt;br /&gt;
至于如何设置用户的is_staff为yes，则需要使用管理员账户登录到admin，更改auth表就行（/admin/auth/user）&lt;/p&gt;
&lt;h3&gt;禁止一般用户创建课程&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cd /edx/app/edxapp/edx-platform&lt;/code&gt;&lt;br /&gt;
更改 &lt;code&gt;edx-platform/cms/envs/common.py&lt;/code&gt; 
在FEATURES里添加&lt;code&gt;'DISABLE_COURSE_CREATION': True&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;将用户标记为is_staff&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;./manage.py lms set_staff emailaddress&lt;/code&gt; &lt;br /&gt;
以上是命令行版本，我更喜欢直接去admin里标记：使用超级账号登录到admin，然后进入auth用户表（/admin/auth/user），选择相应用户，勾选对应选项就行&lt;/p&gt;
&lt;h3&gt;设置联系邮箱&lt;/h3&gt;
&lt;p&gt;如否你做了以上设置，那么一般注册用户默认就没法创建课程，而他又确实想创建，他怎么请求你把他标记为is_staff？&lt;br /&gt;
&lt;code&gt;cd /edx/app/edxapp/edx-platform&lt;/code&gt;&lt;br /&gt;
更改 &lt;code&gt;edx-platform/cms/envs/common.py&lt;/code&gt; 
在FEATURES里添加&lt;code&gt;'STUDIO_REQUEST_EMAIL':YOUR_EMAIL_ADDRESS&lt;/code&gt;，这个邮箱将收到用户的请求&lt;/p&gt;
&lt;h2&gt;重启edxapp&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ps : birch版本有些不同，改为：&lt;code&gt;sudo /edx/bin/supervisorctl  restart edxapp:&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;方法二：&lt;/h1&gt;
&lt;p&gt;方法一感觉有些hack，以下这个方案来得似乎更优雅些&lt;/p&gt;
&lt;h2&gt;选择性地允许课程创建&lt;/h2&gt;
&lt;p&gt;已被标记为is_staff的用户，不受以下方法影响，永远可以创建课程&lt;/p&gt;
&lt;h2&gt;启用课程创建权限&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cd /edx/app/edxapp/edx-platform&lt;/code&gt;&lt;br /&gt;
更改 &lt;code&gt;edx-platform/cms/envs/common.py&lt;/code&gt; 
在FEATURES里添加&lt;code&gt;'ENABLE_CREATOR_GROUP': True&lt;/code&gt;
需要注意的是,如果采用这个方案，方案一中提到的&lt;code&gt;DISABLE_COURSE_CREATION&lt;/code&gt;不应当为&lt;code&gt;True&lt;/code&gt;，因为&lt;code&gt;DISABLE_COURSE_CREATION&lt;/code&gt;的优先级更高&lt;/p&gt;
&lt;pre&gt;
cd /edx/app/edxapp/edx-platform
# 更新数据库
sudo -u www-data /edx/bin/python.edxapp ./manage.py cms syncdb --migrate --settings aws --migrate –noinput
# 重启edxapp， birch版本有些不同，改为：sudo /edx/bin/supervisorctl  restart edxapp: 
sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp: 
&lt;/pre&gt;

&lt;h2&gt;用户工作流&lt;/h2&gt;
&lt;p&gt;如果将ENABLE_CREATOR_GROUP设置为true，一个新的Studio用户的工作流是这样的:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户创建新账号，他们在admin table中的状态是“未请求”.&lt;/li&gt;
&lt;li&gt;当用户进入到Studio面板中，他们将看到一条关于如何成为课程创建者的消息&lt;/li&gt;
&lt;li&gt;用户可以发送创建课程的请求，如此一来他们的状态变成"待决定"。&lt;/li&gt;
&lt;li&gt;如果他们的请求被通过，他们将收到一封通知邮件&lt;/li&gt;
&lt;li&gt;如果请求没通过，他们也将收到一封通知邮件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;课程创建者管理&lt;/h2&gt;
&lt;p&gt;对应的管理地址是&lt;code&gt;/admin/course_creators/coursecreator/&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;设置联系邮箱&lt;/h2&gt;
&lt;p&gt;和方法一相同&lt;/p&gt;
&lt;h2&gt;处理既有的课程创建者&lt;/h2&gt;
&lt;p&gt;如果你希望给既有课程创建者授权，可通过这条指令&lt;code&gt;./manage.py cms populate_creators&lt;/code&gt;(嗯，你首先当然得在edx-platform目录下)&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/edx/edx-platform/wiki/Controlling-course-creation-rights"&gt;Controlling-course-creation-rights&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate><guid>tag:,2015-04-29:edx-ontrolling-course-creation-rights.html</guid><category>edx</category></item><item><title>edx-platform的两个内存泄露问题(from edX Community Blog)</title><link>/A-Tale-of-Two-Memory-Leaks.html</link><description>&lt;p&gt;之前写博客一直出于好记性不如烂笔头的想法，给自己做备忘用，后来在edX源码学习群里发现，居然有不少小伙伴在围观我的博客，开心之余，诚惶诚恐，也希望尽力给大家多提供些有价值的东西。&lt;/p&gt;
&lt;p&gt;我平时一直在跟踪edX团队的进度，无论是源码的commit还是文档的更新抑或是黑客马拉松。于是决定业余时间顺便做些“优秀文档搬运工”的工作，将我自己认为重要的edX的活动和变更信息，搬到博客上来。&lt;/p&gt;
&lt;p&gt;在下英语渣渣，翻译就不求精准啦(其实是做不到T_T)，只求达意，如有错误以及疏漏之处，欢(ni)迎(da)指(wo)正(a) ^_^&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;将edX用于生产环境的同学可能需要注意了。&lt;/p&gt;
&lt;p&gt;二月份期间，edx-platform遭遇两个和内存使用相关的问题。以下三个部分将谈论诊断细节。包括每个bug的详细分析以及诊断过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分: &lt;a href="http://vengefulpickle.com/posts/memsee-intro.html"&gt;An Introduction to Memsee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分: &lt;a href="http://vengefulpickle.com/posts/memsee-pt1.html"&gt;A Static Leak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分: &lt;a href="http://vengefulpickle.com/posts/memsee-pt2.html"&gt;An Incremental Leak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ps:我之前维护的平台崩过一次，日志显示是内存泄露造成的，估计和这个相关。&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/blog/tale-two-memory-leaks"&gt;A Tale of Two (Memory) Leaks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 31 Mar 2015 00:00:00 +0000</pubDate><guid>tag:,2015-03-31:A-Tale-of-Two-Memory-Leaks.html</guid><category>edx</category></item><item><title>edX 学习面板挑战赛落幕( from edX Community Blog )</title><link>/edX-Learning-Dashboard-Challenge.html</link><description>&lt;p&gt;ps：据我了解似乎edX开发者对数据挖掘和可视化展示都特别感兴趣，那么这条新闻你应该会喜欢&lt;/p&gt;
&lt;p&gt;一月份，edX在 &lt;a href="http://databits.io/"&gt;Databits&lt;/a&gt; （databits.io聚集了大量的数据科学家）举行edX学习面板挑战赛,这是&lt;a href="http://databits.io/challenges/edx-learning-dashboard-challenge"&gt;江湖悬赏令&lt;/a&gt;，比赛于03/16/2015落幕，获胜者为 Siyuan Guo&lt;/p&gt;
&lt;p&gt;此次挑战赛的目标是为edx用户提供一个可视化学习面板，用来汇总展示他们自己的学习进度以及与其他学习者的比较。&lt;/p&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;p&gt;ps：比赛的更多细节和评审标准我就不译了，有兴趣的同学自己去阅读文后链接。在此只关注这个比赛将给Open edX带来的成果&lt;/p&gt;
&lt;p&gt;最终的获胜者的学习面板将会被整合到lms中，我们先睹为快:&lt;a href="http://databits.io/submission/edx-learning-dashboard"&gt;edx-learning-dashboard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="edx-learning_dashboard" src="img/edx-learning_dashboard.png" /&gt;&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/blog/edx-learning-dashboard-challenge"&gt;edX Learning Dashboard Challenge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 31 Mar 2015 00:00:00 +0000</pubDate><guid>tag:,2015-03-31:edX-Learning-Dashboard-Challenge.html</guid><category>edx</category></item><item><title>edx并发性能</title><link>/edx-distributed.html</link><description>&lt;p&gt;前几日使用ab工具去测试edx并发访问性能，发现mongo占用了大量cpu，额，主要原因是我自己写的首页查询性能不好囧&lt;/p&gt;
&lt;p&gt;而后优化了下mongo查询，调整了nginx，做了cache(edX使用的是memcached缓存数据库)，并发效能顿时好了许多，单机测了下10w访问，1w并发，还凑合。&lt;/p&gt;
&lt;p&gt;再想提高性能和速度，就得考虑分布式来分离组件了(当然也需要做数据库本身的优化)，顺便阅读了知乎和豆瓣的架构经验（他们估计是国内最大的Python用户了）&lt;/p&gt;
&lt;p&gt;下一步工作，估计首先是分布式，于是github 搜了一下，发现已经有人做了&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dhasthagheer/edx-distributed-configuration"&gt;Edx-Distributed-Configuration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;只是有些年久失修的感觉，没有birch版的，我给项目作者提交了一个issue，希望他能同步到birch版，不过他迟迟没有回应，如果他没做之后我只能自己来做了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate><guid>tag:,2015-03-26:edx-distributed.html</guid><category>edx</category></item><item><title>edX架构图</title><link>/edx-architecture.html</link><description>&lt;p&gt;&lt;img alt="edx-architecture" src="img/edx-architecture.jpg" /&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate><guid>tag:,2015-03-23:edx-architecture.html</guid><category>edx</category></item><item><title>Open edX发布新的稳定版Birch</title><link>/named-release-birch.html</link><description>&lt;p&gt;年后准备升级之前维护的Open edX。发现edX团队于2015年02月24号发布了第二个稳定版本的Open edX，新版本命名为Birch，&lt;/p&gt;
&lt;p&gt;之前版本的几个比较影响使用的bug，诸如grades report异常之类的，在birch中都解决了的。吐槽一句(我之前修复过一个相关bug，对这部分比较熟悉)，grades部分的代码我也是醉了，效率低而逻辑乱。当然啦，模块的作者也蛮不容易的，这部分操作确实既多且杂.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://open.edx.org/blog/birch-released"&gt;官方博客&lt;/a&gt;称，birch版本是稳定版，修复了许多bug并做了大量测试。&lt;/p&gt;
&lt;p&gt;距离上个稳定版Aspen的发布已时隔四个月(Aspen发布于2014年10月)，edX老用户对Aspen应该不陌生，该版本也是稳定版，相比其他以时间打tag的release要稳定地多，推荐在生产环境中部署edX的话尽量用稳定版。具体部署方法和之前一样，不赘述&lt;/p&gt;
&lt;p&gt;相比Aspen版本，Birch版本做的改动还是很大的，就代码层面来说，涉及2500份文件的修改，移除了大约90,000行，新增了130,000+行，而所有这些变更还仅是发生在核心库。你看人家在我们过年回家忙着长肉的时候，还是蛮拼的，快给微信红包！&lt;/p&gt;
&lt;h2&gt;新特性&lt;/h2&gt;
&lt;p&gt;也许代码层面的变更不够直观，我们来看看新版本都有哪些具体可感的改良。首先是增加了不少新特性，多是名词性质的东西，偏专业，就不翻译了，懂的人自然懂，不懂的人，经过我渣渣翻译水平，就更是云里雾里了，用英文，至少方便搜索查阅&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Split Mongo Modulestore&lt;/li&gt;
&lt;li&gt;Cohorts for Discussions and Content&lt;/li&gt;
&lt;li&gt;Content Libraries and Randomized Content&lt;/li&gt;
&lt;li&gt;Prerequisite Courses&lt;/li&gt;
&lt;li&gt;Entrance Exams&lt;/li&gt;
&lt;li&gt;Student Notes&lt;/li&gt;
&lt;li&gt;Course Reruns&lt;/li&gt;
&lt;li&gt;Google Calendar and Google Drive Components&lt;/li&gt;
&lt;li&gt;Support for Graded Problems in Content Experiments&lt;/li&gt;
&lt;li&gt;ReST APIs&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-platform-api/en/latest/"&gt;Mobile API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-enrollment-api/en/latest/"&gt;Enrollment API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-data-analytics-api/en/latest/index.html"&gt;Data Analytics API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下特性默认未开启，想用的话需要自己配置一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学生分组功能。这是个很实用的特性，不同分组的学生将看到不同的课程内容，对个性化学习很有价值&lt;/li&gt;
&lt;li&gt;课程门槛：课程先修条件/选课资格考试&lt;/li&gt;
&lt;li&gt;新增的Xblock组件，Google Drive 和 Google Calendar XBlock. 我们望梅止渴就好啦&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更好的国际化支持（birch版本的汉化蛮好的，需要自己汉化的地方，主要是包含平台相关变量的待翻译字符串）&lt;/li&gt;
&lt;li&gt;更清晰的代码逻辑(额，之前真是挺乱的。。)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多内容可参考&lt;a href="http://edx.readthedocs.org/projects/open-edx-release-notes/en/latest/birch.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;人家官方还说啦，此次的稳定版不是最终的版本，他们会再接再励的，十分期待完成可视化数据分析后的版本啊，届时可以直观地看到学习者的学习行为，结合数据挖掘，做行为分析，做课程优化，简直戳中教育者们的G点有木有，另外还有不少值得期待的特性包括 学生笔记，聊天功能，手机端支持，在线执行代码，分布式，docker支持...&lt;/p&gt;
&lt;h2&gt;打有Birch tag的库&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;edx-platform&lt;/li&gt;
&lt;li&gt;configuration&lt;/li&gt;
&lt;li&gt;cs_comments_service&lt;/li&gt;
&lt;li&gt;notifier&lt;/li&gt;
&lt;li&gt;edx-certificates&lt;/li&gt;
&lt;li&gt;xqueue&lt;/li&gt;
&lt;li&gt;edx-documentation&lt;/li&gt;
&lt;li&gt;edx-ora2&lt;/li&gt;
&lt;li&gt;XBlock&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;安装（开发与部署）&lt;/h2&gt;
&lt;p&gt;和之前没什么区别，依然是分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration/wiki/edX-Developer-Stack"&gt;edX Developer Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration/wiki/edX-Full-Stack"&gt;edX Full Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;edX Ubuntu 12.04 64 bit Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑到下载比较慢，我把下载链接也放这里啦，大家可以用迅雷下好后，手动加载box，如果你不清楚如何手动加载box，可能需要熟悉下vagrant先&lt;br /&gt;
(ps:推荐傍晚6点之后下载！！血泪教训)&lt;/p&gt;
&lt;h3&gt;devstack box&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://files.edx.org/vagrant-images/20150224-birch-devstack.box"&gt;http://files.edx.org/vagrant-images/20150224-birch-devstack.box&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vagrant up之前，记得&lt;code&gt;export OPENEDX_RELEASE="named-release/birch"&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;fullstack box&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://files.edx.org/vagrant-images/20150224-birch-fullstack.box"&gt;http://files.edx.org/vagrant-images/20150224-birch-fullstack.box
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ubuntu12.04上部署&lt;/h3&gt;
&lt;p&gt;跟之前的部署没啥区别 ，参考官方教程 &lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;edX Ubuntu 12.04 64 bit Installation&lt;/a&gt;就行  &lt;/p&gt;
&lt;h4&gt;详细安装步骤&lt;/h4&gt;
&lt;h5&gt;一步安装&lt;/h5&gt;
&lt;p&gt;OPENEDX_RELEASE=named-release/birch wget https://raw.githubusercontent.com/edx/configuration/master/util/install/vagrant.sh -O - | bash&lt;/p&gt;
&lt;h5&gt;分布安装&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;sudo apt-get update -y&lt;/li&gt;
&lt;li&gt;sudo apt-get upgrade -y&lt;/li&gt;
&lt;li&gt;sudo apt-get install -y build-essential software-properties-common python-software-properties curl git-core libxml2-dev libxslt1-dev python-pip python-apt python-dev&lt;/li&gt;
&lt;li&gt;sudo pip install --upgrade pip&lt;/li&gt;
&lt;li&gt;sudo pip install --upgrade virtualenv&lt;/li&gt;
&lt;li&gt;cd /var/tmp&lt;/li&gt;
&lt;li&gt;git clone https://github.com/edx/configuration&lt;/li&gt;
&lt;li&gt;cd /var/tmp/configuration&lt;/li&gt;
&lt;li&gt;git checkout named-release/birch&lt;/li&gt;
&lt;li&gt;vim playbooks/roles/common/defaults/main.yml , 修改其中的COMMON_SSH_PASSWORD_AUTH 为 "yes"&lt;/li&gt;
&lt;li&gt;sudo pip install -r requirements.txt&lt;/li&gt;
&lt;li&gt;cd /var/tmp/configuration/playbooks&lt;/li&gt;
&lt;li&gt;&lt;pre&gt;
sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"  \
-e 'edx_platform_version=named-release/birch certs_version=named-release/birch forum_version=named-release/birch xqueue_version=named-release/birch'
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外 -e 中还有一些可选参数，如果为了提高速度想用豆瓣源的话，加上COMMON_PYPI_MIRROR_URL=http://pypi.douban.com/simple，也在这儿指定域名之类的&lt;/p&gt;
&lt;p&gt;ps:如果是在虚拟机上安装可能会遇到ssl的一些问题。&lt;/p&gt;
&lt;h5&gt;从中断处继续安装&lt;/h5&gt;
&lt;p&gt;&lt;pre&gt;
sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"  \
-e 'edx_platform_version=named-release/birch certs_version=named-release/birch forum_version=named-release/birch xqueue_version=named-release/birch' --start-at-task="xxx"
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;其中xxx为中断任务名&lt;/p&gt;
&lt;h2&gt;升级版本Aspen到Birch&lt;/h2&gt;
&lt;p&gt;不少小伙伴之前安装的是Aspen,官方也是挺贴心的，已经写好升级脚本了
在&lt;a href="https://github.com/edx/configuration/blob/master/util/vagrant/migrate.sh"&gt;这里&lt;/a&gt;。也在你的configuration库里&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意&lt;/em&gt;：特别注意的是！！只能从Aspen升级到Birch，不能升级其他版本到Birch。这也是为何推荐大家使用稳定版的原因&lt;/p&gt;
&lt;h3&gt;升级方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;对于Devstack, 执行 ./migrate.sh -c devstack.&lt;/li&gt;
&lt;li&gt;对于Fullstack, 执行 ./migrate.sh -c fullstack.  就酱&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;最后&lt;/h1&gt;
&lt;p&gt;之前edX相关的文档真是凌乱极了，无力吐槽，官方估计也意识到了这点，亡羊补牢地建了&lt;a href="https://open.edx.org/"&gt;open.edx.org&lt;/a&gt;,用来汇总edX相关的东西。&lt;/p&gt;
&lt;p&gt;以此作为学习/了解/开发edX的入口再合适不过了。括弧 卖个老，想我们当年折腾的时候，各种超链接满天飞，真是辛苦了我的印象笔记，都是泪T_T。&lt;/p&gt;
&lt;p&gt;你看现在有了&lt;a href="https://open.edx.org/"&gt;open.edx.org&lt;/a&gt;，Duang~，生活一下美好多了&lt;/p&gt;
&lt;h1&gt;最后的最后&lt;/h1&gt;
&lt;p&gt;如果你觉得这篇文章对你有帮助，欢迎周末请我喝咖啡啦。&lt;/p&gt;
&lt;p&gt;这篇博客写于南京图书馆附近的星巴克二楼，我很喜欢这个靠窗的位置，之后的周六下午可能会常来这里写些东西，尽量一周写篇博客吧，也做些其他的整理。如果你来的较早，而且都准备好了咖啡(我喜欢拿铁~)，我是不会轻易拒绝的啦，我们探讨edX之余，也可以顺便聊聊人生不是，如果你连瓜子都准备了，那我们顺带连理想也一并聊了吧^_^&lt;/p&gt;
&lt;p&gt;此外&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我对 在线教育(edX)/网站架构/开源/旧体诗词/骑车/台球/阅读/旅行/晨跑/游泳 较感兴趣，以上内容都欢迎交流啦~   &lt;/li&gt;
&lt;li&gt;技术宅（好像也不很宅囧），linux/python/git/vim用户, 为了提高逼格,也在函数式（Scheme/Haskell）上花了不少时间。&lt;/li&gt;
&lt;li&gt;兴趣很杂，阅读很杂，尚未脱离低级趣味，最近在读《富爸爸穷爸爸》，喜欢好书，也喜欢与人分享讨论好书~&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://open.edx.org/blog/birch-released"&gt;birch-released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/birch.html#open-edx-birch-release"&gt;Open edX Birch Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/open-edx-release-notes/en/latest/birch.html"&gt;Open edX Birch Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 07 Mar 2015 00:00:00 +0000</pubDate><guid>tag:,2015-03-07:named-release-birch.html</guid><category>edx</category></item><item><title>edX开源android和ios源码</title><link>/edx-app-android-ios.html</link><description>&lt;p&gt;edX今日公布android和ios的源码&lt;/p&gt;
&lt;h1&gt;移动端源码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-app-ios"&gt;edx-app-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-app-android"&gt;edx-app-android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;相关文档（包括后端接口）&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx-mobile-for-students.readthedocs.org/en/latest/SFD_mobileFAQ.html"&gt;edx-mobile-for-students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx-platform-api.readthedocs.org/en/latest/index.html"&gt;edx-platform-api&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;移动端取数据需要后端的支持，目前需要手动开启，预计之后会自动开启，可以参考我的这篇文章&lt;a href="http://wwj718.github.io/edx-mobile-api.html"&gt;让edx为手机端提供接口&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;参考资料]&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-app-ios"&gt;edx-app-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/edx/edx-app-android"&gt;edx-app-android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx-mobile-for-students.readthedocs.org/en/latest/SFD_mobileFAQ.html"&gt;edx-mobile-for-students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx-platform-api.readthedocs.org/en/latest/index.html"&gt;edx-platform-api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edx.readthedocs.org/projects/edx-installing-configuring-and-running/en/latest/mobile.html"&gt;Setting Up the Open edX Mobile Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate><guid>tag:,2015-01-15:edx-app-android-ios.html</guid><category>edx</category></item><item><title>让edx为手机端提供接口</title><link>/edx-mobile-api.html</link><description>&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;上周部署了edX最新的release版本（release-2014-11-19），想看看有什么新的特性。&lt;/p&gt;
&lt;p&gt;对比上回部署的版本release-2014-09-17，release-2014-11-19这个版本在部署的时候几乎不会遇到什么依赖问题。&lt;/p&gt;
&lt;p&gt;当然，如果你想部署在阿里云上，可能还是蛮折腾的，主要是网络的问题，你懂的。而阿里云上vpn似乎很难使用，反正我没有成功过，配置成功过的同学求指教。我的方案是使用sshuttle，sshuttle也可能导致ip被影藏，ssh无法连接。应对这种问题你可以在启用sshuttle之前，使用ngrok把ssh端口映射出来。更多细节参考&lt;a href="http://wwj718.github.io/use-ngrok.html"&gt;我之前的文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;release-2014-09-17部署的时候存在matplotlib依赖等问题。如果你部署的是release-2014-09-17版，建议移除edx_sandbox.yml中ora的安装。&lt;/p&gt;
&lt;p&gt;此外,release-2014-11-19相对于release-2014-09-17另一个明显的变化是移动端接口被合并进来了（似乎是9-25号之后并入master的。如果你想使用edx的MOBILE_REST_API，9-25之后的release应该都是包含的。&lt;/p&gt;
&lt;p&gt;顺便，再说一个可能潜在的问题。如果你设置了平台名字为中文（PLATFORM_NAME），那么你打开主讲教师tag时会出现500错误&lt;/p&gt;
&lt;p&gt;错误的原因是lms/envs/common.py中有这句：
&lt;code&gt;ANALYTICS_DASHBOARD_NAME = ENV_TOKENS.get("ANALYTICS_DASHBOARD_NAME", PLATFORM_NAME + " Insights")&lt;/code&gt; ，log显示是字符编码错误。简易的处理方法是把写死&lt;code&gt;ANALYTICS_DASHBOARD_NAME&lt;/code&gt;,比如&lt;code&gt;ANALYTICS_DASHBOARD_NAME="ANALYTICS_DASHBOARD"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在汉化或者定制过程中可能遇到许多这类小错误，处理的思路是查看log，定位到问题所在，就可以干掉bug了。适当结合grep之类的工具会事半功倍，之后的文章中我会说说折腾edx中我自己常用的工具。它们大多来自linux工具箱&lt;/p&gt;
&lt;h2&gt;开始&lt;/h2&gt;
&lt;p&gt;回到我们的主题，在此只记录我在release-2014-11-19上使用MOBILE_REST_API的过程。让其为移动端提供数据。&lt;/p&gt;
&lt;p&gt;ok，let's go&lt;/p&gt;
&lt;p&gt;本篇文章针对生产环境，开发环境有些不同&lt;/p&gt;
&lt;h2&gt;说明&lt;/h2&gt;
&lt;p&gt;edx的手机端接口需要身份验证（&lt;a href="http://edx-platform-api.readthedocs.org/en/latest/authentication.html"&gt;edX API Authentication&lt;/a&gt;），&lt;/p&gt;
&lt;p&gt;我想使用基于Token的认证。 这一块是&lt;a href="http://www.django-rest-framework.org/"&gt;Django REST framework&lt;/a&gt;的内容，具体可参考&lt;a href="http://www.django-rest-framework.org/api-guide/authentication/"&gt;django-rest-framework authentication&lt;/a&gt;中的TokenAuthentication部分，如果你想使用基于session或者OAuth2的认证也是可以的，事实上默认的就是SessionAuthentication和OAuth2Authentication。&lt;/p&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;p&gt;MOBILE_REST_API默认并没有被启用，所以修改lms/envs/aws.py，启用它&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;diff --git a/lms/envs/aws.py b/lms/envs/aws.py  首先在aws.py最后添加以下内容&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;+FEATURES[&amp;#39;ENABLE_MOBILE_REST_API&amp;#39;] = True
+FEATURES[&amp;#39;ENABLE_VIDEO_ABSTRACTION_LAYER_API&amp;#39;] = True
+
+REST_FRAMEWORK = {
+    &amp;#39;DEFAULT_AUTHENTICATION_CLASSES&amp;#39;: (
+        &amp;#39;rest_framework.authentication.BasicAuthentication&amp;#39;,
+        &amp;#39;rest_framework.authentication.SessionAuthentication&amp;#39;,
+        &amp;#39;rest_framework.authentication.TokenAuthentication&amp;#39;,
+        &amp;#39;rest_framework.authentication.OAuth2Authentication&amp;#39;,
+    )
+}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;edx的手机端接口使用&lt;a href="http://www.django-rest-framework.org/"&gt;Django REST framework&lt;/a&gt;来写，我们所做的配置基本是&lt;a href="http://www.django-rest-framework.org/"&gt;Django REST framework&lt;/a&gt;的要求，跟edX关系不大。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;diff --git a/lms/envs/common.py b/lms/envs/common.py&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INSTALLED_APPS = (

     # User API
     &amp;#39;rest_framework&amp;#39;,
+    &amp;#39;rest_framework.authtoken&amp;#39;,
     &amp;#39;user_api&amp;#39;,
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;为UserDetail接口函数增加Token验证&lt;/h2&gt;
&lt;p&gt;diff --git a/lms/djangoapps/mobile_api/users/views.py b/lms/djangoapps/mobile_api/users/views.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-from rest_framework.authentication import OAuth2Authentication, SessionAuthentication
+from rest_framework.authentication import OAuth2Authentication, SessionAuthentication,TokenAuthentication
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;-    authentication_classes = (OAuth2Authentication, SessionAuthentication)
+    authentication_classes = (TokenAuthentication,OAuth2Authentication, SessionAuthentication)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同理你也可以为其他接口函数做同样地工作。目前所有可以的接口如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get &lt;a href="http://edx-platform-api.readthedocs.org/en/latest/users.html#get-user-details"&gt;user details&lt;/a&gt; and &lt;a href="http://edx-platform-api.readthedocs.org/en/latest/users.html#get-a-user-s-course-enrollments"&gt;course enrollments&lt;/a&gt; for a user.&lt;/li&gt;
&lt;li&gt;Get &lt;a href="http://edx-platform-api.readthedocs.org/en/latest/course_info.html#get-the-course-about-page"&gt;course information&lt;/a&gt;, &lt;a href="http://edx-platform-api.readthedocs.org/en/latest/course_info.html#get-course-updates"&gt;updates&lt;/a&gt;, and &lt;a href="http://edx-platform-api.readthedocs.org/en/latest/course_info.html#get-course-handouts"&gt;handouts&lt;/a&gt; for courses the user is enrolled in.&lt;/li&gt;
&lt;li&gt;Get &lt;a href="http://edx-platform-api.readthedocs.org/en/latest/video_outlines.html#get-the-video-list"&gt;videos&lt;/a&gt; and &lt;a href="http://edx-platform-api.readthedocs.org/en/latest/video_outlines.html#get-a-video-transcript"&gt;transcripts&lt;/a&gt; for courses the user is enrolled in.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;同步数据库&lt;/h2&gt;
&lt;p&gt;由于我们在INSTALLED_APPS中增加了rest_framework.authtoken，所以需要同步一下数据库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms --settings aws syncdb
sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms --settings aws migrate
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;重启生效&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp:
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;开始测试&lt;/h2&gt;
&lt;p&gt;好啦，万事具备，我们来测试一下新加的手机端接口吧。&lt;/p&gt;
&lt;h3&gt;获取Token&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u www-data /edx/bin/python.edxapp /edx/app/edxapp/edx-platform/manage.py lms --settings aws shell


from rest_framework.authtoken.models import Token
from django.contrib.auth.models import User
user= User.objects.get(username=&amp;quot;wwj&amp;quot;)  #username填入你已注册的username
token = Token.objects.create(user=user)
print token.key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;记下token.key的值，假设token是9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b，之后请求用户信息时需要携带它。&lt;/p&gt;
&lt;p&gt;在生产环境中，你需要自己写个获取token的函数，在用户身份验证后返回token给他，比如取名request_token之类的。之后手机端获得token后，每次携带这个令牌来请求数据就好了&lt;/p&gt;
&lt;h3&gt;获取用户详细信息&lt;/h3&gt;
&lt;p&gt;我们用curl去请求用户详细信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET http://127.0.0.1:8000/api/mobile/v0.5/users/ww -H &amp;#39;Authorization:Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;你将获取以下内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{&amp;quot;id&amp;quot;: 6, &amp;quot;username&amp;quot;: &amp;quot;wwj&amp;quot;, &amp;quot;email&amp;quot;: &amp;quot;wwj@qq.com&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;wwj&amp;quot;, &amp;quot;course_enrollments&amp;quot;: &amp;quot;http://127.0.0.1:8000/api/mobile/v0.5/users/ww/course_enrollments/&amp;quot;}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;返回参数的意义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id: 用户id&lt;/li&gt;
&lt;li&gt;username: 用户名&lt;/li&gt;
&lt;li&gt;email: 用户的email&lt;/li&gt;
&lt;li&gt;name: 用户的全名&lt;/li&gt;
&lt;li&gt;course_enrollments: 用户注册课程列表&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ok,一切正常&lt;/p&gt;
&lt;p&gt;以上只是粗粗地介绍了主要原理，如果你想在实际生产环境中使用，需要自己去完成一下request_token函数&lt;/p&gt;
&lt;h1&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edx-platform-api.readthedocs.org/en/latest/index.html"&gt;edx-platform-api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.django-rest-framework.org/api-guide/authentication/"&gt;django-rest-framework authentication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 03 Dec 2014 00:00:00 +0000</pubDate><guid>tag:,2014-12-03:edx-mobile-api.html</guid><category>edx</category></item><item><title>module-level import/export from edx - a hack</title><link>/edx-code.html</link><description>&lt;p&gt;最近折腾edx遇到些怪异的问题，于是去&lt;a href="https://groups.google.com/forum/#!forum/edx-code"&gt;edx-code&lt;/a&gt;寻求帮助，看到Armando Fox分享的这个hack方法挺有意思，分享过来给大家，也许有人用得着&lt;/p&gt;
&lt;p&gt;详细内容见&lt;a href="https://groups.google.com/forum/#!topic/edx-code/n_JEqe_GlXY"&gt;module-level import/export from edx - a hack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大体内容如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;i successfully did the following to append the contents of course B into course A: 

1.  exported dumps of A and B from Studio 
2.  un-tar each dump 
3.  copy all the leaf-level assets of course B into the correpsonding leaf folders of A, *except* i avoided assets where there was a filename collision (like course.xml).  i did this partly manually, partly using find, partly using &amp;#39;cp -i&amp;#39;. 
4.  in course A, edit the file course/*.xml (there will be only one): you will see it contains a line per &amp;quot;chapter&amp;quot;, which is a single flippy-triangle unit in the left-hand navbar.  into that file, copy all the &amp;lt;chapter&amp;gt; element lines from the course/*.xml file in course B. 
5.  tar up the result 
6.  import the result into Studio. 

voila, a course that is the append of A and B. 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;需求大概是：楼主需要将课程B导入到课程A中&lt;/p&gt;
&lt;p&gt;解决方案的大体思路就是，导出课程&amp;gt;解包&amp;gt;直接操控解压文件，合并内容&amp;gt;打包&amp;gt;导入。合并内容的时候注意3，4两点提到的具体合并细节&lt;/p&gt;
&lt;p&gt;楼主进一步说道， 只导入某些章节应该也是可能的，不过引用文件依赖可能比较琐碎麻烦，应该可以写个脚本来做。（很常见的需求）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this should be a simple script to write if someone wants to take a whack at it.  (ideally this should be in the Studio GUI, but it's not.) &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我觉得完成这个工作，可以要参考这篇文章。关于我们如何不通过studio来操作课程内容&lt;/p&gt;
&lt;p&gt;&lt;a href="http://edx-open-learning-xml.readthedocs.org/en/latest/index.html"&gt;edX Open Learning XML Guide&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;关于edX Open Learning XML(OLX)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The edX Open Learning XML Guide provides the information you need to build an edX course through Open Learning XML (OLX) and supporting files, without using edX Studio.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就是说我们可以不用依赖Studio，自己来写制作课程的工具，当然前提是熟悉OLX(edX Open Learning XML Guide).这里边有极大的发挥空间&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate><guid>tag:,2014-11-10:edx-code.html</guid><category>edx</category></item><item><title>module-level import/export from edx - a hack</title><link>/edx-code.html</link><description>&lt;p&gt;最近折腾edx遇到些怪异的问题，于是去&lt;a href="https://groups.google.com/forum/#!forum/edx-code"&gt;edx-code&lt;/a&gt;寻求帮助，看到Armando Fox分享的这个hack方法挺有意思，分享过来给大家，也许有人用得着&lt;/p&gt;
&lt;p&gt;详细内容见&lt;a href="https://groups.google.com/forum/#!topic/edx-code/n_JEqe_GlXY"&gt;module-level import/export from edx - a hack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大体内容如下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;i successfully did the following to append the contents of course B into course A: 

1.  exported dumps of A and B from Studio 
2.  un-tar each dump 
3.  copy all the leaf-level assets of course B into the correpsonding leaf folders of A, *except* i avoided assets where there was a filename collision (like course.xml).  i did this partly manually, partly using find, partly using &amp;#39;cp -i&amp;#39;. 
4.  in course A, edit the file course/*.xml (there will be only one): you will see it contains a line per &amp;quot;chapter&amp;quot;, which is a single flippy-triangle unit in the left-hand navbar.  into that file, copy all the &amp;lt;chapter&amp;gt; element lines from the course/*.xml file in course B. 
5.  tar up the result 
6.  import the result into Studio. 

voila, a course that is the append of A and B. 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;需求大概是：楼主需要将课程B导入到课程A中&lt;/p&gt;
&lt;p&gt;解决方案的大体思路就是，导出课程&amp;gt;解包&amp;gt;直接操控解压文件，合并内容&amp;gt;打包&amp;gt;导入。合并内容的时候注意3，4两点提到的具体合并细节&lt;/p&gt;
&lt;p&gt;楼主进一步说道， 只导入某些章节应该也是可能的，不过引用文件依赖可能比较琐碎麻烦，应该可以写个脚本来做。（很常见的需求）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this should be a simple script to write if someone wants to take a whack at it.  (ideally this should be in the Studio GUI, but it's not.) &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我觉得完成这个工作，可以要参考这篇文章。关于我们如何不通过studio来操作课程内容&lt;/p&gt;
&lt;p&gt;&lt;a href="http://edx-open-learning-xml.readthedocs.org/en/latest/index.html"&gt;edX Open Learning XML Guide&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;关于edX Open Learning XML(OLX)&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The edX Open Learning XML Guide provides the information you need to build an edX course through Open Learning XML (OLX) and supporting files, without using edX Studio.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就是说我们可以不用依赖Studio，自己来写制作课程的工具，当然前提是熟悉OLX(edX Open Learning XML Guide).这里边有极大的发挥空间&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate><guid>tag:,2014-11-10:edx-code.html</guid><category>edx</category></item><item><title>在edX中为course扩充字段</title><link>/extend-edx-course.html</link><description>&lt;p&gt;之前在&lt;a href="https://groups.google.com/forum/#!forum/edx-code"&gt;edx code&lt;/a&gt;（edX google group）上问过如何为course扩充字段（如为课程添加category字段）。&lt;/p&gt;
&lt;p&gt;得到的回复说直接往CoueseFields里添加你要的字段就行。位置在&lt;code&gt;common/lib/xmodule/course_module.py&lt;/code&gt;.之后该字段会自动显示在Advanced Settings里。我按照这种方法发现字段的确成为course的属性了（在shell里实验)。不过并没有自动显示在Advanced Settings里，不晓得是不是版本问题。&lt;/p&gt;
&lt;p&gt;此外还有回复说他是采用org字段来存储课程分类。因为他们是内部使用edx,不需要org。不过这种方式总归不大好。&lt;/p&gt;
&lt;p&gt;前两天收到一封邮件，说他也想扩充课程，和我之前需求类似，希望给与帮助。&lt;/p&gt;
&lt;p&gt;看来这还是个挺常见的需求。&lt;/p&gt;
&lt;p&gt;我就分享下自己的方法好了。也讲下具体流程，而不仅是给出方案，这样小伙伴们下回遇到类似的问题，可以按照类似思路自己解决啦。&lt;/p&gt;
&lt;h3&gt;需求描述&lt;/h3&gt;
&lt;p&gt;常见的需求类似这样：给课程添加category字段，用于分类课程，在首页使用。&lt;/p&gt;
&lt;h3&gt;最初的方案&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;自己写了个django app加入到lms/djangoapps里。app.models中有course_id字段&lt;/li&gt;
&lt;li&gt;自己写个首页&lt;/li&gt;
&lt;li&gt;在admin里管理首页的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实就像自己写了个小型内容管理系统，管理的核心对象是course。而我们知道课程的关键标志是course_id。我跟踪注册课程相关的代码，在代码执行路径上加上自定义的create_home_course函数。&lt;br /&gt;
在create_home_course函数中将新建的课程注册到我们自己的app.models里，关键是从中获得course_id，这样就能定位到课程。&lt;/p&gt;
&lt;p&gt;这种方式的好处是不需侵入CoueseFields&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;我们今天重点说下面的方案&lt;/p&gt;
&lt;h3&gt;现在的方案&lt;/h3&gt;
&lt;p&gt;其实思路也简单。就是跟踪&lt;code&gt;日程&amp;amp;细节&lt;/code&gt;里的字段是如何存储并与前端交互的。模仿它就行。&lt;/p&gt;
&lt;p&gt;好的，满上咖啡，我们开始。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;我选择跟踪这个字段：&lt;code&gt;每周投入课程学习的小时数&lt;/code&gt;。 &lt;/p&gt;
&lt;p&gt;使用chrome开发者工具，看到该表单字段的id是 &lt;code&gt;course-effort&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在&lt;a href="https://github.com/edx/edx-platform"&gt;edx-platform&lt;/a&gt;搜索effort。我们就可以看到所有与effort相关的代码及其所在文件。其实挺推荐使用github来研究代码的，可以参考我的&lt;a href="http://wwj718.github.io/github-edx.html"&gt;这篇博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="github-search.png" src="img/github-search.png" /&gt;&lt;/p&gt;
&lt;p&gt;接下来就是依葫芦画瓢的工作了。据此添加我们需要的字段了。我们按照以下文件顺序修改:python&amp;gt;js&amp;gt;html&amp;gt;Sass&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;0&lt;/h3&gt;
&lt;p&gt;以下工作均在/edx/app/edxapp/edx-platform/目录里进行&lt;/p&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;p&gt;vim cms/djangoapps/models/settings/course_details.py &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;         self.effort = None  # int hours/week
+        self.category = None
         self.course_image_name = &amp;quot;&amp;quot;

         ...

+        temploc = course_key.make_usage_key(&amp;#39;about&amp;#39;, &amp;#39;category&amp;#39;)
+        try:
+            course_details.category = modulestore().get_item(temploc).data
+        except ItemNotFoundError:
+            pass
+
+
         temploc = course_key.make_usage_key(&amp;#39;about&amp;#39;, &amp;#39;video&amp;#39;)
         try:
             raw_video = modulestore().get_item(temploc).data

         ...

-        for about_type in [&amp;#39;syllabus&amp;#39;, &amp;#39;overview&amp;#39;, &amp;#39;effort&amp;#39;, &amp;#39;short_description&amp;#39;]:
+        for about_type in [&amp;#39;syllabus&amp;#39;, &amp;#39;overview&amp;#39;, &amp;#39;effort&amp;#39;,&amp;#39;category&amp;#39;, &amp;#39;short_description&amp;#39;]:
             cls.update_about_item(course_key, about_type, jsondict[about_type], descriptor, user)             
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vim cms/templates/settings.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;                        &amp;#39;requirements&amp;#39;, &amp;#39;syllabus&amp;#39;, &amp;#39;textbook&amp;#39;, &amp;#39;faq&amp;#39;, &amp;#39;more_info&amp;#39;,
                        &amp;#39;number&amp;#39;, &amp;#39;instructors&amp;#39;, &amp;#39;overview&amp;#39;,
-                       &amp;#39;effort&amp;#39;, &amp;#39;end_date&amp;#39;, &amp;#39;prerequisites&amp;#39;, &amp;#39;ocw_links&amp;#39;]:
+                       &amp;#39;effort&amp;#39;,&amp;#39;category&amp;#39;, &amp;#39;end_date&amp;#39;, &amp;#39;prerequisites&amp;#39;, &amp;#39;ocw_links&amp;#39;]:
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;js&lt;/h3&gt;
&lt;p&gt;vim cms/static/js/views/settings/main.js &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;         this.$el.find(&amp;#39;#&amp;#39; + this.fieldToSelectorMap[&amp;#39;effort&amp;#39;]).val(this.model.get(&amp;#39;effort&amp;#39;));
+
+        //added by wwj
+        this.$el.find(&amp;#39;#&amp;#39; + this.fieldToSelectorMap[&amp;#39;category&amp;#39;]).val(this.model.get(&amp;#39;category&amp;#39;));

        ...

         &amp;#39;effort&amp;#39; : &amp;quot;course-effort&amp;quot;,
+        &amp;#39;category&amp;#39; : &amp;quot;course-category&amp;quot;,
         &amp;#39;course_image_asset_path&amp;#39;: &amp;#39;course-image-url&amp;#39;

         ...

         case &amp;#39;course-effort&amp;#39;:
             this.setField(event);
             break;
+        //added by wwj
+        case &amp;#39;course-category&amp;#39;:
+            this.setField(event);
+            break;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vim cms/static/js/models/settings/course_details.js &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;         effort: null,  // an int or null,
+        category: null,
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;html&lt;/h3&gt;
&lt;p&gt;vim cms/templates/settings.html &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;+          ##added by wwj
+          % if about_page_editable:
+            &amp;lt;hr class=&amp;quot;divide&amp;quot; /&amp;gt;
+
+            &amp;lt;section class=&amp;quot;group-settings requirements&amp;quot;&amp;gt;
+              &amp;lt;header&amp;gt;
+                &amp;lt;h2 class=&amp;quot;title-2&amp;quot;&amp;gt;课程分类&amp;lt;/h2&amp;gt;
+                &amp;lt;span class=&amp;quot;tip&amp;quot;&amp;gt;${_(&amp;quot;Expectations of the students taking this course&amp;quot;)}&amp;lt;/span&amp;gt;
+              &amp;lt;/header&amp;gt;
+
+              &amp;lt;ol class=&amp;quot;list-input&amp;quot;&amp;gt;
+                &amp;lt;li class=&amp;quot;field text&amp;quot; id=&amp;quot;field-course-category&amp;quot;&amp;gt;
+                  &amp;lt;label for=&amp;quot;course-category&amp;quot;&amp;gt;${_(&amp;quot;course category&amp;quot;)}&amp;lt;/label&amp;gt;
+                  &amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;short time&amp;quot; id=&amp;quot;course-category&amp;quot; placeholder=&amp;quot;Math&amp;quot; /&amp;gt;
+                  &amp;lt;span class=&amp;quot;tip tip-inline&amp;quot;&amp;gt;${_(&amp;quot;course category&amp;quot;)}&amp;lt;/span&amp;gt;
+                &amp;lt;/li&amp;gt;
+              &amp;lt;/ol&amp;gt;
+            &amp;lt;/section&amp;gt;
+          % endif
+
       &amp;lt;/form&amp;gt;
     &amp;lt;/article&amp;gt;
     &amp;lt;aside class=&amp;quot;content-supplementary&amp;quot; role=&amp;quot;complimentary&amp;quot;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vim lms/templates/courseware/course_about.html&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;             &amp;lt;li&amp;gt;&amp;lt;div class=&amp;quot;icon effort&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;${_(&amp;quot;Estimated Effort&amp;quot;)}&amp;lt;/p&amp;gt;&amp;lt;span class=&amp;quot;start-date&amp;quot;&amp;gt;${get_course_about_section(course, &amp;quot;effort&amp;quot;)}&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;
           % endif

+          % if get_course_about_section(course, &amp;quot;category&amp;quot;):
+            &amp;lt;li&amp;gt;&amp;lt;div class=&amp;quot;icon category&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;课程分类&amp;lt;/p&amp;gt;&amp;lt;span class=&amp;quot;start-date&amp;quot;&amp;gt;${get_course_about_section(course, &amp;quot;category&amp;quot;)}&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;
+          % endif
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Sass&lt;/h3&gt;
&lt;p&gt;vim cms/static/sass/views/_settings.scss &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;       #field-course-effort {
         width: flex-grid(3, 9);
       }
+      #field-course-category {
+        width: flex-grid(3, 9);
+      }
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;扫尾&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;将以上修改一次性commit到你自己的分支上，尽量不要合并到官方分支里&lt;/li&gt;
&lt;li&gt;update_assets&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -H -u edxapp bash
source /edx/app/edxapp/edxapp_env
cd /edx/app/edxapp/edx-platform
paver update_assets cms --settings=aws
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;*
  重启edxapp: &lt;code&gt;sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp:&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;测试&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我们先到cms的&lt;code&gt;日程&amp;amp;细节&lt;/code&gt;里，填上课程分类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="course_category" src="img/course_category.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;再到课程的about页面即可看到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="course-category-lms" src="img/course-category-lms.png" /&gt;&lt;/p&gt;
&lt;p&gt;搞定~&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 21 Oct 2014 00:00:00 +0000</pubDate><guid>tag:,2014-10-21:extend-edx-course.html</guid><category>edx</category></item><item><title>部署edx release-2014-09-17</title><link>/edx-install-release-2014-09-17.html</link><description>&lt;p&gt;在新的服务器上部署edX(version=release-2014-09-17)成功，过程还是挺折腾的，做个笔记。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.idefs.com/share-open-share-2014-9-18-edx-ova-template-by-edustack.html"&gt;竹轩&lt;/a&gt;同学整理了2014年8月12日以来(到14.9.18)edx上更新的内容,更新内容很多，许多新的特性还是很实用的，也修复了不少bug，这也会我决定使用新版本的原因&lt;/p&gt;
&lt;h1&gt;部署经过&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;官方教程&lt;/a&gt;，新旧版本都适用。主要的安装步骤里边都有。我采用了Manual installation，分步安装，其实就是把一步安装脚本拆开来&lt;/p&gt;
&lt;h3&gt;换源&lt;/h3&gt;
&lt;p&gt;我的ubuntu版本是12.04.5，默认apt源是国内的，会找不到依赖包，所以我们先换源。欧洲源好像还不行（也有部分软件包无法拉下来），所以后来我采用美国的源。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#备份
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bat
#添加us的源
sudo vim /etc/apt/sources.list，加入以下内容

###### Ubuntu Main Repos
deb http://us.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse 

###### Ubuntu Update Repos
deb http://us.archive.ubuntu.com/ubuntu/ precise-security main restricted universe multiverse 
deb http://us.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse 
deb http://us.archive.ubuntu.com/ubuntu/ precise-backports main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ precise-security main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ precise-backports main restricted universe multiverse 

###### Ubuntu Partner Repo
deb http://archive.canonical.com/ubuntu precise partner
deb-src http://archive.canonical.com/ubuntu precise partner

###### Ubuntu Extras Repo
deb http://extras.ubuntu.com/ubuntu precise main
deb-src http://extras.ubuntu.com/ubuntu precise main
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;deb http://extras.ubuntu.com/ubuntu precise main，可能会说你缺少密钥，无视它&lt;/p&gt;
&lt;p&gt;sudo apt-get upgrade 之后，记得看下ssh配置文件(/etc/ssh/sshd_config)，确定允许认证登录: PasswordAuthentication yes&lt;/p&gt;
&lt;p&gt;之后再重启&lt;/p&gt;
&lt;h3&gt;部署&lt;/h3&gt;
&lt;p&gt;下面我们就按照官方教程部署&lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;edX-Ubuntu-12.04-64-bit-Installation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果完全按照官方教程走，那么安装的edx版本是master（生产环境尽量不要安装master版本），也就是最新的，作为第一个吃螃蟹的人，遇到问题挺不好解决的。所以最好是安装某个版本，自己或别人部署成功过的。&lt;/p&gt;
&lt;p&gt;要做到这点，就在安装的时候指定版本，像下面这样&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/tmp/configuration/playbooks &amp;amp;&amp;amp; sudo ansible-playbook -c local ./edx_sandbox.yml -i &amp;quot;localhost,&amp;quot;  -e edx_platform_version=release-2014-09-17
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上是我用的，edx-platform版本是release-2014-09-17&lt;/p&gt;
&lt;p&gt;之后的安装过程遇到的错误，其实大同小异，无非网络问题(推荐使用&lt;a href="http://wwj718.github.io/use-sshuttle.html"&gt;sshuttle&lt;/a&gt;)，兼容（依赖）问题，如果再哪一步断了(一般都会中断，很少有一次成功),可以停下来解决完问题再继续.&lt;/p&gt;
&lt;p&gt;当遇到的是国外网络无法连接问题，使用sshuttle就好&lt;/p&gt;
&lt;p&gt;需要注意的是使用sshuttle的时候，服务器ip就被隐藏了，你一旦退出ssh连接就无法再连上。解决方案也是有的。使用ngrok映射出ssh端口，可以参考我的&lt;a href="http://wwj718.github.io/use-ngrok.html"&gt;这篇文章&lt;/a&gt;，目前不清楚原因，偶然发现的，也许还算原创^_^&lt;/p&gt;
&lt;p&gt;当遇到系统依赖问题。诸如 TASK: [edxapp | install python base-requirements］报错说无法找到依赖包(比如使用了豆瓣源)，就手动切换到edxapp用户，source到edxapp_environment，至于edxapp_environment在那个，可查看playbooks/roles/edxapp里的相关参数，或是直接这样 /edx/app/edxapp/venvs/edxapp/bin/pip  安装好依赖再从这个task执行就好&lt;/p&gt;
&lt;h4&gt;从某个task继续执行&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/tmp/configuration/playbooks &amp;amp;&amp;amp; sudo ansible-playbook -c local ./edx_sandbox.yml -i &amp;quot;localhost,&amp;quot;  -e edx_platform_version=release-2014-09-17 --start-at-task=&amp;quot;TASK_NAME&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里需要注意的是，有些步骤有前后依赖问题，诸如前面步骤设置了运行所需参数，所以有时可能要倒退几个task开始，如何寻找之前的task，查看/var/tmp/configuration/playbooks/roles/...&lt;/p&gt;
&lt;p&gt;暂时写到这里，新版本的汉化和主题可能也有些变更，之后再写&lt;/p&gt;
&lt;h1&gt;附&lt;/h1&gt;
&lt;h2&gt;1&lt;/h2&gt;
&lt;p&gt;竹轩同学提到的&lt;a href="http://www.idefs.com/share-open-share-2014-9-18-edx-ova-template-by-edustack.html"&gt;近期部署可能遇到的问题@2014.9.18&lt;/a&gt;，我在ubuntu上直接部署没有遇到。不过之前在安装devstack时遇到了。&lt;/p&gt;
&lt;p&gt;后来我的devstack又部署了之前用的release-2014-07-02&lt;/p&gt;
&lt;h2&gt;2&lt;/h2&gt;
&lt;p&gt;python换源&lt;/p&gt;
&lt;p&gt;如果觉得国外python源太慢，可以换用国内的，我用的是豆瓣&lt;/p&gt;
&lt;p&gt;vim /var/tmp/configuration/playbooks/roles/common/defaults/main.yml&lt;/p&gt;
&lt;p&gt;&lt;code&gt;COMMON_PYPI_MIRROR_URL: 'http://pypi.douban.com/simple&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用豆瓣源时，速度很快，不过在edxapp(user_role)安装/edx/app/edxapp/edx-platform/requirements/edx/base.txt的时候找不到dogapi==1.2.1。我是停下来手动装好了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 26 Sep 2014 00:00:00 +0000</pubDate><guid>tag:,2014-09-26:edx-install-release-2014-09-17.html</guid><category>edx</category></item><item><title>backbone.js学习笔记</title><link>/learn-backbone.html</link><description>&lt;p&gt;最近准备为edx的课程做扩展，赋予它更多属性，发现课程的数据模型不是用django的model来定义的。一路追踪下来，发现自己一直思维定式在django的逻辑上，总是希望能够追踪到views。&lt;/p&gt;
&lt;p&gt;而实际上大多逻辑都移到了前端，edx使用了&lt;a href="https://github.com/edx/edx-platform/blob/master/cms/static/js/models/settings/course_details.js#L1"&gt;backbone.js&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所以开始折腾&lt;a href="https://github.com/jashkenas/backbone"&gt;backbone.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实之前都有断断续续学过一段时间&lt;a href="https://github.com/jashkenas/backbone"&gt;backbone.js&lt;/a&gt;，甚至&lt;a href="https://github.com/angular/angular.js"&gt;angular.js&lt;/a&gt;,没有做些练手项目，终究觉得边看边忘。终于有机会好好学习。一鼓作气～&lt;/p&gt;
&lt;p&gt;waiting&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.the5fire.com/tag/backbone/"&gt;Backbonejs入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/the5fire/backbonejs-learning-note"&gt;Backbone.js入门教程第二版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feliving.github.io/developing-backbone-applications/"&gt;Developing Backbone.js Applications(中文版)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate><guid>tag:,2014-07-23:learn-backbone.html</guid><category>edx</category></item><item><title>利用github来深入源码</title><link>/github-edx.html</link><description>&lt;p&gt;最近在折腾edx，edx是我截至目前，见过最庞大的django项目。麻省理工和哈佛大学在这个项目中各资助了三千万美元，代码量可想而知。&lt;/p&gt;
&lt;p&gt;在错综复杂的源码森林里，如何行走，不至于迷失，而能有所收获是个很普遍的问题。&lt;/p&gt;
&lt;p&gt;读别人代码和自个儿写代码是很不相同的。读人家代码，有时你会有一种想揍作者的感觉。其实许多时候是你习惯以己度人而已。&lt;/p&gt;
&lt;p&gt;试着去理解而不是急着去批评。我想这应当作为我们的起点。其实又岂止适用于读代码。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;那么我们该如何阅读别人的代码。&lt;/p&gt;
&lt;p&gt;此类问题，知乎中有几个回答不错，值得一读。&lt;a href="http://www.zhihu.com/question/21186887"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此外也推荐&lt;a href="http://book.douban.com/subject/1151672/"&gt;这本书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们今天不谈论源码阅读的艺术，只谈论如何利用github来帮助我们阅读代码。&lt;/p&gt;
&lt;p&gt;泡上一杯咖啡，我们开始吧～&lt;/p&gt;
&lt;h2&gt;为何使用github来阅读源码&lt;/h2&gt;
&lt;h3&gt;托管了世界上绝大多的开源代码库&lt;/h3&gt;
&lt;h3&gt;完整的资料，源码，文档，issue...&lt;/h3&gt;
&lt;h3&gt;代码高亮&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img alt="0" src="http://wwjpic.qiniudn.com/light.png" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;库内搜索&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img alt="1" src="http://wwjpic.qiniudn.com/search.png" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;gist做代码片段笔记&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img alt="2" src="http://wwjpic.qiniudn.com/gist.png" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;fork项目,之后使用fork库中的wiki来记录阅读笔记&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img alt="3" src="http://wwjpic.qiniudn.com/wiki.png" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;使用url精确定位到行数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img alt="4" src="http://wwjpic.qiniudn.com/code-url.png" /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;如何使用&lt;/h2&gt;
&lt;p&gt;大家可以看下我阅读edx项目时做的&lt;a href="https://github.com/wwj718/wwj718.github.com/wiki/edx%E8%AF%BE%E7%A8%8B%E6%90%9C%E7%B4%A2"&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用IDE阅读当然也是挺方便在代码中穿梭的。   &lt;/p&gt;
&lt;p&gt;可我觉得阅读代码重要的不只是定位。而是如何随时记录，让你的阅读过程不会随着时间的中断而中断，这样我们的阅读过程是可积累的。对于大型项目，我们不能太过于依赖记忆力，尤其是我这种记忆力渣渣的渣渣，我更倾向于求助于工具。技术解放大脑～这样大脑内存就可以去存储更多有趣的东西了，诗词歌赋文章歌词泡妞策略 and so on ...&lt;/p&gt;
&lt;p&gt;其实这有点像阅读时能随时做批注，github项目自带的wiki是个不错的选择，我们同时打开项目源码和wiki页面，阅读到某处，需要做笔记时，切换到wiki页面记录。&lt;/p&gt;
&lt;p&gt;我们使用markdown语法，可以轻易记录源码位置链接。具体实例参考的我的wiki&lt;/p&gt;
&lt;p&gt;那么精确到行的url链接是如何取得的呢。  其实很简单。&lt;br /&gt;
鼠标在某行前边的数字上点击，你看浏览器导航栏里的url就发生变化了，完整复制下url就行。&lt;/p&gt;
&lt;p&gt;泡上一杯咖啡，读你的源码去吧。&lt;/p&gt;
&lt;p&gt;现在你再也不用害怕阅读过程被打断了。&lt;/p&gt;
&lt;p&gt;你看妹子给你来微信了是吧，停下手头工作勾搭妹子去吧。随时回来你都可以继续你的源码阅读～&lt;/p&gt;
&lt;p&gt;简直像断点续传有木有！！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Fri, 18 Jul 2014 00:00:00 +0000</pubDate><guid>tag:,2014-07-18:github-edx.html</guid><category>edx</category></item><item><title>mako学习笔记</title><link>/learn-mako.html</link><description>&lt;p&gt;edx抛弃了django自身的模板，选择使用mako。&lt;/p&gt;
&lt;h2&gt;关于mako&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Mako is a template library written in Python.  Mako's syntax and API borrows from the best ideas of many others, including Django and Jinja2 templates, Cheetah, Myghty, and Genshi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;mako设计哲学&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Python is a great scripting language. Don't reinvent the wheel...your templates can handle it !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;中文文档(摘自&lt;a href="http://www.yeolar.com/note/2012/08/28/mako-syntax"&gt;这儿&lt;/a&gt;)&lt;/h2&gt;
&lt;h4&gt;表达式替换&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from mako.template import Template
t = Template(&amp;#39;hello, ${name}!&amp;#39;)
print t.render(name=&amp;#39;yeolar&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;${} 标签中的内容由Python直接计算，因此也可以使用完整的表达式：&lt;/p&gt;
&lt;h4&gt;表达式转义&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;${&amp;quot;this is some text&amp;quot; | u}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;u 表示URL转义， h 表示HTML转义， x 表示XML转义， trim 为空白截断函数。&lt;/p&gt;
&lt;p&gt;更多有关内建的过滤函数，包括如何编写自己的过滤函数，见&lt;a href="http://docs.makotemplates.org/en/latest/filtering.html"&gt;Filtering and Buffering&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;控制结构&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;% for a in [&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;three&amp;#39;, &amp;#39;four&amp;#39;, &amp;#39;five&amp;#39;]:
    % if a[0] == &amp;#39;t&amp;#39;:
    its two or three
    % elif a[0] == &amp;#39;f&amp;#39;:
    four/five
    % else:
    one
    % endif
% endfor
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;控制结构写成 % 标记后面跟正常的Python控制表达式&lt;/p&gt;
&lt;p&gt;% 可以放在前面没有文本的行的任何地方，并且缩进是不敏感的。Python所有的“冒号”表达式都可以使用，包括 if/elif/else 、 while 、 for ，甚至是 def ，不过对 def Mako有更好的内建标签。&lt;/p&gt;
&lt;h4&gt;循环上下文&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;% for a in (&amp;quot;one&amp;quot;, &amp;quot;two&amp;quot;, &amp;quot;three&amp;quot;):
    &amp;lt;li&amp;gt;Item ${loop.index}: ${a}&amp;lt;/li&amp;gt;
% endfor
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;注释&lt;/h4&gt;
&lt;p&gt;有两种形式的注释。单行注释在行首使用 ##&lt;/p&gt;
&lt;p&gt;多行注释通过
&lt;code&gt;&amp;lt;%doc&amp;gt;&amp;lt;/%doc&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Python代码块&lt;/h4&gt;
&lt;p&gt;可以用 &amp;lt;% %&amp;gt; 标签引入任意Python代码块  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;%
    x = db.get_resource(&amp;#39;foo&amp;#39;)
    y = [z.element for z in x if x.frobnizzle==5]
%&amp;gt;
% for elem in y:
    element: ${elem}
% endfor
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&amp;lt;% %&amp;gt; 里面，可以写普通的Python代码块。代码的整体缩进不受限制&lt;/p&gt;
&lt;h4&gt;模块级的块&lt;/h4&gt;
&lt;p&gt;用 &amp;lt;%! %&amp;gt; 表示  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;%!
    import mylib
    import re

    def filter(text):
        return re.sub(r&amp;#39;^@&amp;#39;, &amp;#39;&amp;#39;, text)
%&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;代码不能访问模板的上下文&lt;/p&gt;
&lt;p&gt;放在所有渲染调用之前。&lt;/p&gt;
&lt;h4&gt;标签&lt;/h4&gt;
&lt;p&gt;Mako提供的其他东西以标签的形式出现。所有标签使用相同的语法，和XML标签类似，但是在标签名之前加上了 % 字符。标签结束方式和XML类似：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;%include file=&amp;quot;foo.txt&amp;quot;/&amp;gt;

&amp;lt;%def name=&amp;quot;foo&amp;quot; buffered=&amp;quot;True&amp;quot;&amp;gt;
    this is a def
&amp;lt;/%def&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&amp;lt;%page&amp;gt; ：该标签定义了模板的一些通用特性，包括缓存参数和模板调用的参数的可选列表。&lt;/li&gt;
&lt;li&gt;&amp;lt;%include&amp;gt;：%include 接受一个文件参数，调用那个文件的渲染结果&lt;/li&gt;
&lt;li&gt;&amp;lt;%def&amp;gt;：%def 标签定义一个Python函数，函数可以在模板的其他位置调用。&lt;/li&gt;
&lt;li&gt;&amp;lt;%block&amp;gt;：借鉴了Jinja2的块，有名字的块实现了一种很方便的继承方法&lt;/li&gt;
&lt;li&gt;&amp;lt;%namespace&amp;gt;：和Python的 import 语句等价&lt;/li&gt;
&lt;li&gt;&amp;lt;%inherit&amp;gt;：通过继承可以实现模板的继承链。它和其他模板语言的概念类似。&lt;/li&gt;
&lt;li&gt;&amp;lt;% return %&amp;gt;：有时你想在模板或 &amp;lt;%def&amp;gt; 方法的中间停止处理，只用当前得到的结果&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;一些笔记&lt;/h2&gt;
&lt;h4&gt;&lt;a href="http://docs.makotemplates.org/en/latest/namespaces.html"&gt;namespace&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Namespaces are used to organize groups of defs into categories, and also to “import” defs from other files.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很像python中的模块。类比模块的思路可以很快理解&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;## components.html
&amp;lt;%def name=&amp;quot;comp1()&amp;quot;&amp;gt;
    this is comp1
&amp;lt;/%def&amp;gt;

&amp;lt;%def name=&amp;quot;comp2(x)&amp;quot;&amp;gt;
    this is comp2, x is ${x}
&amp;lt;/%def&amp;gt;

## index.html
&amp;lt;%namespace name=&amp;quot;comp&amp;quot; file=&amp;quot;components.html&amp;quot;/&amp;gt;

Here&amp;#39;s comp1:  ${comp.comp1()}
Here&amp;#39;s comp2:  ${comp.comp2(x=5)}

##可以包含import属性
&amp;lt;%namespace file=&amp;quot;components.html&amp;quot; import=&amp;quot;comp1, comp2&amp;quot;/&amp;gt;
Heres comp1:  ${comp1()}
Heres comp2:  ${comp2(x=5)}
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;&lt;a href="http://docs.makotemplates.org/en/latest/defs.html"&gt;Defs and Blocks&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;%def&amp;gt; provides a construct that is very much like a named Python def, the &amp;lt;%block&amp;gt; is more layout oriented.&lt;/p&gt;
&lt;p&gt;named blocks can be referred to by an inheriting template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;%def name=&amp;quot;hello()&amp;quot;&amp;gt;
    hello world
&amp;lt;/%def&amp;gt;

the def:  ${hello()}
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;&lt;a href="http://docs.makotemplates.org/en/latest/inheritance.html"&gt;inheritance&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;## index.html
&amp;lt;%inherit file=&amp;quot;base.html&amp;quot;/&amp;gt;

&amp;lt;%block name=&amp;quot;header&amp;quot;&amp;gt;
    this is some header content
&amp;lt;/%block&amp;gt;

this is the body content.

## base.html
&amp;lt;html&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class=&amp;quot;header&amp;quot;&amp;gt;
            &amp;lt;%block name=&amp;quot;header&amp;quot;/&amp;gt;
        &amp;lt;/div&amp;gt;

        ${self.body()}

        &amp;lt;div class=&amp;quot;footer&amp;quot;&amp;gt;
            &amp;lt;%block name=&amp;quot;footer&amp;quot;&amp;gt;
                this is the footer
            &amp;lt;/%block&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

##output
&amp;lt;html&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class=&amp;quot;header&amp;quot;&amp;gt;
            this is some header content
        &amp;lt;/div&amp;gt;

        this is the body content.

        &amp;lt;div class=&amp;quot;footer&amp;quot;&amp;gt;
            this is the footer
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;defs和block的区别
The def simply doesn’t call itself automatically。&lt;/p&gt;
&lt;p&gt;以下两者等效&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;##def
&amp;lt;%def name=&amp;quot;header()&amp;quot;&amp;gt;&amp;lt;/%def&amp;gt;${self.header()}

##block
&amp;lt;%block name=&amp;quot;header()&amp;quot;&amp;gt;&amp;lt;/%block&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;参考教程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.makotemplates.org/en/latest/"&gt;docs.makotemplates.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://help.42qu.com/code/mako.html"&gt;mako 模板入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yeolar.com/note/2012/08/28/mako-syntax/"&gt;Python模板库Mako的语法（译自官方文档）&lt;/a&gt;*  &lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate><guid>tag:,2014-07-14:learn-mako.html</guid><category>edx</category></item><item><title>管理与配置edx</title><link>/edx-custom.html</link><description>&lt;p&gt;主要是参考&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Production-Stack"&gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;做些记录,备忘.&lt;/p&gt;
&lt;h3&gt;create superuser&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /edx/app/edxapp/edx-platform
sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings aws create_user -e wwj@qq.com
sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings aws changepassword wwj
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;登陆到django后台 /admin&lt;/h3&gt;
&lt;h4&gt;承上&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u www-data /edx/bin/python.edxapp ./manage.py lms --settings aws shell
from django.contrib.auth.models import User
&lt;span class="nv"&gt;me&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; User.objects.get&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wwj&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
me.is_superuser &lt;span class="o"&gt;=&lt;/span&gt; True
me.is_staff &lt;span class="o"&gt;=&lt;/span&gt; True
me.save&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;定制主题应当放到汉化之前,否则汉化会被覆盖.原因是定制主题中设计更新代码.&lt;/p&gt;
&lt;h3&gt;定制主题&lt;/h3&gt;
&lt;p&gt;参考&lt;a href="https://github.com/edx/edx-platform/wiki"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;采用手动编译&lt;/p&gt;
&lt;p&gt;参考&lt;a href="https://github.com/edx/edx-platform/wiki/Stanford-Theming"&gt;Stanford-Theming&lt;/a&gt;&lt;br /&gt;
theme-name统一用stanford&lt;/p&gt;
&lt;p&gt;命名统一用小写&lt;/p&gt;
&lt;p&gt;更深度的定制，需要修改模板&lt;a href="http://help.42qu.com/code/mako.html"&gt;mako&lt;/a&gt;.&lt;br /&gt;
关于mako:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zzzeek/mako"&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.makotemplates.org/"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.makotemplates.org/en/latest/"&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;汉化&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /edx/app/edxapp/edx-platform

:::text
sudo apt-get install transifex-client
vim ~/.transifexrc


[https://www.transifex.com]
hostname = https://www.transifex.com
username = user
password = pass
token =


chmod o+rw ~/.transifexrc
sudo -u edxapp bash
source /edx/app/edxapp/edxapp_env
cd /edx/app/edxapp/edx-platform
vim ../lms.env.json


&amp;quot;USE_I18N&amp;quot;: true, #新增
&amp;quot;LANGUAGE_CODE&amp;quot;: &amp;quot;zh_CN&amp;quot;

vim ../cms.env.json

&amp;quot;USE_I18N&amp;quot;: true, #新增
&amp;quot;LANGUAGE_CODE&amp;quot;: &amp;quot;zh_CN&amp;quot;

tx pull -l zh_CN
paver i18n_generate
paver update_assets lms --settings aws
paver update_assets cms --settings aws
exit
sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp:
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;邮件&lt;/h3&gt;
&lt;p&gt;在(*)ms.env.json中添加:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;EMAIL_HOST&amp;quot;: &amp;quot;smtp.qq.com&amp;quot;,
&amp;quot;EMAIL_PORT&amp;quot;: 25,
&amp;quot;EMAIL_USE_TLS&amp;quot;: true,
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意将"DEFAULT_FROM_EMAIL"改为你自己的邮箱，否则无法发送&lt;/p&gt;
&lt;p&gt;在(*)ms.auth.json适当位置处添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;EMAIL_HOST_USER&amp;quot;: &amp;quot;*****&amp;quot;,
&amp;quot;EMAIL_HOST_PASSWORD&amp;quot;:&amp;quot;*****&amp;quot;,
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;重启edxapp&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp:
sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp_worker:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;单步调试  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -u www-data /edx/app/edxapp/venvs/edxapp/bin/python ./manage.py lms --settings aws shell
from django.core.mail import send_mail
send_mail(u&amp;#39;邮件标题&amp;#39;, u&amp;#39;邮件内容&amp;#39;, &amp;#39;123@qq.com&amp;#39;, [&amp;#39;456@qq.com&amp;#39;], 
fail_silently=False)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;成功了~&lt;/p&gt;
&lt;h3&gt;日志&lt;/h3&gt;
&lt;p&gt;/var/log/mail.log  邮件
/edx/var/log/&lt;/p&gt;
&lt;h3&gt;反向代理&lt;/h3&gt;
&lt;p&gt;studio&lt;br /&gt;
nginx反向代理。studio.example.com指向studio&lt;/p&gt;
&lt;h3&gt;定制主题&lt;/h3&gt;
&lt;p&gt;诸如IONISx,修改完less之后，删除static/main.css，执行grunt.&lt;br /&gt;
之后还要&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Production-Stack#compile-assets-manually"&gt;recompile the LMS assets.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;less需要编译，而templates可以直接改，立刻生效，就是说theme的路径是在搜索路径中的，并不需要将文件复制进去。theme可以多个。按名字启用。&lt;/p&gt;
&lt;h4&gt;静态文件&lt;/h4&gt;
&lt;p&gt;静态文件可以考虑先丢在外部，避免牵扯static&lt;/p&gt;
&lt;h3&gt;拓展edx,添加自己的django app&lt;/h3&gt;
&lt;p&gt;setting环境默认是env/aws.py，许多设置在common.py里
注意模板的特殊性,使用的是mako,而不是django自带的。&lt;br /&gt;
每次修改完，需要&lt;br /&gt;
&lt;code&gt;sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp:&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;使用自己的edx-platform&lt;/h3&gt;
&lt;p&gt;修改&lt;a href="https://github.com/edx/configuration/blob/master/playbooks/roles/edxapp/defaults/main.yml#L608"&gt;这里&lt;/a&gt;.&lt;br /&gt;
configuration，最近一次使用的是14-7-2&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 03 Jun 2014 00:00:00 +0000</pubDate><guid>tag:,2014-06-03:edx-custom.html</guid><category>edx</category></item><item><title>在ubuntu12.04 32bit上直接部署edx生产环境</title><link>/edx-Production-stack-installation-on-a-single-Ubuntu-12.04(32bit).html</link><description>&lt;p&gt;&lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;官方教程&lt;/a&gt;要求机器是64位。&lt;/p&gt;
&lt;p&gt;最近学校提供的服务器只有32位的。&lt;/p&gt;
&lt;p&gt;好吧，32位就32位。&lt;/p&gt;
&lt;p&gt;首先自然是安装ubuntu12.04 32bit &lt;/p&gt;
&lt;p&gt;大多数步骤和我的这篇教程相似&lt;a href="http://wwj718.github.io/edx-Production-stack-installation-on-a-single-Ubuntu-12.04(64bit).html"&gt;在ubuntu12.04上直接部署edx生产环境&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;遇到的问题总结&lt;/h2&gt;
&lt;h3&gt;首先需要注意的是&lt;a href="https://github.com/edx/configuration/blob/a137e9cea6a97b80464b4fd3c148a57ccca80e9b/playbooks/roles/oraclejdk/defaults/main.yml"&gt;oraclejdk&lt;/a&gt;的默认版本是x64，我们需要的是32位的，所以将&lt;code&gt;/var/tmpconfiguration/playbooks/roles/oraclejdk/defaults/main.yml&lt;/code&gt;中的&lt;code&gt;oraclejdk_arch: "x64"&lt;/code&gt;中的&lt;code&gt;x64&lt;/code&gt;改为&lt;code&gt;i586&lt;/code&gt;&lt;/h3&gt;
&lt;h3&gt;npm直接注释掉&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/var/tmp/configuration/playbooks/roles/xqueue/defaults/main.yml&lt;/code&gt;将&lt;code&gt;xqueue_debian_pkgs&lt;/code&gt;
中的npm注释掉.&lt;br /&gt;
最新的nodejs已经自带npm了&lt;/p&gt;
&lt;h3&gt;手动安装python依赖&lt;/h3&gt;
&lt;p&gt;自动安装的时候爆出很多错误，不清楚是不是权限问题。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;其实写这篇文章的主要原因是，在这次的部署过程中，更多地使用了手动部署，对edx的部署过程的更多细节有了了解 ，统一做个笔记。&lt;/p&gt;
&lt;p&gt;采用的是最新版本的edx（时间为2014-7-9）&lt;/p&gt;
&lt;h3&gt;从某个任务开始&lt;/h3&gt;
&lt;p&gt;这样可以避免重复性的安装已经完成的task，需要注意的是不少task可能依赖与它之前的task所进行的配置,所以有时需要后退几个任务&lt;/p&gt;
&lt;pre&gt;
cd /var/tmp/configuration/playbooks &amp;&amp; sudo ansible-playbook -c local ./edx_sandbox.yml -i "localhost,"  --start-at-task="TASKNAME"
&lt;/pre&gt;

&lt;h3&gt;关于playbook&lt;/h3&gt;
&lt;h4&gt;对tast的理解&lt;/h4&gt;
&lt;h3&gt;修改pip 镜像地址&lt;/h3&gt;
&lt;p&gt;extra_args="-i {{ COMMON_PYPI_MIRROR_URL }}"&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate><guid>tag:,2014-06-02:edx-Production-stack-installation-on-a-single-Ubuntu-12.04(32bit).html</guid><category>edx</category></item><item><title>在ubuntu12.04上直接部署edx生产环境</title><link>/edx-Production-stack-installation-on-a-single-Ubuntu-12.04(64bit).html</link><description>&lt;p&gt;主要是参考&lt;a href="https://github.com/edx/configuration/wiki/edX-Ubuntu-12.04-64-bit-Installation"&gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本地环境：&lt;code&gt;ubuntu12.04 64位&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;更新系统&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update -y
sudo apt-get upgrade -y
sudo reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;使用vpn,保证网络能畅通连接到国外,你懂的.&lt;/h3&gt;
&lt;p&gt;我使用的是sshuttle,可参考&lt;a href="http://wwj718.github.io/use-sshuttle.html"&gt;我的博客&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;获取vagrant.sh脚本&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://raw.github.com/edx/configuration/master/util/install/vagrant.sh -O - | bash
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;遇到问题&lt;/h3&gt;
&lt;p&gt;执行vagrant.sh简本如果在nltk出错,按以下方法解决.&lt;/p&gt;
&lt;h4&gt;手动下载nltk&lt;/h4&gt;
&lt;p&gt;主要参考了这个&lt;a href="http://www.idefs.com/walk-tongji-university-shanghai.html"&gt;博客&lt;/a&gt;.&lt;br /&gt;
感谢竹轩同学的分享.&lt;/p&gt;
&lt;p&gt;nltk有近700M,手动下载,避免时间太久网络断开&lt;/p&gt;
&lt;p&gt;注：最新的代码，&lt;a href="https://github.com/edx/configuration/blob/62df7fcea53658538a5e5fe89cfe34de15b7caa0/playbooks/roles/discern/tasks/deploy.yml"&gt;位置&lt;/a&gt;有变.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/tmp
wget http://edx-static.s3.amazonaws.com/nltk/nltk-data-20131113.tar.gz
chmod o+rw nltk-data-20131113.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改&lt;code&gt;/var/tmp/configuration/playbooks/edx-east/roles/ora/tasks/ease.yml&lt;/code&gt; 中的&lt;code&gt;download and install nltk&lt;/code&gt;任务内容为:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;- name: download and install nltk&lt;/span&gt;
&lt;span class="x"&gt;  shell: |&lt;/span&gt;
&lt;span class="x"&gt;      set -e&lt;/span&gt;
&lt;span class="x"&gt;      cp /var/tmp/nltk-data-20131113.tar.gz &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ora_nltk_tmp_file&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;      tar zxf &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ora_nltk_tmp_file&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;      rm -f &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ora_nltk_tmp_file&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;      touch &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ora_nltk_download_url&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;-installed&lt;/span&gt;
&lt;span class="x"&gt;        creates=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ora_data_dir&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ora_nltk_download_url&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;-installed&lt;/span&gt;
&lt;span class="x"&gt;        chdir=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;ora_data_dir&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;  sudo_user: &amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;common_web_user&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  notify:&lt;/span&gt;
&lt;span class="x"&gt;    - restart ora&lt;/span&gt;
&lt;span class="x"&gt;    - restart ora_celery&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;修改&lt;code&gt;/var/tmp/configuration/playbooks/edx-east/roles/discern/tasks/deploy.yml&lt;/code&gt; 中的&lt;code&gt;download and install nltk&lt;/code&gt;任务内容为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;- name: download and install nltk&lt;/span&gt;
&lt;span class="x"&gt;  shell: |&lt;/span&gt;
&lt;span class="x"&gt;      set -e&lt;/span&gt;
&lt;span class="x"&gt;      cp /var/tmp/nltk-data-20131113.tar.gz &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_nltk_tmp_file&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;      tar zxf &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_nltk_tmp_file&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;      rm -f &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_nltk_tmp_file&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;      touch &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_nltk_download_url&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;-installed&lt;/span&gt;
&lt;span class="x"&gt;        creates=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_data_dir&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_nltk_download_url&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;basename&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;-installed&lt;/span&gt;
&lt;span class="x"&gt;        chdir=&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_data_dir&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;  sudo_user: &amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;discern_user&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;  notify:&lt;/span&gt;
&lt;span class="x"&gt;    - restart discern&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;手动下载django1.4.3&lt;/h4&gt;
&lt;p&gt;期间出现出现无法找到安装包的错误&lt;br /&gt;
按照提示手动安装1.4.3 &lt;br /&gt;
&lt;code&gt;sudo /edx/app/venvs/ora/bin/pip install django==1.4.3&lt;/code&gt;&lt;br /&gt;
顺便将&lt;code&gt;/edx/app/ora/ora/requirements.txt&lt;/code&gt;里出错的&lt;code&gt;django==1.4.3&lt;/code&gt;注释掉&lt;br /&gt;
此外期间会遇到的基本都是网络问题.&lt;br /&gt;
如果出现错误,重新连接sshuttle后,执行以下命令  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /var/tmp/configuration/playbooks &amp;amp;&amp;amp; sudo ansible-playbook -c local ./edx_sandbox.yml -i &amp;quot;localhost,&amp;quot; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装完的东西会跳过.&lt;/p&gt;
&lt;p&gt;如果网络顺畅,基本就可以直接部署好了.&lt;/p&gt;
&lt;h3&gt;安装完毕后,默认开机自动启动&lt;/h3&gt;
&lt;h3&gt;next&lt;/h3&gt;
&lt;p&gt;之后会在我的博客上记录汉化和更换主题的教程&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate><guid>tag:,2014-06-02:edx-Production-stack-installation-on-a-single-Ubuntu-12.04(64bit).html</guid><category>edx</category></item><item><title>edx之安装fullstack</title><link>/edx-fullstack-installation.html</link><description>&lt;p&gt;主要是参考&lt;a href="https://github.com/edx/configuration/wiki/edx-Production-stack--installation-using-Vagrant-Virtualbox"&gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本地环境：&lt;code&gt;ubuntu12.04&lt;/code&gt;  &lt;/p&gt;
&lt;h3&gt;准备工作：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://downloads.vagrantup.com"&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我所采用的版本为：&lt;a href="http://download.virtualbox.org/virtualbox/4.3.10/virtualbox-4.3_4.3.10-93012~Ubuntu~precise_i386.deb"&gt;VirtualBox v4.3.10&lt;/a&gt; ， &lt;a href="https://dl.bintray.com/mitchellh/vagrant/vagrant_1.6.2_i686.deb"&gt;Vagrant 1.6.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外需要注意 ， 得有足够大的剩余磁盘空间(建议剩余20G以上)&lt;/p&gt;
&lt;h3&gt;开始安装&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;mkdir fullstack&lt;/li&gt;
&lt;li&gt;cd fullstack&lt;/li&gt;
&lt;li&gt;curl -L https://raw.githubusercontent.com/edx/configuration/master/vagrant/release/fullstack/Vagrantfile &amp;gt; Vagrantfile  (这一步耗时很久,需要下载接近5G的包)&lt;/li&gt;
&lt;li&gt;安装ruby和gem&lt;/li&gt;
&lt;li&gt;vagrant plugin install vagrant-hostsupdater  (该命令如果失败,&lt;code&gt;cd ..&lt;/code&gt;之后再执行该命令)&lt;/li&gt;
&lt;li&gt;vagrant up&lt;br /&gt;
完成以上步骤后edx就跑起来了,可通过以下两种方式访问:&lt;/li&gt;
&lt;li&gt;http://192.168.33.10/   lms(学生系统)&lt;/li&gt;
&lt;li&gt;http://192.168.33.10:18010  cms(课件制作系统)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;管理edx&lt;/h3&gt;
&lt;p&gt;参考&lt;a href="https://github.com/edx/configuration/wiki/edX-Managing-the-Production-Stack"&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先需要登陆系统(登陆到虚拟机):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cd fullstack&lt;/li&gt;
&lt;li&gt;vagrant ssh.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后再执行其他操作.&lt;/p&gt;
&lt;h3&gt;安装主题&lt;/h3&gt;
&lt;p&gt;我使用斯坦福开源的主题,之后自己定制.&lt;/p&gt;
&lt;p&gt;vi /edx/app/edx_ansible/server-vars.yml , 添加以下内容:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;edxapp_use_custom_theme&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;edxapp_theme_name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;stanford&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;edxapp_theme_source_repo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git://github.com/Stanford-Online/edx-theme.git&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;edxapp_theme_version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HEAD&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之后进行更新&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /edx/bin/update edx-platform master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上命令会将系统更新至github上的最新版本.需要耗费一些时间.如果出错基本是网络的原因,重新执行以上命令,或等待网络较好时执行.&lt;br /&gt;
此外在执行以上命令时更换pip的源能加快速度.&lt;br /&gt;
更换pip的源: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cd  ~/&lt;/li&gt;
&lt;li&gt;mkdir .pip&lt;/li&gt;
&lt;li&gt;vi pip.conf 加入以下内容:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[global]&lt;/span&gt;
&lt;span class="na"&gt;index-url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;http://mirrors.bistu.edu.cn/pypi/simple&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;定制前台&lt;/h3&gt;
&lt;p&gt;本质上是修改主题包.&lt;br /&gt;
主题包的位置:&lt;code&gt;/edx/app/edxapp/themes&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;本地化(汉化)&lt;/h3&gt;
&lt;p&gt;参考&lt;a href="http://d.edustack.org/t/hyperv-master/9/2"&gt;这里&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sudo apt-get install transifex-client&lt;/li&gt;
&lt;li&gt;vi ~/.transifexrc,加入以下内容:(注意:user,pass是www.transifex.com网站的用户名和密码,需要先注册)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transifex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transifex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;
&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;chmod o+rw ~/.transifexrc&lt;/li&gt;
&lt;li&gt;sudo -u edxapp bash&lt;/li&gt;
&lt;li&gt;source /edx/app/edxapp/edxapp_env&lt;/li&gt;
&lt;li&gt;cd /edx/app/edxapp/edx-platform&lt;/li&gt;
&lt;li&gt;vi lms/envs/common.py 加入 &lt;code&gt;LANGUAGE_CODE = 'zh_CN'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;vi cms/envs/common.py 加入 &lt;code&gt;LANGUAGE_CODE = 'zh_CN'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;tx pull -a&lt;/li&gt;
&lt;li&gt;rake i18n:generate&lt;/li&gt;
&lt;li&gt;rake lms:gather_assets:aws&lt;/li&gt;
&lt;li&gt;rake cms:gather_assets:aws&lt;/li&gt;
&lt;li&gt;exit&lt;/li&gt;
&lt;li&gt;sudo /edx/bin/supervisorctl -c /edx/etc/supervisord.conf restart edxapp:
需要等一短时间再访问,否则可能出现502错误.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Tue, 13 May 2014 00:00:00 +0000</pubDate><guid>tag:,2014-05-13:edx-fullstack-installation.html</guid><category>edx</category></item><item><title>edx安装笔记</title><link>/edx-install.html</link><description>&lt;p&gt;基本上按照&lt;a href="http://blog.coursegraph.com/安装开源在线教育平台edX的一个简单方法"&gt;这个教程&lt;/a&gt;做(实际上这个教程是翻译自&lt;a href="https://people.csail.mit.edu/ichuang/edx/"&gt;这里&lt;/a&gt;)，期间出现过两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;磁盘空间不够&lt;/li&gt;
&lt;li&gt;Preparing network interfaces时出错。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;均解决 &lt;/p&gt;
&lt;p&gt;环境：&lt;code&gt;ubuntu12.04&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;1 . 准备工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://downloads.vagrantup.com"&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我所采用的版本为：VirtualBox v4.3.2  ， Vagrant 1.3.5&lt;br /&gt;
我在使用低版本时，Preparing network interfaces based on configuration...这个阶段出现错误，所以换为高版本.&lt;br /&gt;
另外需要注意 ， 得有足够大的剩余磁盘空间  &lt;/p&gt;
&lt;p&gt;2  . 建立相关的目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mkdir mitx-vagrant&lt;/li&gt;
&lt;li&gt;cd mitx-vagrant&lt;/li&gt;
&lt;li&gt;mkdir data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3 . 下载的课程样例:下载&lt;a href="https://github.com/mitocw/edx4edx_lite"&gt;edx4edx_lite&lt;/a&gt;到&lt;code&gt;data&lt;/code&gt;目录下&lt;/p&gt;
&lt;p&gt;4  . 下载这个3.4G的镜像（下载到mitx-vagrant目录下）： &lt;a href="https://people.csail.mit.edu/ichuang/edx/download.php?file=mitxvm-edx-platform-08jun13b.box"&gt;mitxvm-edx-platform-08jun13b.box&lt;/a&gt;,或者下载这个&lt;a href="https://people.csail.mit.edu/ichuang/edx/download.php?file=mitxvm-edx-platform-02sep13a.box"&gt;较新的版本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;5  . vargrant初始化(在mitx-vagrant目录下)：vagrant init mitxvm mitxvm-edx-platform-08jun13b.box&lt;/p&gt;
&lt;p&gt;6  、启动环境：vagrant up （这个需要一段时间）&lt;/p&gt;
&lt;p&gt;7  、在上述工作完成后，就可以在本地局域网下访问相应的站点了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://192.168.42.2 — LMS（学习管理系统，也就是学生用的系统，我们在edX公开课平台上看到的就是，这个本地站点目前只有edx4edx样例课程）&lt;/li&gt;
&lt;li&gt;http://192.168.42.3 — CMS (Studio)（内容管理系统，也就是开课老师用的系统，你可以在这个里面尝试编辑和创建课程）&lt;/li&gt;
&lt;li&gt;http://192.168.42.4 — Preview (Studio)&lt;/li&gt;
&lt;li&gt;http://192.168.42.5 — Edge (Studio)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;其他&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vagrant ssh&lt;/code&gt; 连接到虚拟机里，那样你就像操作远程系统一样操作它.&lt;code&gt;sudo -s&lt;/code&gt;,&lt;code&gt;apt-get install vim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把整个虚拟环境放到移动硬盘里会很方便&lt;/li&gt;
&lt;li&gt;修改样式(覆盖templates与static就行)&lt;ul&gt;
&lt;li&gt;vagrant ssh之后 cd ~/edx_all/edx-platform/lms/templates &lt;/li&gt;
&lt;li&gt;vi index.html&lt;/li&gt;
&lt;li&gt;wq之后,刷新页面。生效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;edx使用了&lt;a href="http://help.42qu.com/code/mako.html"&gt;mako模板&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;参考资料：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.coursegraph.com/安装开源在线教育平台edX的一个简单方法"&gt;安装开源在线教育平台edX的一个简单方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.csail.mit.edu/ichuang/edx/"&gt;Quick Start to working with the edX Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wuwenjie</dc:creator><pubDate>Sat, 26 Apr 2014 00:00:00 +0000</pubDate><guid>tag:,2014-04-26:edx-install.html</guid><category>edx</category></item></channel></rss>